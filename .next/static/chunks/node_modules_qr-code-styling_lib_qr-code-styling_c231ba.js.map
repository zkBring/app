{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"file":"qr-code-styling.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/webpack/universalModuleDefinition","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/node_modules/qrcode-generator/qrcode.js","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/webpack/bootstrap","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/webpack/runtime/compat%20get%20default%20export","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/webpack/runtime/define%20property%20getters","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/webpack/runtime/hasOwnProperty%20shorthand","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/constants/modes.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/tools/merge.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/tools/downloadURI.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/constants/errorCorrectionPercents.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/figures/dot/QRDot.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/constants/dotTypes.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/constants/cornerSquareTypes.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/figures/cornerSquare/QRCornerSquare.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/constants/cornerDotTypes.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/figures/cornerDot/QRCornerDot.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/constants/gradientTypes.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/constants/shapeTypes.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/core/QRSVG.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/tools/calculateImageSize.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/tools/toDataUrl.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/constants/drawTypes.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/constants/qrTypes.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/core/QROptions.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/constants/errorCorrectionLevels.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/tools/sanitizeOptions.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/tools/getMimeType.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/core/QRCodeStyling.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/tools/getMode.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/qr-code-styling/lib/webpack%3A/QRCodeStyling/src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"QRCodeStyling\"] = factory();\n\telse\n\t\troot[\"QRCodeStyling\"] = factory();\n})(this, () => {\nreturn ","//---------------------------------------------------------------------\n//\n// QR Code Generator for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n// The word 'QR Code' is registered trademark of\n// DENSO WAVE INCORPORATED\n//  http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n\nvar qrcode = function() {\n\n  //---------------------------------------------------------------------\n  // qrcode\n  //---------------------------------------------------------------------\n\n  /**\n   * qrcode\n   * @param typeNumber 1 to 40\n   * @param errorCorrectionLevel 'L','M','Q','H'\n   */\n  var qrcode = function(typeNumber, errorCorrectionLevel) {\n\n    var PAD0 = 0xEC;\n    var PAD1 = 0x11;\n\n    var _typeNumber = typeNumber;\n    var _errorCorrectionLevel = QRErrorCorrectionLevel[errorCorrectionLevel];\n    var _modules = null;\n    var _moduleCount = 0;\n    var _dataCache = null;\n    var _dataList = [];\n\n    var _this = {};\n\n    var makeImpl = function(test, maskPattern) {\n\n      _moduleCount = _typeNumber * 4 + 17;\n      _modules = function(moduleCount) {\n        var modules = new Array(moduleCount);\n        for (var row = 0; row < moduleCount; row += 1) {\n          modules[row] = new Array(moduleCount);\n          for (var col = 0; col < moduleCount; col += 1) {\n            modules[row][col] = null;\n          }\n        }\n        return modules;\n      }(_moduleCount);\n\n      setupPositionProbePattern(0, 0);\n      setupPositionProbePattern(_moduleCount - 7, 0);\n      setupPositionProbePattern(0, _moduleCount - 7);\n      setupPositionAdjustPattern();\n      setupTimingPattern();\n      setupTypeInfo(test, maskPattern);\n\n      if (_typeNumber >= 7) {\n        setupTypeNumber(test);\n      }\n\n      if (_dataCache == null) {\n        _dataCache = createData(_typeNumber, _errorCorrectionLevel, _dataList);\n      }\n\n      mapData(_dataCache, maskPattern);\n    };\n\n    var setupPositionProbePattern = function(row, col) {\n\n      for (var r = -1; r <= 7; r += 1) {\n\n        if (row + r <= -1 || _moduleCount <= row + r) continue;\n\n        for (var c = -1; c <= 7; c += 1) {\n\n          if (col + c <= -1 || _moduleCount <= col + c) continue;\n\n          if ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n              || (0 <= c && c <= 6 && (r == 0 || r == 6) )\n              || (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n            _modules[row + r][col + c] = true;\n          } else {\n            _modules[row + r][col + c] = false;\n          }\n        }\n      }\n    };\n\n    var getBestMaskPattern = function() {\n\n      var minLostPoint = 0;\n      var pattern = 0;\n\n      for (var i = 0; i < 8; i += 1) {\n\n        makeImpl(true, i);\n\n        var lostPoint = QRUtil.getLostPoint(_this);\n\n        if (i == 0 || minLostPoint > lostPoint) {\n          minLostPoint = lostPoint;\n          pattern = i;\n        }\n      }\n\n      return pattern;\n    };\n\n    var setupTimingPattern = function() {\n\n      for (var r = 8; r < _moduleCount - 8; r += 1) {\n        if (_modules[r][6] != null) {\n          continue;\n        }\n        _modules[r][6] = (r % 2 == 0);\n      }\n\n      for (var c = 8; c < _moduleCount - 8; c += 1) {\n        if (_modules[6][c] != null) {\n          continue;\n        }\n        _modules[6][c] = (c % 2 == 0);\n      }\n    };\n\n    var setupPositionAdjustPattern = function() {\n\n      var pos = QRUtil.getPatternPosition(_typeNumber);\n\n      for (var i = 0; i < pos.length; i += 1) {\n\n        for (var j = 0; j < pos.length; j += 1) {\n\n          var row = pos[i];\n          var col = pos[j];\n\n          if (_modules[row][col] != null) {\n            continue;\n          }\n\n          for (var r = -2; r <= 2; r += 1) {\n\n            for (var c = -2; c <= 2; c += 1) {\n\n              if (r == -2 || r == 2 || c == -2 || c == 2\n                  || (r == 0 && c == 0) ) {\n                _modules[row + r][col + c] = true;\n              } else {\n                _modules[row + r][col + c] = false;\n              }\n            }\n          }\n        }\n      }\n    };\n\n    var setupTypeNumber = function(test) {\n\n      var bits = QRUtil.getBCHTypeNumber(_typeNumber);\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod;\n      }\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[i % 3 + _moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n      }\n    };\n\n    var setupTypeInfo = function(test, maskPattern) {\n\n      var data = (_errorCorrectionLevel << 3) | maskPattern;\n      var bits = QRUtil.getBCHTypeInfo(data);\n\n      // vertical\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 6) {\n          _modules[i][8] = mod;\n        } else if (i < 8) {\n          _modules[i + 1][8] = mod;\n        } else {\n          _modules[_moduleCount - 15 + i][8] = mod;\n        }\n      }\n\n      // horizontal\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 8) {\n          _modules[8][_moduleCount - i - 1] = mod;\n        } else if (i < 9) {\n          _modules[8][15 - i - 1 + 1] = mod;\n        } else {\n          _modules[8][15 - i - 1] = mod;\n        }\n      }\n\n      // fixed module\n      _modules[_moduleCount - 8][8] = (!test);\n    };\n\n    var mapData = function(data, maskPattern) {\n\n      var inc = -1;\n      var row = _moduleCount - 1;\n      var bitIndex = 7;\n      var byteIndex = 0;\n      var maskFunc = QRUtil.getMaskFunction(maskPattern);\n\n      for (var col = _moduleCount - 1; col > 0; col -= 2) {\n\n        if (col == 6) col -= 1;\n\n        while (true) {\n\n          for (var c = 0; c < 2; c += 1) {\n\n            if (_modules[row][col - c] == null) {\n\n              var dark = false;\n\n              if (byteIndex < data.length) {\n                dark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n              }\n\n              var mask = maskFunc(row, col - c);\n\n              if (mask) {\n                dark = !dark;\n              }\n\n              _modules[row][col - c] = dark;\n              bitIndex -= 1;\n\n              if (bitIndex == -1) {\n                byteIndex += 1;\n                bitIndex = 7;\n              }\n            }\n          }\n\n          row += inc;\n\n          if (row < 0 || _moduleCount <= row) {\n            row -= inc;\n            inc = -inc;\n            break;\n          }\n        }\n      }\n    };\n\n    var createBytes = function(buffer, rsBlocks) {\n\n      var offset = 0;\n\n      var maxDcCount = 0;\n      var maxEcCount = 0;\n\n      var dcdata = new Array(rsBlocks.length);\n      var ecdata = new Array(rsBlocks.length);\n\n      for (var r = 0; r < rsBlocks.length; r += 1) {\n\n        var dcCount = rsBlocks[r].dataCount;\n        var ecCount = rsBlocks[r].totalCount - dcCount;\n\n        maxDcCount = Math.max(maxDcCount, dcCount);\n        maxEcCount = Math.max(maxEcCount, ecCount);\n\n        dcdata[r] = new Array(dcCount);\n\n        for (var i = 0; i < dcdata[r].length; i += 1) {\n          dcdata[r][i] = 0xff & buffer.getBuffer()[i + offset];\n        }\n        offset += dcCount;\n\n        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n        var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\n        var modPoly = rawPoly.mod(rsPoly);\n        ecdata[r] = new Array(rsPoly.getLength() - 1);\n        for (var i = 0; i < ecdata[r].length; i += 1) {\n          var modIndex = i + modPoly.getLength() - ecdata[r].length;\n          ecdata[r][i] = (modIndex >= 0)? modPoly.getAt(modIndex) : 0;\n        }\n      }\n\n      var totalCodeCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalCodeCount += rsBlocks[i].totalCount;\n      }\n\n      var data = new Array(totalCodeCount);\n      var index = 0;\n\n      for (var i = 0; i < maxDcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < dcdata[r].length) {\n            data[index] = dcdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      for (var i = 0; i < maxEcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < ecdata[r].length) {\n            data[index] = ecdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var createData = function(typeNumber, errorCorrectionLevel, dataList) {\n\n      var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectionLevel);\n\n      var buffer = qrBitBuffer();\n\n      for (var i = 0; i < dataList.length; i += 1) {\n        var data = dataList[i];\n        buffer.put(data.getMode(), 4);\n        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n        data.write(buffer);\n      }\n\n      // calc num max data.\n      var totalDataCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalDataCount += rsBlocks[i].dataCount;\n      }\n\n      if (buffer.getLengthInBits() > totalDataCount * 8) {\n        throw 'code length overflow. ('\n          + buffer.getLengthInBits()\n          + '>'\n          + totalDataCount * 8\n          + ')';\n      }\n\n      // end code\n      if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n        buffer.put(0, 4);\n      }\n\n      // padding\n      while (buffer.getLengthInBits() % 8 != 0) {\n        buffer.putBit(false);\n      }\n\n      // padding\n      while (true) {\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD0, 8);\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD1, 8);\n      }\n\n      return createBytes(buffer, rsBlocks);\n    };\n\n    _this.addData = function(data, mode) {\n\n      mode = mode || 'Byte';\n\n      var newData = null;\n\n      switch(mode) {\n      case 'Numeric' :\n        newData = qrNumber(data);\n        break;\n      case 'Alphanumeric' :\n        newData = qrAlphaNum(data);\n        break;\n      case 'Byte' :\n        newData = qr8BitByte(data);\n        break;\n      case 'Kanji' :\n        newData = qrKanji(data);\n        break;\n      default :\n        throw 'mode:' + mode;\n      }\n\n      _dataList.push(newData);\n      _dataCache = null;\n    };\n\n    _this.isDark = function(row, col) {\n      if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {\n        throw row + ',' + col;\n      }\n      return _modules[row][col];\n    };\n\n    _this.getModuleCount = function() {\n      return _moduleCount;\n    };\n\n    _this.make = function() {\n      if (_typeNumber < 1) {\n        var typeNumber = 1;\n\n        for (; typeNumber < 40; typeNumber++) {\n          var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, _errorCorrectionLevel);\n          var buffer = qrBitBuffer();\n\n          for (var i = 0; i < _dataList.length; i++) {\n            var data = _dataList[i];\n            buffer.put(data.getMode(), 4);\n            buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n            data.write(buffer);\n          }\n\n          var totalDataCount = 0;\n          for (var i = 0; i < rsBlocks.length; i++) {\n            totalDataCount += rsBlocks[i].dataCount;\n          }\n\n          if (buffer.getLengthInBits() <= totalDataCount * 8) {\n            break;\n          }\n        }\n\n        _typeNumber = typeNumber;\n      }\n\n      makeImpl(false, getBestMaskPattern() );\n    };\n\n    _this.createTableTag = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var qrHtml = '';\n\n      qrHtml += '<table style=\"';\n      qrHtml += ' border-width: 0px; border-style: none;';\n      qrHtml += ' border-collapse: collapse;';\n      qrHtml += ' padding: 0px; margin: ' + margin + 'px;';\n      qrHtml += '\">';\n      qrHtml += '<tbody>';\n\n      for (var r = 0; r < _this.getModuleCount(); r += 1) {\n\n        qrHtml += '<tr>';\n\n        for (var c = 0; c < _this.getModuleCount(); c += 1) {\n          qrHtml += '<td style=\"';\n          qrHtml += ' border-width: 0px; border-style: none;';\n          qrHtml += ' border-collapse: collapse;';\n          qrHtml += ' padding: 0px; margin: 0px;';\n          qrHtml += ' width: ' + cellSize + 'px;';\n          qrHtml += ' height: ' + cellSize + 'px;';\n          qrHtml += ' background-color: ';\n          qrHtml += _this.isDark(r, c)? '#000000' : '#ffffff';\n          qrHtml += ';';\n          qrHtml += '\"/>';\n        }\n\n        qrHtml += '</tr>';\n      }\n\n      qrHtml += '</tbody>';\n      qrHtml += '</table>';\n\n      return qrHtml;\n    };\n\n    _this.createSvgTag = function(cellSize, margin, alt, title) {\n\n      var opts = {};\n      if (typeof arguments[0] == 'object') {\n        // Called by options.\n        opts = arguments[0];\n        // overwrite cellSize and margin.\n        cellSize = opts.cellSize;\n        margin = opts.margin;\n        alt = opts.alt;\n        title = opts.title;\n      }\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      // Compose alt property surrogate\n      alt = (typeof alt === 'string') ? {text: alt} : alt || {};\n      alt.text = alt.text || null;\n      alt.id = (alt.text) ? alt.id || 'qrcode-description' : null;\n\n      // Compose title property surrogate\n      title = (typeof title === 'string') ? {text: title} : title || {};\n      title.text = title.text || null;\n      title.id = (title.text) ? title.id || 'qrcode-title' : null;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var c, mc, r, mr, qrSvg='', rect;\n\n      rect = 'l' + cellSize + ',0 0,' + cellSize +\n        ' -' + cellSize + ',0 0,-' + cellSize + 'z ';\n\n      qrSvg += '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"';\n      qrSvg += !opts.scalable ? ' width=\"' + size + 'px\" height=\"' + size + 'px\"' : '';\n      qrSvg += ' viewBox=\"0 0 ' + size + ' ' + size + '\" ';\n      qrSvg += ' preserveAspectRatio=\"xMinYMin meet\"';\n      qrSvg += (title.text || alt.text) ? ' role=\"img\" aria-labelledby=\"' +\n          escapeXml([title.id, alt.id].join(' ').trim() ) + '\"' : '';\n      qrSvg += '>';\n      qrSvg += (title.text) ? '<title id=\"' + escapeXml(title.id) + '\">' +\n          escapeXml(title.text) + '</title>' : '';\n      qrSvg += (alt.text) ? '<description id=\"' + escapeXml(alt.id) + '\">' +\n          escapeXml(alt.text) + '</description>' : '';\n      qrSvg += '<rect width=\"100%\" height=\"100%\" fill=\"white\" cx=\"0\" cy=\"0\"/>';\n      qrSvg += '<path d=\"';\n\n      for (r = 0; r < _this.getModuleCount(); r += 1) {\n        mr = r * cellSize + margin;\n        for (c = 0; c < _this.getModuleCount(); c += 1) {\n          if (_this.isDark(r, c) ) {\n            mc = c*cellSize+margin;\n            qrSvg += 'M' + mc + ',' + mr + rect;\n          }\n        }\n      }\n\n      qrSvg += '\" stroke=\"transparent\" fill=\"black\"/>';\n      qrSvg += '</svg>';\n\n      return qrSvg;\n    };\n\n    _this.createDataURL = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      return createDataURL(size, size, function(x, y) {\n        if (min <= x && x < max && min <= y && y < max) {\n          var c = Math.floor( (x - min) / cellSize);\n          var r = Math.floor( (y - min) / cellSize);\n          return _this.isDark(r, c)? 0 : 1;\n        } else {\n          return 1;\n        }\n      } );\n    };\n\n    _this.createImgTag = function(cellSize, margin, alt) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n\n      var img = '';\n      img += '<img';\n      img += '\\u0020src=\"';\n      img += _this.createDataURL(cellSize, margin);\n      img += '\"';\n      img += '\\u0020width=\"';\n      img += size;\n      img += '\"';\n      img += '\\u0020height=\"';\n      img += size;\n      img += '\"';\n      if (alt) {\n        img += '\\u0020alt=\"';\n        img += escapeXml(alt);\n        img += '\"';\n      }\n      img += '/>';\n\n      return img;\n    };\n\n    var escapeXml = function(s) {\n      var escaped = '';\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charAt(i);\n        switch(c) {\n        case '<': escaped += '&lt;'; break;\n        case '>': escaped += '&gt;'; break;\n        case '&': escaped += '&amp;'; break;\n        case '\"': escaped += '&quot;'; break;\n        default : escaped += c; break;\n        }\n      }\n      return escaped;\n    };\n\n    var _createHalfASCII = function(margin) {\n      var cellSize = 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r1, r2, p;\n\n      var blocks = {\n        '██': '█',\n        '█ ': '▀',\n        ' █': '▄',\n        '  ': ' '\n      };\n\n      var blocksLastLineNoMargin = {\n        '██': '▀',\n        '█ ': '▀',\n        ' █': ' ',\n        '  ': ' '\n      };\n\n      var ascii = '';\n      for (y = 0; y < size; y += 2) {\n        r1 = Math.floor((y - min) / cellSize);\n        r2 = Math.floor((y + 1 - min) / cellSize);\n        for (x = 0; x < size; x += 1) {\n          p = '█';\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r1, Math.floor((x - min) / cellSize))) {\n            p = ' ';\n          }\n\n          if (min <= x && x < max && min <= y+1 && y+1 < max && _this.isDark(r2, Math.floor((x - min) / cellSize))) {\n            p += ' ';\n          }\n          else {\n            p += '█';\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          ascii += (margin < 1 && y+1 >= max) ? blocksLastLineNoMargin[p] : blocks[p];\n        }\n\n        ascii += '\\n';\n      }\n\n      if (size % 2 && margin > 0) {\n        return ascii.substring(0, ascii.length - size - 1) + Array(size+1).join('▀');\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.createASCII = function(cellSize, margin) {\n      cellSize = cellSize || 1;\n\n      if (cellSize < 2) {\n        return _createHalfASCII(margin);\n      }\n\n      cellSize -= 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r, p;\n\n      var white = Array(cellSize+1).join('██');\n      var black = Array(cellSize+1).join('  ');\n\n      var ascii = '';\n      var line = '';\n      for (y = 0; y < size; y += 1) {\n        r = Math.floor( (y - min) / cellSize);\n        line = '';\n        for (x = 0; x < size; x += 1) {\n          p = 1;\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r, Math.floor((x - min) / cellSize))) {\n            p = 0;\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          line += p ? white : black;\n        }\n\n        for (r = 0; r < cellSize; r += 1) {\n          ascii += line + '\\n';\n        }\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.renderTo2dContext = function(context, cellSize) {\n      cellSize = cellSize || 2;\n      var length = _this.getModuleCount();\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          context.fillStyle = _this.isDark(row, col) ? 'black' : 'white';\n          context.fillRect(row * cellSize, col * cellSize, cellSize, cellSize);\n        }\n      }\n    }\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrcode.stringToBytes\n  //---------------------------------------------------------------------\n\n  qrcode.stringToBytesFuncs = {\n    'default' : function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        bytes.push(c & 0xff);\n      }\n      return bytes;\n    }\n  };\n\n  qrcode.stringToBytes = qrcode.stringToBytesFuncs['default'];\n\n  //---------------------------------------------------------------------\n  // qrcode.createStringToBytes\n  //---------------------------------------------------------------------\n\n  /**\n   * @param unicodeData base64 string of byte array.\n   * [16bit Unicode],[16bit Bytes], ...\n   * @param numChars\n   */\n  qrcode.createStringToBytes = function(unicodeData, numChars) {\n\n    // create conversion map.\n\n    var unicodeMap = function() {\n\n      var bin = base64DecodeInputStream(unicodeData);\n      var read = function() {\n        var b = bin.read();\n        if (b == -1) throw 'eof';\n        return b;\n      };\n\n      var count = 0;\n      var unicodeMap = {};\n      while (true) {\n        var b0 = bin.read();\n        if (b0 == -1) break;\n        var b1 = read();\n        var b2 = read();\n        var b3 = read();\n        var k = String.fromCharCode( (b0 << 8) | b1);\n        var v = (b2 << 8) | b3;\n        unicodeMap[k] = v;\n        count += 1;\n      }\n      if (count != numChars) {\n        throw count + ' != ' + numChars;\n      }\n\n      return unicodeMap;\n    }();\n\n    var unknownChar = '?'.charCodeAt(0);\n\n    return function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        if (c < 128) {\n          bytes.push(c);\n        } else {\n          var b = unicodeMap[s.charAt(i)];\n          if (typeof b == 'number') {\n            if ( (b & 0xff) == b) {\n              // 1byte\n              bytes.push(b);\n            } else {\n              // 2bytes\n              bytes.push(b >>> 8);\n              bytes.push(b & 0xff);\n            }\n          } else {\n            bytes.push(unknownChar);\n          }\n        }\n      }\n      return bytes;\n    };\n  };\n\n  //---------------------------------------------------------------------\n  // QRMode\n  //---------------------------------------------------------------------\n\n  var QRMode = {\n    MODE_NUMBER :    1 << 0,\n    MODE_ALPHA_NUM : 1 << 1,\n    MODE_8BIT_BYTE : 1 << 2,\n    MODE_KANJI :     1 << 3\n  };\n\n  //---------------------------------------------------------------------\n  // QRErrorCorrectionLevel\n  //---------------------------------------------------------------------\n\n  var QRErrorCorrectionLevel = {\n    L : 1,\n    M : 0,\n    Q : 3,\n    H : 2\n  };\n\n  //---------------------------------------------------------------------\n  // QRMaskPattern\n  //---------------------------------------------------------------------\n\n  var QRMaskPattern = {\n    PATTERN000 : 0,\n    PATTERN001 : 1,\n    PATTERN010 : 2,\n    PATTERN011 : 3,\n    PATTERN100 : 4,\n    PATTERN101 : 5,\n    PATTERN110 : 6,\n    PATTERN111 : 7\n  };\n\n  //---------------------------------------------------------------------\n  // QRUtil\n  //---------------------------------------------------------------------\n\n  var QRUtil = function() {\n\n    var PATTERN_POSITION_TABLE = [\n      [],\n      [6, 18],\n      [6, 22],\n      [6, 26],\n      [6, 30],\n      [6, 34],\n      [6, 22, 38],\n      [6, 24, 42],\n      [6, 26, 46],\n      [6, 28, 50],\n      [6, 30, 54],\n      [6, 32, 58],\n      [6, 34, 62],\n      [6, 26, 46, 66],\n      [6, 26, 48, 70],\n      [6, 26, 50, 74],\n      [6, 30, 54, 78],\n      [6, 30, 56, 82],\n      [6, 30, 58, 86],\n      [6, 34, 62, 90],\n      [6, 28, 50, 72, 94],\n      [6, 26, 50, 74, 98],\n      [6, 30, 54, 78, 102],\n      [6, 28, 54, 80, 106],\n      [6, 32, 58, 84, 110],\n      [6, 30, 58, 86, 114],\n      [6, 34, 62, 90, 118],\n      [6, 26, 50, 74, 98, 122],\n      [6, 30, 54, 78, 102, 126],\n      [6, 26, 52, 78, 104, 130],\n      [6, 30, 56, 82, 108, 134],\n      [6, 34, 60, 86, 112, 138],\n      [6, 30, 58, 86, 114, 142],\n      [6, 34, 62, 90, 118, 146],\n      [6, 30, 54, 78, 102, 126, 150],\n      [6, 24, 50, 76, 102, 128, 154],\n      [6, 28, 54, 80, 106, 132, 158],\n      [6, 32, 58, 84, 110, 136, 162],\n      [6, 26, 54, 82, 110, 138, 166],\n      [6, 30, 58, 86, 114, 142, 170]\n    ];\n    var G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\n    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n    var G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\n\n    var _this = {};\n\n    var getBCHDigit = function(data) {\n      var digit = 0;\n      while (data != 0) {\n        digit += 1;\n        data >>>= 1;\n      }\n      return digit;\n    };\n\n    _this.getBCHTypeInfo = function(data) {\n      var d = data << 10;\n      while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n        d ^= (G15 << (getBCHDigit(d) - getBCHDigit(G15) ) );\n      }\n      return ( (data << 10) | d) ^ G15_MASK;\n    };\n\n    _this.getBCHTypeNumber = function(data) {\n      var d = data << 12;\n      while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n        d ^= (G18 << (getBCHDigit(d) - getBCHDigit(G18) ) );\n      }\n      return (data << 12) | d;\n    };\n\n    _this.getPatternPosition = function(typeNumber) {\n      return PATTERN_POSITION_TABLE[typeNumber - 1];\n    };\n\n    _this.getMaskFunction = function(maskPattern) {\n\n      switch (maskPattern) {\n\n      case QRMaskPattern.PATTERN000 :\n        return function(i, j) { return (i + j) % 2 == 0; };\n      case QRMaskPattern.PATTERN001 :\n        return function(i, j) { return i % 2 == 0; };\n      case QRMaskPattern.PATTERN010 :\n        return function(i, j) { return j % 3 == 0; };\n      case QRMaskPattern.PATTERN011 :\n        return function(i, j) { return (i + j) % 3 == 0; };\n      case QRMaskPattern.PATTERN100 :\n        return function(i, j) { return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0; };\n      case QRMaskPattern.PATTERN101 :\n        return function(i, j) { return (i * j) % 2 + (i * j) % 3 == 0; };\n      case QRMaskPattern.PATTERN110 :\n        return function(i, j) { return ( (i * j) % 2 + (i * j) % 3) % 2 == 0; };\n      case QRMaskPattern.PATTERN111 :\n        return function(i, j) { return ( (i * j) % 3 + (i + j) % 2) % 2 == 0; };\n\n      default :\n        throw 'bad maskPattern:' + maskPattern;\n      }\n    };\n\n    _this.getErrorCorrectPolynomial = function(errorCorrectLength) {\n      var a = qrPolynomial([1], 0);\n      for (var i = 0; i < errorCorrectLength; i += 1) {\n        a = a.multiply(qrPolynomial([1, QRMath.gexp(i)], 0) );\n      }\n      return a;\n    };\n\n    _this.getLengthInBits = function(mode, type) {\n\n      if (1 <= type && type < 10) {\n\n        // 1 - 9\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 10;\n        case QRMode.MODE_ALPHA_NUM : return 9;\n        case QRMode.MODE_8BIT_BYTE : return 8;\n        case QRMode.MODE_KANJI     : return 8;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 27) {\n\n        // 10 - 26\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 12;\n        case QRMode.MODE_ALPHA_NUM : return 11;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 10;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 41) {\n\n        // 27 - 40\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 14;\n        case QRMode.MODE_ALPHA_NUM : return 13;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 12;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else {\n        throw 'type:' + type;\n      }\n    };\n\n    _this.getLostPoint = function(qrcode) {\n\n      var moduleCount = qrcode.getModuleCount();\n\n      var lostPoint = 0;\n\n      // LEVEL1\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount; col += 1) {\n\n          var sameCount = 0;\n          var dark = qrcode.isDark(row, col);\n\n          for (var r = -1; r <= 1; r += 1) {\n\n            if (row + r < 0 || moduleCount <= row + r) {\n              continue;\n            }\n\n            for (var c = -1; c <= 1; c += 1) {\n\n              if (col + c < 0 || moduleCount <= col + c) {\n                continue;\n              }\n\n              if (r == 0 && c == 0) {\n                continue;\n              }\n\n              if (dark == qrcode.isDark(row + r, col + c) ) {\n                sameCount += 1;\n              }\n            }\n          }\n\n          if (sameCount > 5) {\n            lostPoint += (3 + sameCount - 5);\n          }\n        }\n      };\n\n      // LEVEL2\n\n      for (var row = 0; row < moduleCount - 1; row += 1) {\n        for (var col = 0; col < moduleCount - 1; col += 1) {\n          var count = 0;\n          if (qrcode.isDark(row, col) ) count += 1;\n          if (qrcode.isDark(row + 1, col) ) count += 1;\n          if (qrcode.isDark(row, col + 1) ) count += 1;\n          if (qrcode.isDark(row + 1, col + 1) ) count += 1;\n          if (count == 0 || count == 4) {\n            lostPoint += 3;\n          }\n        }\n      }\n\n      // LEVEL3\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount - 6; col += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row, col + 1)\n              &&  qrcode.isDark(row, col + 2)\n              &&  qrcode.isDark(row, col + 3)\n              &&  qrcode.isDark(row, col + 4)\n              && !qrcode.isDark(row, col + 5)\n              &&  qrcode.isDark(row, col + 6) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount - 6; row += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row + 1, col)\n              &&  qrcode.isDark(row + 2, col)\n              &&  qrcode.isDark(row + 3, col)\n              &&  qrcode.isDark(row + 4, col)\n              && !qrcode.isDark(row + 5, col)\n              &&  qrcode.isDark(row + 6, col) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      // LEVEL4\n\n      var darkCount = 0;\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount; row += 1) {\n          if (qrcode.isDark(row, col) ) {\n            darkCount += 1;\n          }\n        }\n      }\n\n      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n      lostPoint += ratio * 10;\n\n      return lostPoint;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // QRMath\n  //---------------------------------------------------------------------\n\n  var QRMath = function() {\n\n    var EXP_TABLE = new Array(256);\n    var LOG_TABLE = new Array(256);\n\n    // initialize tables\n    for (var i = 0; i < 8; i += 1) {\n      EXP_TABLE[i] = 1 << i;\n    }\n    for (var i = 8; i < 256; i += 1) {\n      EXP_TABLE[i] = EXP_TABLE[i - 4]\n        ^ EXP_TABLE[i - 5]\n        ^ EXP_TABLE[i - 6]\n        ^ EXP_TABLE[i - 8];\n    }\n    for (var i = 0; i < 255; i += 1) {\n      LOG_TABLE[EXP_TABLE[i] ] = i;\n    }\n\n    var _this = {};\n\n    _this.glog = function(n) {\n\n      if (n < 1) {\n        throw 'glog(' + n + ')';\n      }\n\n      return LOG_TABLE[n];\n    };\n\n    _this.gexp = function(n) {\n\n      while (n < 0) {\n        n += 255;\n      }\n\n      while (n >= 256) {\n        n -= 255;\n      }\n\n      return EXP_TABLE[n];\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrPolynomial\n  //---------------------------------------------------------------------\n\n  function qrPolynomial(num, shift) {\n\n    if (typeof num.length == 'undefined') {\n      throw num.length + '/' + shift;\n    }\n\n    var _num = function() {\n      var offset = 0;\n      while (offset < num.length && num[offset] == 0) {\n        offset += 1;\n      }\n      var _num = new Array(num.length - offset + shift);\n      for (var i = 0; i < num.length - offset; i += 1) {\n        _num[i] = num[i + offset];\n      }\n      return _num;\n    }();\n\n    var _this = {};\n\n    _this.getAt = function(index) {\n      return _num[index];\n    };\n\n    _this.getLength = function() {\n      return _num.length;\n    };\n\n    _this.multiply = function(e) {\n\n      var num = new Array(_this.getLength() + e.getLength() - 1);\n\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        for (var j = 0; j < e.getLength(); j += 1) {\n          num[i + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i) ) + QRMath.glog(e.getAt(j) ) );\n        }\n      }\n\n      return qrPolynomial(num, 0);\n    };\n\n    _this.mod = function(e) {\n\n      if (_this.getLength() - e.getLength() < 0) {\n        return _this;\n      }\n\n      var ratio = QRMath.glog(_this.getAt(0) ) - QRMath.glog(e.getAt(0) );\n\n      var num = new Array(_this.getLength() );\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        num[i] = _this.getAt(i);\n      }\n\n      for (var i = 0; i < e.getLength(); i += 1) {\n        num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i) ) + ratio);\n      }\n\n      // recursive call\n      return qrPolynomial(num, 0).mod(e);\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // QRRSBlock\n  //---------------------------------------------------------------------\n\n  var QRRSBlock = function() {\n\n    var RS_BLOCK_TABLE = [\n\n      // L\n      // M\n      // Q\n      // H\n\n      // 1\n      [1, 26, 19],\n      [1, 26, 16],\n      [1, 26, 13],\n      [1, 26, 9],\n\n      // 2\n      [1, 44, 34],\n      [1, 44, 28],\n      [1, 44, 22],\n      [1, 44, 16],\n\n      // 3\n      [1, 70, 55],\n      [1, 70, 44],\n      [2, 35, 17],\n      [2, 35, 13],\n\n      // 4\n      [1, 100, 80],\n      [2, 50, 32],\n      [2, 50, 24],\n      [4, 25, 9],\n\n      // 5\n      [1, 134, 108],\n      [2, 67, 43],\n      [2, 33, 15, 2, 34, 16],\n      [2, 33, 11, 2, 34, 12],\n\n      // 6\n      [2, 86, 68],\n      [4, 43, 27],\n      [4, 43, 19],\n      [4, 43, 15],\n\n      // 7\n      [2, 98, 78],\n      [4, 49, 31],\n      [2, 32, 14, 4, 33, 15],\n      [4, 39, 13, 1, 40, 14],\n\n      // 8\n      [2, 121, 97],\n      [2, 60, 38, 2, 61, 39],\n      [4, 40, 18, 2, 41, 19],\n      [4, 40, 14, 2, 41, 15],\n\n      // 9\n      [2, 146, 116],\n      [3, 58, 36, 2, 59, 37],\n      [4, 36, 16, 4, 37, 17],\n      [4, 36, 12, 4, 37, 13],\n\n      // 10\n      [2, 86, 68, 2, 87, 69],\n      [4, 69, 43, 1, 70, 44],\n      [6, 43, 19, 2, 44, 20],\n      [6, 43, 15, 2, 44, 16],\n\n      // 11\n      [4, 101, 81],\n      [1, 80, 50, 4, 81, 51],\n      [4, 50, 22, 4, 51, 23],\n      [3, 36, 12, 8, 37, 13],\n\n      // 12\n      [2, 116, 92, 2, 117, 93],\n      [6, 58, 36, 2, 59, 37],\n      [4, 46, 20, 6, 47, 21],\n      [7, 42, 14, 4, 43, 15],\n\n      // 13\n      [4, 133, 107],\n      [8, 59, 37, 1, 60, 38],\n      [8, 44, 20, 4, 45, 21],\n      [12, 33, 11, 4, 34, 12],\n\n      // 14\n      [3, 145, 115, 1, 146, 116],\n      [4, 64, 40, 5, 65, 41],\n      [11, 36, 16, 5, 37, 17],\n      [11, 36, 12, 5, 37, 13],\n\n      // 15\n      [5, 109, 87, 1, 110, 88],\n      [5, 65, 41, 5, 66, 42],\n      [5, 54, 24, 7, 55, 25],\n      [11, 36, 12, 7, 37, 13],\n\n      // 16\n      [5, 122, 98, 1, 123, 99],\n      [7, 73, 45, 3, 74, 46],\n      [15, 43, 19, 2, 44, 20],\n      [3, 45, 15, 13, 46, 16],\n\n      // 17\n      [1, 135, 107, 5, 136, 108],\n      [10, 74, 46, 1, 75, 47],\n      [1, 50, 22, 15, 51, 23],\n      [2, 42, 14, 17, 43, 15],\n\n      // 18\n      [5, 150, 120, 1, 151, 121],\n      [9, 69, 43, 4, 70, 44],\n      [17, 50, 22, 1, 51, 23],\n      [2, 42, 14, 19, 43, 15],\n\n      // 19\n      [3, 141, 113, 4, 142, 114],\n      [3, 70, 44, 11, 71, 45],\n      [17, 47, 21, 4, 48, 22],\n      [9, 39, 13, 16, 40, 14],\n\n      // 20\n      [3, 135, 107, 5, 136, 108],\n      [3, 67, 41, 13, 68, 42],\n      [15, 54, 24, 5, 55, 25],\n      [15, 43, 15, 10, 44, 16],\n\n      // 21\n      [4, 144, 116, 4, 145, 117],\n      [17, 68, 42],\n      [17, 50, 22, 6, 51, 23],\n      [19, 46, 16, 6, 47, 17],\n\n      // 22\n      [2, 139, 111, 7, 140, 112],\n      [17, 74, 46],\n      [7, 54, 24, 16, 55, 25],\n      [34, 37, 13],\n\n      // 23\n      [4, 151, 121, 5, 152, 122],\n      [4, 75, 47, 14, 76, 48],\n      [11, 54, 24, 14, 55, 25],\n      [16, 45, 15, 14, 46, 16],\n\n      // 24\n      [6, 147, 117, 4, 148, 118],\n      [6, 73, 45, 14, 74, 46],\n      [11, 54, 24, 16, 55, 25],\n      [30, 46, 16, 2, 47, 17],\n\n      // 25\n      [8, 132, 106, 4, 133, 107],\n      [8, 75, 47, 13, 76, 48],\n      [7, 54, 24, 22, 55, 25],\n      [22, 45, 15, 13, 46, 16],\n\n      // 26\n      [10, 142, 114, 2, 143, 115],\n      [19, 74, 46, 4, 75, 47],\n      [28, 50, 22, 6, 51, 23],\n      [33, 46, 16, 4, 47, 17],\n\n      // 27\n      [8, 152, 122, 4, 153, 123],\n      [22, 73, 45, 3, 74, 46],\n      [8, 53, 23, 26, 54, 24],\n      [12, 45, 15, 28, 46, 16],\n\n      // 28\n      [3, 147, 117, 10, 148, 118],\n      [3, 73, 45, 23, 74, 46],\n      [4, 54, 24, 31, 55, 25],\n      [11, 45, 15, 31, 46, 16],\n\n      // 29\n      [7, 146, 116, 7, 147, 117],\n      [21, 73, 45, 7, 74, 46],\n      [1, 53, 23, 37, 54, 24],\n      [19, 45, 15, 26, 46, 16],\n\n      // 30\n      [5, 145, 115, 10, 146, 116],\n      [19, 75, 47, 10, 76, 48],\n      [15, 54, 24, 25, 55, 25],\n      [23, 45, 15, 25, 46, 16],\n\n      // 31\n      [13, 145, 115, 3, 146, 116],\n      [2, 74, 46, 29, 75, 47],\n      [42, 54, 24, 1, 55, 25],\n      [23, 45, 15, 28, 46, 16],\n\n      // 32\n      [17, 145, 115],\n      [10, 74, 46, 23, 75, 47],\n      [10, 54, 24, 35, 55, 25],\n      [19, 45, 15, 35, 46, 16],\n\n      // 33\n      [17, 145, 115, 1, 146, 116],\n      [14, 74, 46, 21, 75, 47],\n      [29, 54, 24, 19, 55, 25],\n      [11, 45, 15, 46, 46, 16],\n\n      // 34\n      [13, 145, 115, 6, 146, 116],\n      [14, 74, 46, 23, 75, 47],\n      [44, 54, 24, 7, 55, 25],\n      [59, 46, 16, 1, 47, 17],\n\n      // 35\n      [12, 151, 121, 7, 152, 122],\n      [12, 75, 47, 26, 76, 48],\n      [39, 54, 24, 14, 55, 25],\n      [22, 45, 15, 41, 46, 16],\n\n      // 36\n      [6, 151, 121, 14, 152, 122],\n      [6, 75, 47, 34, 76, 48],\n      [46, 54, 24, 10, 55, 25],\n      [2, 45, 15, 64, 46, 16],\n\n      // 37\n      [17, 152, 122, 4, 153, 123],\n      [29, 74, 46, 14, 75, 47],\n      [49, 54, 24, 10, 55, 25],\n      [24, 45, 15, 46, 46, 16],\n\n      // 38\n      [4, 152, 122, 18, 153, 123],\n      [13, 74, 46, 32, 75, 47],\n      [48, 54, 24, 14, 55, 25],\n      [42, 45, 15, 32, 46, 16],\n\n      // 39\n      [20, 147, 117, 4, 148, 118],\n      [40, 75, 47, 7, 76, 48],\n      [43, 54, 24, 22, 55, 25],\n      [10, 45, 15, 67, 46, 16],\n\n      // 40\n      [19, 148, 118, 6, 149, 119],\n      [18, 75, 47, 31, 76, 48],\n      [34, 54, 24, 34, 55, 25],\n      [20, 45, 15, 61, 46, 16]\n    ];\n\n    var qrRSBlock = function(totalCount, dataCount) {\n      var _this = {};\n      _this.totalCount = totalCount;\n      _this.dataCount = dataCount;\n      return _this;\n    };\n\n    var _this = {};\n\n    var getRsBlockTable = function(typeNumber, errorCorrectionLevel) {\n\n      switch(errorCorrectionLevel) {\n      case QRErrorCorrectionLevel.L :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n      case QRErrorCorrectionLevel.M :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n      case QRErrorCorrectionLevel.Q :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n      case QRErrorCorrectionLevel.H :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n      default :\n        return undefined;\n      }\n    };\n\n    _this.getRSBlocks = function(typeNumber, errorCorrectionLevel) {\n\n      var rsBlock = getRsBlockTable(typeNumber, errorCorrectionLevel);\n\n      if (typeof rsBlock == 'undefined') {\n        throw 'bad rs block @ typeNumber:' + typeNumber +\n            '/errorCorrectionLevel:' + errorCorrectionLevel;\n      }\n\n      var length = rsBlock.length / 3;\n\n      var list = [];\n\n      for (var i = 0; i < length; i += 1) {\n\n        var count = rsBlock[i * 3 + 0];\n        var totalCount = rsBlock[i * 3 + 1];\n        var dataCount = rsBlock[i * 3 + 2];\n\n        for (var j = 0; j < count; j += 1) {\n          list.push(qrRSBlock(totalCount, dataCount) );\n        }\n      }\n\n      return list;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrBitBuffer\n  //---------------------------------------------------------------------\n\n  var qrBitBuffer = function() {\n\n    var _buffer = [];\n    var _length = 0;\n\n    var _this = {};\n\n    _this.getBuffer = function() {\n      return _buffer;\n    };\n\n    _this.getAt = function(index) {\n      var bufIndex = Math.floor(index / 8);\n      return ( (_buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n    };\n\n    _this.put = function(num, length) {\n      for (var i = 0; i < length; i += 1) {\n        _this.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n      }\n    };\n\n    _this.getLengthInBits = function() {\n      return _length;\n    };\n\n    _this.putBit = function(bit) {\n\n      var bufIndex = Math.floor(_length / 8);\n      if (_buffer.length <= bufIndex) {\n        _buffer.push(0);\n      }\n\n      if (bit) {\n        _buffer[bufIndex] |= (0x80 >>> (_length % 8) );\n      }\n\n      _length += 1;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrNumber\n  //---------------------------------------------------------------------\n\n  var qrNumber = function(data) {\n\n    var _mode = QRMode.MODE_NUMBER;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _data;\n\n      var i = 0;\n\n      while (i + 2 < data.length) {\n        buffer.put(strToNum(data.substring(i, i + 3) ), 10);\n        i += 3;\n      }\n\n      if (i < data.length) {\n        if (data.length - i == 1) {\n          buffer.put(strToNum(data.substring(i, i + 1) ), 4);\n        } else if (data.length - i == 2) {\n          buffer.put(strToNum(data.substring(i, i + 2) ), 7);\n        }\n      }\n    };\n\n    var strToNum = function(s) {\n      var num = 0;\n      for (var i = 0; i < s.length; i += 1) {\n        num = num * 10 + chatToNum(s.charAt(i) );\n      }\n      return num;\n    };\n\n    var chatToNum = function(c) {\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      }\n      throw 'illegal char :' + c;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrAlphaNum\n  //---------------------------------------------------------------------\n\n  var qrAlphaNum = function(data) {\n\n    var _mode = QRMode.MODE_ALPHA_NUM;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var s = _data;\n\n      var i = 0;\n\n      while (i + 1 < s.length) {\n        buffer.put(\n          getCode(s.charAt(i) ) * 45 +\n          getCode(s.charAt(i + 1) ), 11);\n        i += 2;\n      }\n\n      if (i < s.length) {\n        buffer.put(getCode(s.charAt(i) ), 6);\n      }\n    };\n\n    var getCode = function(c) {\n\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      } else if ('A' <= c && c <= 'Z') {\n        return c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n      } else {\n        switch (c) {\n        case ' ' : return 36;\n        case '$' : return 37;\n        case '%' : return 38;\n        case '*' : return 39;\n        case '+' : return 40;\n        case '-' : return 41;\n        case '.' : return 42;\n        case '/' : return 43;\n        case ':' : return 44;\n        default :\n          throw 'illegal char :' + c;\n        }\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qr8BitByte\n  //---------------------------------------------------------------------\n\n  var qr8BitByte = function(data) {\n\n    var _mode = QRMode.MODE_8BIT_BYTE;\n    var _data = data;\n    var _bytes = qrcode.stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _bytes.length;\n    };\n\n    _this.write = function(buffer) {\n      for (var i = 0; i < _bytes.length; i += 1) {\n        buffer.put(_bytes[i], 8);\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrKanji\n  //---------------------------------------------------------------------\n\n  var qrKanji = function(data) {\n\n    var _mode = QRMode.MODE_KANJI;\n    var _data = data;\n\n    var stringToBytes = qrcode.stringToBytesFuncs['SJIS'];\n    if (!stringToBytes) {\n      throw 'sjis not supported.';\n    }\n    !function(c, code) {\n      // self test for sjis support.\n      var test = stringToBytes(c);\n      if (test.length != 2 || ( (test[0] << 8) | test[1]) != code) {\n        throw 'sjis not supported.';\n      }\n    }('\\u53cb', 0x9746);\n\n    var _bytes = stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return ~~(_bytes.length / 2);\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _bytes;\n\n      var i = 0;\n\n      while (i + 1 < data.length) {\n\n        var c = ( (0xff & data[i]) << 8) | (0xff & data[i + 1]);\n\n        if (0x8140 <= c && c <= 0x9FFC) {\n          c -= 0x8140;\n        } else if (0xE040 <= c && c <= 0xEBBF) {\n          c -= 0xC140;\n        } else {\n          throw 'illegal char at ' + (i + 1) + '/' + c;\n        }\n\n        c = ( (c >>> 8) & 0xff) * 0xC0 + (c & 0xff);\n\n        buffer.put(c, 13);\n\n        i += 2;\n      }\n\n      if (i < data.length) {\n        throw 'illegal char at ' + (i + 1);\n      }\n    };\n\n    return _this;\n  };\n\n  //=====================================================================\n  // GIF Support etc.\n  //\n\n  //---------------------------------------------------------------------\n  // byteArrayOutputStream\n  //---------------------------------------------------------------------\n\n  var byteArrayOutputStream = function() {\n\n    var _bytes = [];\n\n    var _this = {};\n\n    _this.writeByte = function(b) {\n      _bytes.push(b & 0xff);\n    };\n\n    _this.writeShort = function(i) {\n      _this.writeByte(i);\n      _this.writeByte(i >>> 8);\n    };\n\n    _this.writeBytes = function(b, off, len) {\n      off = off || 0;\n      len = len || b.length;\n      for (var i = 0; i < len; i += 1) {\n        _this.writeByte(b[i + off]);\n      }\n    };\n\n    _this.writeString = function(s) {\n      for (var i = 0; i < s.length; i += 1) {\n        _this.writeByte(s.charCodeAt(i) );\n      }\n    };\n\n    _this.toByteArray = function() {\n      return _bytes;\n    };\n\n    _this.toString = function() {\n      var s = '';\n      s += '[';\n      for (var i = 0; i < _bytes.length; i += 1) {\n        if (i > 0) {\n          s += ',';\n        }\n        s += _bytes[i];\n      }\n      s += ']';\n      return s;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64EncodeOutputStream\n  //---------------------------------------------------------------------\n\n  var base64EncodeOutputStream = function() {\n\n    var _buffer = 0;\n    var _buflen = 0;\n    var _length = 0;\n    var _base64 = '';\n\n    var _this = {};\n\n    var writeEncoded = function(b) {\n      _base64 += String.fromCharCode(encode(b & 0x3f) );\n    };\n\n    var encode = function(n) {\n      if (n < 0) {\n        // error.\n      } else if (n < 26) {\n        return 0x41 + n;\n      } else if (n < 52) {\n        return 0x61 + (n - 26);\n      } else if (n < 62) {\n        return 0x30 + (n - 52);\n      } else if (n == 62) {\n        return 0x2b;\n      } else if (n == 63) {\n        return 0x2f;\n      }\n      throw 'n:' + n;\n    };\n\n    _this.writeByte = function(n) {\n\n      _buffer = (_buffer << 8) | (n & 0xff);\n      _buflen += 8;\n      _length += 1;\n\n      while (_buflen >= 6) {\n        writeEncoded(_buffer >>> (_buflen - 6) );\n        _buflen -= 6;\n      }\n    };\n\n    _this.flush = function() {\n\n      if (_buflen > 0) {\n        writeEncoded(_buffer << (6 - _buflen) );\n        _buffer = 0;\n        _buflen = 0;\n      }\n\n      if (_length % 3 != 0) {\n        // padding\n        var padlen = 3 - _length % 3;\n        for (var i = 0; i < padlen; i += 1) {\n          _base64 += '=';\n        }\n      }\n    };\n\n    _this.toString = function() {\n      return _base64;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64DecodeInputStream\n  //---------------------------------------------------------------------\n\n  var base64DecodeInputStream = function(str) {\n\n    var _str = str;\n    var _pos = 0;\n    var _buffer = 0;\n    var _buflen = 0;\n\n    var _this = {};\n\n    _this.read = function() {\n\n      while (_buflen < 8) {\n\n        if (_pos >= _str.length) {\n          if (_buflen == 0) {\n            return -1;\n          }\n          throw 'unexpected end of file./' + _buflen;\n        }\n\n        var c = _str.charAt(_pos);\n        _pos += 1;\n\n        if (c == '=') {\n          _buflen = 0;\n          return -1;\n        } else if (c.match(/^\\s$/) ) {\n          // ignore if whitespace.\n          continue;\n        }\n\n        _buffer = (_buffer << 6) | decode(c.charCodeAt(0) );\n        _buflen += 6;\n      }\n\n      var n = (_buffer >>> (_buflen - 8) ) & 0xff;\n      _buflen -= 8;\n      return n;\n    };\n\n    var decode = function(c) {\n      if (0x41 <= c && c <= 0x5a) {\n        return c - 0x41;\n      } else if (0x61 <= c && c <= 0x7a) {\n        return c - 0x61 + 26;\n      } else if (0x30 <= c && c <= 0x39) {\n        return c - 0x30 + 52;\n      } else if (c == 0x2b) {\n        return 62;\n      } else if (c == 0x2f) {\n        return 63;\n      } else {\n        throw 'c:' + c;\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // gifImage (B/W)\n  //---------------------------------------------------------------------\n\n  var gifImage = function(width, height) {\n\n    var _width = width;\n    var _height = height;\n    var _data = new Array(width * height);\n\n    var _this = {};\n\n    _this.setPixel = function(x, y, pixel) {\n      _data[y * _width + x] = pixel;\n    };\n\n    _this.write = function(out) {\n\n      //---------------------------------\n      // GIF Signature\n\n      out.writeString('GIF87a');\n\n      //---------------------------------\n      // Screen Descriptor\n\n      out.writeShort(_width);\n      out.writeShort(_height);\n\n      out.writeByte(0x80); // 2bit\n      out.writeByte(0);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Global Color Map\n\n      // black\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n\n      // white\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n\n      //---------------------------------\n      // Image Descriptor\n\n      out.writeString(',');\n      out.writeShort(0);\n      out.writeShort(0);\n      out.writeShort(_width);\n      out.writeShort(_height);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Local Color Map\n\n      //---------------------------------\n      // Raster Data\n\n      var lzwMinCodeSize = 2;\n      var raster = getLZWRaster(lzwMinCodeSize);\n\n      out.writeByte(lzwMinCodeSize);\n\n      var offset = 0;\n\n      while (raster.length - offset > 255) {\n        out.writeByte(255);\n        out.writeBytes(raster, offset, 255);\n        offset += 255;\n      }\n\n      out.writeByte(raster.length - offset);\n      out.writeBytes(raster, offset, raster.length - offset);\n      out.writeByte(0x00);\n\n      //---------------------------------\n      // GIF Terminator\n      out.writeString(';');\n    };\n\n    var bitOutputStream = function(out) {\n\n      var _out = out;\n      var _bitLength = 0;\n      var _bitBuffer = 0;\n\n      var _this = {};\n\n      _this.write = function(data, length) {\n\n        if ( (data >>> length) != 0) {\n          throw 'length over';\n        }\n\n        while (_bitLength + length >= 8) {\n          _out.writeByte(0xff & ( (data << _bitLength) | _bitBuffer) );\n          length -= (8 - _bitLength);\n          data >>>= (8 - _bitLength);\n          _bitBuffer = 0;\n          _bitLength = 0;\n        }\n\n        _bitBuffer = (data << _bitLength) | _bitBuffer;\n        _bitLength = _bitLength + length;\n      };\n\n      _this.flush = function() {\n        if (_bitLength > 0) {\n          _out.writeByte(_bitBuffer);\n        }\n      };\n\n      return _this;\n    };\n\n    var getLZWRaster = function(lzwMinCodeSize) {\n\n      var clearCode = 1 << lzwMinCodeSize;\n      var endCode = (1 << lzwMinCodeSize) + 1;\n      var bitLength = lzwMinCodeSize + 1;\n\n      // Setup LZWTable\n      var table = lzwTable();\n\n      for (var i = 0; i < clearCode; i += 1) {\n        table.add(String.fromCharCode(i) );\n      }\n      table.add(String.fromCharCode(clearCode) );\n      table.add(String.fromCharCode(endCode) );\n\n      var byteOut = byteArrayOutputStream();\n      var bitOut = bitOutputStream(byteOut);\n\n      // clear code\n      bitOut.write(clearCode, bitLength);\n\n      var dataIndex = 0;\n\n      var s = String.fromCharCode(_data[dataIndex]);\n      dataIndex += 1;\n\n      while (dataIndex < _data.length) {\n\n        var c = String.fromCharCode(_data[dataIndex]);\n        dataIndex += 1;\n\n        if (table.contains(s + c) ) {\n\n          s = s + c;\n\n        } else {\n\n          bitOut.write(table.indexOf(s), bitLength);\n\n          if (table.size() < 0xfff) {\n\n            if (table.size() == (1 << bitLength) ) {\n              bitLength += 1;\n            }\n\n            table.add(s + c);\n          }\n\n          s = c;\n        }\n      }\n\n      bitOut.write(table.indexOf(s), bitLength);\n\n      // end code\n      bitOut.write(endCode, bitLength);\n\n      bitOut.flush();\n\n      return byteOut.toByteArray();\n    };\n\n    var lzwTable = function() {\n\n      var _map = {};\n      var _size = 0;\n\n      var _this = {};\n\n      _this.add = function(key) {\n        if (_this.contains(key) ) {\n          throw 'dup key:' + key;\n        }\n        _map[key] = _size;\n        _size += 1;\n      };\n\n      _this.size = function() {\n        return _size;\n      };\n\n      _this.indexOf = function(key) {\n        return _map[key];\n      };\n\n      _this.contains = function(key) {\n        return typeof _map[key] != 'undefined';\n      };\n\n      return _this;\n    };\n\n    return _this;\n  };\n\n  var createDataURL = function(width, height, getPixel) {\n    var gif = gifImage(width, height);\n    for (var y = 0; y < height; y += 1) {\n      for (var x = 0; x < width; x += 1) {\n        gif.setPixel(x, y, getPixel(x, y) );\n      }\n    }\n\n    var b = byteArrayOutputStream();\n    gif.write(b);\n\n    var base64 = base64EncodeOutputStream();\n    var bytes = b.toByteArray();\n    for (var i = 0; i < bytes.length; i += 1) {\n      base64.writeByte(bytes[i]);\n    }\n    base64.flush();\n\n    return 'data:image/gif;base64,' + base64;\n  };\n\n  //---------------------------------------------------------------------\n  // returns qrcode function.\n\n  return qrcode;\n}();\n\n// multibyte support\n!function() {\n\n  qrcode.stringToBytesFuncs['UTF-8'] = function(s) {\n    // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n    function toUTF8Array(str) {\n      var utf8 = [];\n      for (var i=0; i < str.length; i++) {\n        var charcode = str.charCodeAt(i);\n        if (charcode < 0x80) utf8.push(charcode);\n        else if (charcode < 0x800) {\n          utf8.push(0xc0 | (charcode >> 6),\n              0x80 | (charcode & 0x3f));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n          utf8.push(0xe0 | (charcode >> 12),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n        // surrogate pair\n        else {\n          i++;\n          // UTF-16 encodes 0x10000-0x10FFFF by\n          // subtracting 0x10000 and splitting the\n          // 20 bits of 0x0-0xFFFFF into two halves\n          charcode = 0x10000 + (((charcode & 0x3ff)<<10)\n            | (str.charCodeAt(i) & 0x3ff));\n          utf8.push(0xf0 | (charcode >>18),\n              0x80 | ((charcode>>12) & 0x3f),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n      }\n      return utf8;\n    }\n    return toUTF8Array(s);\n  };\n\n}();\n\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n      define([], factory);\n  } else if (typeof exports === 'object') {\n      module.exports = factory();\n  }\n}(function () {\n    return qrcode;\n}));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { Mode } from \"../types\";\n\ninterface Modes {\n  [key: string]: Mode;\n}\n\nexport default {\n  numeric: \"Numeric\",\n  alphanumeric: \"Alphanumeric\",\n  byte: \"Byte\",\n  kanji: \"Kanji\"\n} as Modes;\n","import { UnknownObject } from \"../types\";\n\nconst isObject = (obj: Record<string, unknown>): boolean => !!obj && typeof obj === \"object\" && !Array.isArray(obj);\n\nexport default function mergeDeep(target: UnknownObject, ...sources: UnknownObject[]): UnknownObject {\n  if (!sources.length) return target;\n  const source = sources.shift();\n  if (source === undefined || !isObject(target) || !isObject(source)) return target;\n  target = { ...target };\n  Object.keys(source).forEach((key: string): void => {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n      target[key] = sourceValue;\n    } else if (isObject(targetValue) && isObject(sourceValue)) {\n      target[key] = mergeDeep(Object.assign({}, targetValue), sourceValue);\n    } else {\n      target[key] = sourceValue;\n    }\n  });\n\n  return mergeDeep(target, ...sources);\n}\n","export default function downloadURI(uri: string, name: string): void {\n  const link = document.createElement(\"a\");\n  link.download = name;\n  link.href = uri;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n","interface ErrorCorrectionPercents {\n  [key: string]: number;\n}\n\nexport default {\n  L: 0.07,\n  M: 0.15,\n  Q: 0.25,\n  H: 0.3\n} as ErrorCorrectionPercents;\n","import dotTypes from \"../../constants/dotTypes\";\nimport { DotType, GetNeighbor, DrawArgs, BasicFigureDrawArgs, RotateFigureArgs, Window } from \"../../types\";\n\nexport default class QRDot {\n  _element?: SVGElement;\n  _svg: SVGElement;\n  _type: DotType;\n  _window: Window;\n\n  constructor({ svg, type, window }: { svg: SVGElement; type: DotType; window: Window }) {\n    this._svg = svg;\n    this._type = type;\n    this._window = window;\n  }\n\n  draw(x: number, y: number, size: number, getNeighbor: GetNeighbor): void {\n    const type = this._type;\n    let drawFunction;\n\n    switch (type) {\n      case dotTypes.dots:\n        drawFunction = this._drawDot;\n        break;\n      case dotTypes.classy:\n        drawFunction = this._drawClassy;\n        break;\n      case dotTypes.classyRounded:\n        drawFunction = this._drawClassyRounded;\n        break;\n      case dotTypes.rounded:\n        drawFunction = this._drawRounded;\n        break;\n      case dotTypes.extraRounded:\n        drawFunction = this._drawExtraRounded;\n        break;\n      case dotTypes.square:\n      default:\n        drawFunction = this._drawSquare;\n    }\n\n    drawFunction.call(this, { x, y, size, getNeighbor });\n  }\n\n  _rotateFigure({ x, y, size, rotation = 0, draw }: RotateFigureArgs): void {\n    const cx = x + size / 2;\n    const cy = y + size / 2;\n\n    draw();\n    this._element?.setAttribute(\"transform\", `rotate(${(180 * rotation) / Math.PI},${cx},${cy})`);\n  }\n\n  _basicDot(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n        this._element.setAttribute(\"cx\", String(x + size / 2));\n        this._element.setAttribute(\"cy\", String(y + size / 2));\n        this._element.setAttribute(\"r\", String(size / 2));\n      }\n    });\n  }\n\n  _basicSquare(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        this._element.setAttribute(\"x\", String(x));\n        this._element.setAttribute(\"y\", String(y));\n        this._element.setAttribute(\"width\", String(size));\n        this._element.setAttribute(\"height\", String(size));\n      }\n    });\n  }\n\n  //if rotation === 0 - right side is rounded\n  _basicSideRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` + //go to top left position\n            `v ${size}` + //draw line to left bottom corner\n            `h ${size / 2}` + //draw line to left bottom corner + half of size right\n            `a ${size / 2} ${size / 2}, 0, 0, 0, 0 ${-size}` // draw rounded corner\n        );\n      }\n    });\n  }\n\n  //if rotation === 0 - top right corner is rounded\n  _basicCornerRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` + //go to top left position\n            `v ${size}` + //draw line to left bottom corner\n            `h ${size}` + //draw line to right bottom corner\n            `v ${-size / 2}` + //draw line to right bottom corner + half of size top\n            `a ${size / 2} ${size / 2}, 0, 0, 0, ${-size / 2} ${-size / 2}` // draw rounded corner\n        );\n      }\n    });\n  }\n\n  //if rotation === 0 - top right corner is rounded\n  _basicCornerExtraRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` + //go to top left position\n            `v ${size}` + //draw line to left bottom corner\n            `h ${size}` + //draw line to right bottom corner\n            `a ${size} ${size}, 0, 0, 0, ${-size} ${-size}` // draw rounded top right corner\n        );\n      }\n    });\n  }\n\n  //if rotation === 0 - left bottom and right top corners are rounded\n  _basicCornersRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` + //go to left top position\n            `v ${size / 2}` + //draw line to left top corner + half of size bottom\n            `a ${size / 2} ${size / 2}, 0, 0, 0, ${size / 2} ${size / 2}` + // draw rounded left bottom corner\n            `h ${size / 2}` + //draw line to right bottom corner\n            `v ${-size / 2}` + //draw line to right bottom corner + half of size top\n            `a ${size / 2} ${size / 2}, 0, 0, 0, ${-size / 2} ${-size / 2}` // draw rounded right top corner\n        );\n      }\n    });\n  }\n\n  _drawDot({ x, y, size }: DrawArgs): void {\n    this._basicDot({ x, y, size, rotation: 0 });\n  }\n\n  _drawSquare({ x, y, size }: DrawArgs): void {\n    this._basicSquare({ x, y, size, rotation: 0 });\n  }\n\n  _drawRounded({ x, y, size, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicDot({ x, y, size, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount > 2 || (leftNeighbor && rightNeighbor) || (topNeighbor && bottomNeighbor)) {\n      this._basicSquare({ x, y, size, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount === 2) {\n      let rotation = 0;\n\n      if (leftNeighbor && topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (topNeighbor && rightNeighbor) {\n        rotation = Math.PI;\n      } else if (rightNeighbor && bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicCornerRounded({ x, y, size, rotation });\n      return;\n    }\n\n    if (neighborsCount === 1) {\n      let rotation = 0;\n\n      if (topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (rightNeighbor) {\n        rotation = Math.PI;\n      } else if (bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicSideRounded({ x, y, size, rotation });\n      return;\n    }\n  }\n\n  _drawExtraRounded({ x, y, size, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicDot({ x, y, size, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount > 2 || (leftNeighbor && rightNeighbor) || (topNeighbor && bottomNeighbor)) {\n      this._basicSquare({ x, y, size, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount === 2) {\n      let rotation = 0;\n\n      if (leftNeighbor && topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (topNeighbor && rightNeighbor) {\n        rotation = Math.PI;\n      } else if (rightNeighbor && bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicCornerExtraRounded({ x, y, size, rotation });\n      return;\n    }\n\n    if (neighborsCount === 1) {\n      let rotation = 0;\n\n      if (topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (rightNeighbor) {\n        rotation = Math.PI;\n      } else if (bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicSideRounded({ x, y, size, rotation });\n      return;\n    }\n  }\n\n  _drawClassy({ x, y, size, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicCornersRounded({ x, y, size, rotation: Math.PI / 2 });\n      return;\n    }\n\n    if (!leftNeighbor && !topNeighbor) {\n      this._basicCornerRounded({ x, y, size, rotation: -Math.PI / 2 });\n      return;\n    }\n\n    if (!rightNeighbor && !bottomNeighbor) {\n      this._basicCornerRounded({ x, y, size, rotation: Math.PI / 2 });\n      return;\n    }\n\n    this._basicSquare({ x, y, size, rotation: 0 });\n  }\n\n  _drawClassyRounded({ x, y, size, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicCornersRounded({ x, y, size, rotation: Math.PI / 2 });\n      return;\n    }\n\n    if (!leftNeighbor && !topNeighbor) {\n      this._basicCornerExtraRounded({ x, y, size, rotation: -Math.PI / 2 });\n      return;\n    }\n\n    if (!rightNeighbor && !bottomNeighbor) {\n      this._basicCornerExtraRounded({ x, y, size, rotation: Math.PI / 2 });\n      return;\n    }\n\n    this._basicSquare({ x, y, size, rotation: 0 });\n  }\n}\n","import { DotTypes } from \"../types\";\n\nexport default {\n  dots: \"dots\",\n  rounded: \"rounded\",\n  classy: \"classy\",\n  classyRounded: \"classy-rounded\",\n  square: \"square\",\n  extraRounded: \"extra-rounded\"\n} as DotTypes;\n","import { CornerSquareTypes } from \"../types\";\n\nexport default {\n  dot: \"dot\",\n  square: \"square\",\n  extraRounded: \"extra-rounded\"\n} as CornerSquareTypes;\n","import cornerSquareTypes from \"../../constants/cornerSquareTypes\";\nimport { CornerSquareType, DrawArgs, BasicFigureDrawArgs, RotateFigureArgs, Window } from \"../../types\";\n\nexport const availableCornerSquareTypes = Object.values(cornerSquareTypes);\n\nexport default class QRCornerSquare {\n  _element?: SVGElement;\n  _svg: SVGElement;\n  _type: CornerSquareType;\n  _window: Window;\n\n  constructor({ svg, type, window }: { svg: SVGElement; type: CornerSquareType; window: Window }) {\n    this._svg = svg;\n    this._type = type;\n    this._window = window;\n  }\n\n  draw(x: number, y: number, size: number, rotation: number): void {\n    const type = this._type;\n    let drawFunction;\n\n    switch (type) {\n      case cornerSquareTypes.square:\n        drawFunction = this._drawSquare;\n        break;\n      case cornerSquareTypes.extraRounded:\n        drawFunction = this._drawExtraRounded;\n        break;\n      case cornerSquareTypes.dot:\n      default:\n        drawFunction = this._drawDot;\n    }\n\n    drawFunction.call(this, { x, y, size, rotation });\n  }\n\n  _rotateFigure({ x, y, size, rotation = 0, draw }: RotateFigureArgs): void {\n    const cx = x + size / 2;\n    const cy = y + size / 2;\n\n    draw();\n    this._element?.setAttribute(\"transform\", `rotate(${(180 * rotation) / Math.PI},${cx},${cy})`);\n  }\n\n  _basicDot(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n    const dotSize = size / 7;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\"clip-rule\", \"evenodd\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x + size / 2} ${y}` + // M cx, y //  Move to top of ring\n            `a ${size / 2} ${size / 2} 0 1 0 0.1 0` + // a outerRadius, outerRadius, 0, 1, 0, 1, 0 // Draw outer arc, but don't close it\n            `z` + // Z // Close the outer shape\n            `m 0 ${dotSize}` + // m -1 outerRadius-innerRadius // Move to top point of inner radius\n            `a ${size / 2 - dotSize} ${size / 2 - dotSize} 0 1 1 -0.1 0` + // a innerRadius, innerRadius, 0, 1, 1, -1, 0 // Draw inner arc, but don't close it\n            `Z` // Z // Close the inner ring. Actually will still work without, but inner ring will have one unit missing in stroke\n        );\n      }\n    });\n  }\n\n  _basicSquare(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n    const dotSize = size / 7;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\"clip-rule\", \"evenodd\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` +\n            `v ${size}` +\n            `h ${size}` +\n            `v ${-size}` +\n            `z` +\n            `M ${x + dotSize} ${y + dotSize}` +\n            `h ${size - 2 * dotSize}` +\n            `v ${size - 2 * dotSize}` +\n            `h ${-size + 2 * dotSize}` +\n            `z`\n        );\n      }\n    });\n  }\n\n  _basicExtraRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n    const dotSize = size / 7;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\"clip-rule\", \"evenodd\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y + 2.5 * dotSize}` +\n            `v ${2 * dotSize}` +\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${dotSize * 2.5} ${dotSize * 2.5}` +\n            `h ${2 * dotSize}` +\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${dotSize * 2.5} ${-dotSize * 2.5}` +\n            `v ${-2 * dotSize}` +\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${-dotSize * 2.5} ${-dotSize * 2.5}` +\n            `h ${-2 * dotSize}` +\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${-dotSize * 2.5} ${dotSize * 2.5}` +\n            `M ${x + 2.5 * dotSize} ${y + dotSize}` +\n            `h ${2 * dotSize}` +\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${dotSize * 1.5} ${dotSize * 1.5}` +\n            `v ${2 * dotSize}` +\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${-dotSize * 1.5} ${dotSize * 1.5}` +\n            `h ${-2 * dotSize}` +\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${-dotSize * 1.5} ${-dotSize * 1.5}` +\n            `v ${-2 * dotSize}` +\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${dotSize * 1.5} ${-dotSize * 1.5}`\n        );\n      }\n    });\n  }\n\n  _drawDot({ x, y, size, rotation }: DrawArgs): void {\n    this._basicDot({ x, y, size, rotation });\n  }\n\n  _drawSquare({ x, y, size, rotation }: DrawArgs): void {\n    this._basicSquare({ x, y, size, rotation });\n  }\n\n  _drawExtraRounded({ x, y, size, rotation }: DrawArgs): void {\n    this._basicExtraRounded({ x, y, size, rotation });\n  }\n}\n","import { CornerDotTypes } from \"../types\";\n\nexport default {\n  dot: \"dot\",\n  square: \"square\"\n} as CornerDotTypes;","import cornerDotTypes from \"../../constants/cornerDotTypes\";\nimport { CornerDotType, RotateFigureArgs, BasicFigureDrawArgs, DrawArgs, Window } from \"../../types\";\n\nexport const availableCornerDotTypes = Object.values(cornerDotTypes);\n\nexport default class QRCornerDot {\n  _element?: SVGElement;\n  _svg: SVGElement;\n  _type: CornerDotType;\n  _window: Window;\n\n  constructor({ svg, type, window }: { svg: SVGElement; type: CornerDotType; window: Window }) {\n    this._svg = svg;\n    this._type = type;\n    this._window = window;\n  }\n\n  draw(x: number, y: number, size: number, rotation: number): void {\n    const type = this._type;\n    let drawFunction;\n\n    switch (type) {\n      case cornerDotTypes.square:\n        drawFunction = this._drawSquare;\n        break;\n      case cornerDotTypes.dot:\n      default:\n        drawFunction = this._drawDot;\n    }\n\n    drawFunction.call(this, { x, y, size, rotation });\n  }\n\n  _rotateFigure({ x, y, size, rotation = 0, draw }: RotateFigureArgs): void {\n    const cx = x + size / 2;\n    const cy = y + size / 2;\n\n    draw();\n    this._element?.setAttribute(\"transform\", `rotate(${(180 * rotation) / Math.PI},${cx},${cy})`);\n  }\n\n  _basicDot(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n        this._element.setAttribute(\"cx\", String(x + size / 2));\n        this._element.setAttribute(\"cy\", String(y + size / 2));\n        this._element.setAttribute(\"r\", String(size / 2));\n      }\n    });\n  }\n\n  _basicSquare(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        this._element.setAttribute(\"x\", String(x));\n        this._element.setAttribute(\"y\", String(y));\n        this._element.setAttribute(\"width\", String(size));\n        this._element.setAttribute(\"height\", String(size));\n      }\n    });\n  }\n\n  _drawDot({ x, y, size, rotation }: DrawArgs): void {\n    this._basicDot({ x, y, size, rotation });\n  }\n\n  _drawSquare({ x, y, size, rotation }: DrawArgs): void {\n    this._basicSquare({ x, y, size, rotation });\n  }\n}\n","import { GradientTypes } from \"../types\";\n\nexport default {\n  radial: \"radial\",\n  linear: \"linear\"\n} as GradientTypes;\n","import { ShapeTypes } from \"../types\";\n\nexport default {\n  square: \"square\",\n  circle: \"circle\"\n} as ShapeTypes;\n","import calculateImageSize from \"../tools/calculateImageSize\";\nimport toDataUrl from \"../tools/toDataUrl\";\nimport errorCorrectionPercents from \"../constants/errorCorrectionPercents\";\nimport QRDot from \"../figures/dot/QRDot\";\nimport QRCornerSquare, { availableCornerSquareTypes } from \"../figures/cornerSquare/QRCornerSquare\";\nimport QRCornerDot, { availableCornerDotTypes } from \"../figures/cornerDot/QRCornerDot\";\nimport { RequiredOptions } from \"./QROptions\";\nimport gradientTypes from \"../constants/gradientTypes\";\nimport shapeTypes from \"../constants/shapeTypes\";\nimport { DotType, QRCode, FilterFunction, Gradient, Window } from \"../types\";\nimport { Image } from \"canvas\";\n\nconst squareMask = [\n  [1, 1, 1, 1, 1, 1, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 1, 1, 1, 1, 1, 1]\n];\n\nconst dotMask = [\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 1, 1, 1, 0, 0],\n  [0, 0, 1, 1, 1, 0, 0],\n  [0, 0, 1, 1, 1, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0]\n];\n\nexport default class QRSVG {\n  _window: Window;\n  _element: SVGElement;\n  _defs: SVGElement;\n  _backgroundClipPath?: SVGElement;\n  _dotsClipPath?: SVGElement;\n  _cornersSquareClipPath?: SVGElement;\n  _cornersDotClipPath?: SVGElement;\n  _options: RequiredOptions;\n  _qr?: QRCode;\n  _image?: HTMLImageElement | Image;\n  _imageUri?: string;\n  _instanceId: number;\n\n  static instanceCount = 0;\n\n  //TODO don't pass all options to this class\n  constructor(options: RequiredOptions, window: Window) {\n    this._window = window;\n    this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    this._element.setAttribute(\"width\", String(options.width));\n    this._element.setAttribute(\"height\", String(options.height));\n    this._element.setAttribute(\"xmlns:xlink\", \"http://www.w3.org/1999/xlink\");\n    if (!options.dotsOptions.roundSize) {\n      this._element.setAttribute(\"shape-rendering\", \"crispEdges\");\n    }\n    this._element.setAttribute(\"viewBox\", `0 0 ${options.width} ${options.height}`);\n    this._defs = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\");\n    this._element.appendChild(this._defs);\n    this._imageUri = options.image;\n    this._instanceId = QRSVG.instanceCount++;\n    this._options = options;\n  }\n\n  get width(): number {\n    return this._options.width;\n  }\n\n  get height(): number {\n    return this._options.height;\n  }\n\n  getElement(): SVGElement {\n    return this._element;\n  }\n\n  async drawQR(qr: QRCode): Promise<void> {\n    const count = qr.getModuleCount();\n    const minSize = Math.min(this._options.width, this._options.height) - this._options.margin * 2;\n    const realQRSize = this._options.shape === shapeTypes.circle ? minSize / Math.sqrt(2) : minSize;\n    const dotSize = this._roundSize(realQRSize / count);\n    let drawImageSize = {\n      hideXDots: 0,\n      hideYDots: 0,\n      width: 0,\n      height: 0\n    };\n\n    this._qr = qr;\n\n    if (this._options.image) {\n      //We need it to get image size\n      await this.loadImage();\n      if (!this._image) return;\n      const { imageOptions, qrOptions } = this._options;\n      const coverLevel = imageOptions.imageSize * errorCorrectionPercents[qrOptions.errorCorrectionLevel];\n      const maxHiddenDots = Math.floor(coverLevel * count * count);\n\n      drawImageSize = calculateImageSize({\n        originalWidth: this._image.width,\n        originalHeight: this._image.height,\n        maxHiddenDots,\n        maxHiddenAxisDots: count - 14,\n        dotSize\n      });\n    }\n\n    this.drawBackground();\n    this.drawDots((row: number, col: number): boolean => {\n      if (this._options.imageOptions.hideBackgroundDots) {\n        if (\n          row >= (count - drawImageSize.hideYDots) / 2 &&\n          row < (count + drawImageSize.hideYDots) / 2 &&\n          col >= (count - drawImageSize.hideXDots) / 2 &&\n          col < (count + drawImageSize.hideXDots) / 2\n        ) {\n          return false;\n        }\n      }\n\n      if (squareMask[row]?.[col] || squareMask[row - count + 7]?.[col] || squareMask[row]?.[col - count + 7]) {\n        return false;\n      }\n\n      if (dotMask[row]?.[col] || dotMask[row - count + 7]?.[col] || dotMask[row]?.[col - count + 7]) {\n        return false;\n      }\n\n      return true;\n    });\n    this.drawCorners();\n\n    if (this._options.image) {\n      await this.drawImage({ width: drawImageSize.width, height: drawImageSize.height, count, dotSize });\n    }\n  }\n\n  drawBackground(): void {\n    const element = this._element;\n    const options = this._options;\n\n    if (element) {\n      const gradientOptions = options.backgroundOptions?.gradient;\n      const color = options.backgroundOptions?.color;\n      let height = options.height;\n      let width = options.width;\n\n      if (gradientOptions || color) {\n        const element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        this._backgroundClipPath = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        this._backgroundClipPath.setAttribute(\"id\", `clip-path-background-color-${this._instanceId}`);\n        this._defs.appendChild(this._backgroundClipPath);\n\n        if (options.backgroundOptions?.round) {\n          height = width = Math.min(options.width, options.height);\n          element.setAttribute(\"rx\", String((height / 2) * options.backgroundOptions.round));\n        }\n\n        element.setAttribute(\"x\", String(this._roundSize((options.width - width) / 2)));\n        element.setAttribute(\"y\", String(this._roundSize((options.height - height) / 2)));\n        element.setAttribute(\"width\", String(width));\n        element.setAttribute(\"height\", String(height));\n\n        this._backgroundClipPath.appendChild(element);\n\n        this._createColor({\n          options: gradientOptions,\n          color: color,\n          additionalRotation: 0,\n          x: 0,\n          y: 0,\n          height: options.height,\n          width: options.width,\n          name: `background-color-${this._instanceId}`\n        });\n      }\n    }\n  }\n\n  drawDots(filter?: FilterFunction): void {\n    if (!this._qr) {\n      throw \"QR code is not defined\";\n    }\n\n    const options = this._options;\n    const count = this._qr.getModuleCount();\n\n    if (count > options.width || count > options.height) {\n      throw \"The canvas is too small.\";\n    }\n\n    const minSize = Math.min(options.width, options.height) - options.margin * 2;\n    const realQRSize = options.shape === shapeTypes.circle ? minSize / Math.sqrt(2) : minSize;\n    const dotSize = this._roundSize(realQRSize / count);\n    const xBeginning = this._roundSize((options.width - count * dotSize) / 2);\n    const yBeginning = this._roundSize((options.height - count * dotSize) / 2);\n    const dot = new QRDot({\n      svg: this._element,\n      type: options.dotsOptions.type,\n      window: this._window\n    });\n\n    this._dotsClipPath = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n    this._dotsClipPath.setAttribute(\"id\", `clip-path-dot-color-${this._instanceId}`);\n    this._defs.appendChild(this._dotsClipPath);\n\n    this._createColor({\n      options: options.dotsOptions?.gradient,\n      color: options.dotsOptions.color,\n      additionalRotation: 0,\n      x: 0,\n      y: 0,\n      height: options.height,\n      width: options.width,\n      name: `dot-color-${this._instanceId}`\n    });\n\n    for (let row = 0; row < count; row++) {\n      for (let col = 0; col < count; col++) {\n        if (filter && !filter(row, col)) {\n          continue;\n        }\n        if (!this._qr?.isDark(row, col)) {\n          continue;\n        }\n\n        dot.draw(\n          xBeginning + col * dotSize,\n          yBeginning + row * dotSize,\n          dotSize,\n          (xOffset: number, yOffset: number): boolean => {\n            if (col + xOffset < 0 || row + yOffset < 0 || col + xOffset >= count || row + yOffset >= count) return false;\n            if (filter && !filter(row + yOffset, col + xOffset)) return false;\n            return !!this._qr && this._qr.isDark(row + yOffset, col + xOffset);\n          }\n        );\n\n        if (dot._element && this._dotsClipPath) {\n          this._dotsClipPath.appendChild(dot._element);\n        }\n      }\n    }\n\n    if (options.shape === shapeTypes.circle) {\n      const additionalDots = this._roundSize((minSize / dotSize - count) / 2);\n      const fakeCount = count + additionalDots * 2;\n      const xFakeBeginning = xBeginning - additionalDots * dotSize;\n      const yFakeBeginning = yBeginning - additionalDots * dotSize;\n      const fakeMatrix: number[][] = [];\n      const center = this._roundSize(fakeCount / 2);\n\n      for (let row = 0; row < fakeCount; row++) {\n        fakeMatrix[row] = [];\n        for (let col = 0; col < fakeCount; col++) {\n          if (\n            row >= additionalDots - 1 &&\n            row <= fakeCount - additionalDots &&\n            col >= additionalDots - 1 &&\n            col <= fakeCount - additionalDots\n          ) {\n            fakeMatrix[row][col] = 0;\n            continue;\n          }\n\n          if (Math.sqrt((row - center) * (row - center) + (col - center) * (col - center)) > center) {\n            fakeMatrix[row][col] = 0;\n            continue;\n          }\n\n          //Get random dots from QR code to show it outside of QR code\n          fakeMatrix[row][col] = this._qr.isDark(\n            col - 2 * additionalDots < 0 ? col : col >= count ? col - 2 * additionalDots : col - additionalDots,\n            row - 2 * additionalDots < 0 ? row : row >= count ? row - 2 * additionalDots : row - additionalDots\n          )\n            ? 1\n            : 0;\n        }\n      }\n\n      for (let row = 0; row < fakeCount; row++) {\n        for (let col = 0; col < fakeCount; col++) {\n          if (!fakeMatrix[row][col]) continue;\n\n          dot.draw(\n            xFakeBeginning + col * dotSize,\n            yFakeBeginning + row * dotSize,\n            dotSize,\n            (xOffset: number, yOffset: number): boolean => {\n              return !!fakeMatrix[row + yOffset]?.[col + xOffset];\n            }\n          );\n          if (dot._element && this._dotsClipPath) {\n            this._dotsClipPath.appendChild(dot._element);\n          }\n        }\n      }\n    }\n  }\n\n  drawCorners(): void {\n    if (!this._qr) {\n      throw \"QR code is not defined\";\n    }\n\n    const element = this._element;\n    const options = this._options;\n\n    if (!element) {\n      throw \"Element code is not defined\";\n    }\n\n    const count = this._qr.getModuleCount();\n    const minSize = Math.min(options.width, options.height) - options.margin * 2;\n    const realQRSize = options.shape === shapeTypes.circle ? minSize / Math.sqrt(2) : minSize;\n    const dotSize = this._roundSize(realQRSize / count);\n    const cornersSquareSize = dotSize * 7;\n    const cornersDotSize = dotSize * 3;\n    const xBeginning = this._roundSize((options.width - count * dotSize) / 2);\n    const yBeginning = this._roundSize((options.height - count * dotSize) / 2);\n\n    [\n      [0, 0, 0],\n      [1, 0, Math.PI / 2],\n      [0, 1, -Math.PI / 2]\n    ].forEach(([column, row, rotation]) => {\n      const x = xBeginning + column * dotSize * (count - 7);\n      const y = yBeginning + row * dotSize * (count - 7);\n      let cornersSquareClipPath = this._dotsClipPath;\n      let cornersDotClipPath = this._dotsClipPath;\n\n      if (options.cornersSquareOptions?.gradient || options.cornersSquareOptions?.color) {\n        cornersSquareClipPath = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        cornersSquareClipPath.setAttribute(\"id\", `clip-path-corners-square-color-${column}-${row}-${this._instanceId}`);\n        this._defs.appendChild(cornersSquareClipPath);\n        this._cornersSquareClipPath = this._cornersDotClipPath = cornersDotClipPath = cornersSquareClipPath;\n\n        this._createColor({\n          options: options.cornersSquareOptions?.gradient,\n          color: options.cornersSquareOptions?.color,\n          additionalRotation: rotation,\n          x,\n          y,\n          height: cornersSquareSize,\n          width: cornersSquareSize,\n          name: `corners-square-color-${column}-${row}-${this._instanceId}`\n        });\n      }\n\n      if (options.cornersSquareOptions?.type && availableCornerSquareTypes.includes(options.cornersSquareOptions.type)) {\n        const cornersSquare = new QRCornerSquare({\n          svg: this._element,\n          type: options.cornersSquareOptions.type,\n          window: this._window\n        });\n\n        cornersSquare.draw(x, y, cornersSquareSize, rotation);\n\n        if (cornersSquare._element && cornersSquareClipPath) {\n          cornersSquareClipPath.appendChild(cornersSquare._element);\n        }\n      } else {\n        const dot = new QRDot({\n          svg: this._element,\n          type: (options.cornersSquareOptions?.type as DotType) || options.dotsOptions.type,\n          window: this._window\n        });\n\n        for (let row = 0; row < squareMask.length; row++) {\n          for (let col = 0; col < squareMask[row].length; col++) {\n            if (!squareMask[row]?.[col]) {\n              continue;\n            }\n\n            dot.draw(\n              x + col * dotSize,\n              y + row * dotSize,\n              dotSize,\n              (xOffset: number, yOffset: number): boolean => !!squareMask[row + yOffset]?.[col + xOffset]\n            );\n\n            if (dot._element && cornersSquareClipPath) {\n              cornersSquareClipPath.appendChild(dot._element);\n            }\n          }\n        }\n      }\n\n      if (options.cornersDotOptions?.gradient || options.cornersDotOptions?.color) {\n        cornersDotClipPath = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        cornersDotClipPath.setAttribute(\"id\", `clip-path-corners-dot-color-${column}-${row}-${this._instanceId}`);\n        this._defs.appendChild(cornersDotClipPath);\n        this._cornersDotClipPath = cornersDotClipPath;\n\n        this._createColor({\n          options: options.cornersDotOptions?.gradient,\n          color: options.cornersDotOptions?.color,\n          additionalRotation: rotation,\n          x: x + dotSize * 2,\n          y: y + dotSize * 2,\n          height: cornersDotSize,\n          width: cornersDotSize,\n          name: `corners-dot-color-${column}-${row}-${this._instanceId}`\n        });\n      }\n\n      if (options.cornersDotOptions?.type && availableCornerDotTypes.includes(options.cornersDotOptions.type)) {\n        const cornersDot = new QRCornerDot({\n          svg: this._element,\n          type: options.cornersDotOptions.type,\n          window: this._window\n        });\n\n        cornersDot.draw(x + dotSize * 2, y + dotSize * 2, cornersDotSize, rotation);\n\n        if (cornersDot._element && cornersDotClipPath) {\n          cornersDotClipPath.appendChild(cornersDot._element);\n        }\n      } else {\n        const dot = new QRDot({\n          svg: this._element,\n          type: (options.cornersDotOptions?.type as DotType) || options.dotsOptions.type,\n          window: this._window\n        });\n\n        for (let row = 0; row < dotMask.length; row++) {\n          for (let col = 0; col < dotMask[row].length; col++) {\n            if (!dotMask[row]?.[col]) {\n              continue;\n            }\n\n            dot.draw(\n              x + col * dotSize,\n              y + row * dotSize,\n              dotSize,\n              (xOffset: number, yOffset: number): boolean => !!dotMask[row + yOffset]?.[col + xOffset]\n            );\n\n            if (dot._element && cornersDotClipPath) {\n              cornersDotClipPath.appendChild(dot._element);\n            }\n          }\n        }\n      }\n    });\n  }\n\n  loadImage(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const options = this._options;\n\n      if (!options.image) {\n        return reject(\"Image is not defined\");\n      }\n\n      if (options.nodeCanvas?.loadImage) {\n        options.nodeCanvas\n          .loadImage(options.image)\n          .then((image: Image) => {\n            this._image = image;\n            if (this._options.imageOptions.saveAsBlob) {\n              const canvas = options.nodeCanvas?.createCanvas( this._image.width,  this._image.height);\n              canvas?.getContext('2d')?.drawImage(image, 0, 0);\n              this._imageUri = canvas?.toDataURL();\n            }\n            resolve();\n          })\n          .catch(reject);\n      } else {\n        const image = new this._window.Image();\n\n        if (typeof options.imageOptions.crossOrigin === \"string\") {\n          image.crossOrigin = options.imageOptions.crossOrigin;\n        }\n\n        this._image = image;\n        image.onload = async () => {\n          if (this._options.imageOptions.saveAsBlob) {\n            this._imageUri = await toDataUrl(options.image || \"\", this._window);\n          }\n          resolve();\n        };\n        image.src = options.image;\n      }\n    });\n  }\n\n  async drawImage({\n    width,\n    height,\n    count,\n    dotSize\n  }: {\n    width: number;\n    height: number;\n    count: number;\n    dotSize: number;\n  }): Promise<void> {\n    const options = this._options;\n    const xBeginning = this._roundSize((options.width - count * dotSize) / 2);\n    const yBeginning = this._roundSize((options.height - count * dotSize) / 2);\n    const dx = xBeginning + this._roundSize(options.imageOptions.margin + (count * dotSize - width) / 2);\n    const dy = yBeginning + this._roundSize(options.imageOptions.margin + (count * dotSize - height) / 2);\n    const dw = width - options.imageOptions.margin * 2;\n    const dh = height - options.imageOptions.margin * 2;\n\n    const image = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"image\");\n    image.setAttribute(\"href\", this._imageUri || \"\");\n    image.setAttribute(\"x\", String(dx));\n    image.setAttribute(\"y\", String(dy));\n    image.setAttribute(\"width\", `${dw}px`);\n    image.setAttribute(\"height\", `${dh}px`);\n\n    this._element.appendChild(image);\n  }\n\n  _createColor({\n    options,\n    color,\n    additionalRotation,\n    x,\n    y,\n    height,\n    width,\n    name\n  }: {\n    options?: Gradient;\n    color?: string;\n    additionalRotation: number;\n    x: number;\n    y: number;\n    height: number;\n    width: number;\n    name: string;\n  }): void {\n    const size = width > height ? width : height;\n    const rect = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n    rect.setAttribute(\"x\", String(x));\n    rect.setAttribute(\"y\", String(y));\n    rect.setAttribute(\"height\", String(height));\n    rect.setAttribute(\"width\", String(width));\n    rect.setAttribute(\"clip-path\", `url('#clip-path-${name}')`);\n\n    if (options) {\n      let gradient: SVGElement;\n      if (options.type === gradientTypes.radial) {\n        gradient = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"radialGradient\");\n        gradient.setAttribute(\"id\", name);\n        gradient.setAttribute(\"gradientUnits\", \"userSpaceOnUse\");\n        gradient.setAttribute(\"fx\", String(x + width / 2));\n        gradient.setAttribute(\"fy\", String(y + height / 2));\n        gradient.setAttribute(\"cx\", String(x + width / 2));\n        gradient.setAttribute(\"cy\", String(y + height / 2));\n        gradient.setAttribute(\"r\", String(size / 2));\n      } else {\n        const rotation = ((options.rotation || 0) + additionalRotation) % (2 * Math.PI);\n        const positiveRotation = (rotation + 2 * Math.PI) % (2 * Math.PI);\n        let x0 = x + width / 2;\n        let y0 = y + height / 2;\n        let x1 = x + width / 2;\n        let y1 = y + height / 2;\n\n        if (\n          (positiveRotation >= 0 && positiveRotation <= 0.25 * Math.PI) ||\n          (positiveRotation > 1.75 * Math.PI && positiveRotation <= 2 * Math.PI)\n        ) {\n          x0 = x0 - width / 2;\n          y0 = y0 - (height / 2) * Math.tan(rotation);\n          x1 = x1 + width / 2;\n          y1 = y1 + (height / 2) * Math.tan(rotation);\n        } else if (positiveRotation > 0.25 * Math.PI && positiveRotation <= 0.75 * Math.PI) {\n          y0 = y0 - height / 2;\n          x0 = x0 - width / 2 / Math.tan(rotation);\n          y1 = y1 + height / 2;\n          x1 = x1 + width / 2 / Math.tan(rotation);\n        } else if (positiveRotation > 0.75 * Math.PI && positiveRotation <= 1.25 * Math.PI) {\n          x0 = x0 + width / 2;\n          y0 = y0 + (height / 2) * Math.tan(rotation);\n          x1 = x1 - width / 2;\n          y1 = y1 - (height / 2) * Math.tan(rotation);\n        } else if (positiveRotation > 1.25 * Math.PI && positiveRotation <= 1.75 * Math.PI) {\n          y0 = y0 + height / 2;\n          x0 = x0 + width / 2 / Math.tan(rotation);\n          y1 = y1 - height / 2;\n          x1 = x1 - width / 2 / Math.tan(rotation);\n        }\n\n        gradient = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"linearGradient\");\n        gradient.setAttribute(\"id\", name);\n        gradient.setAttribute(\"gradientUnits\", \"userSpaceOnUse\");\n        gradient.setAttribute(\"x1\", String(Math.round(x0)));\n        gradient.setAttribute(\"y1\", String(Math.round(y0)));\n        gradient.setAttribute(\"x2\", String(Math.round(x1)));\n        gradient.setAttribute(\"y2\", String(Math.round(y1)));\n      }\n\n      options.colorStops.forEach(({ offset, color }: { offset: number; color: string }) => {\n        const stop = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"stop\");\n        stop.setAttribute(\"offset\", `${100 * offset}%`);\n        stop.setAttribute(\"stop-color\", color);\n        gradient.appendChild(stop);\n      });\n\n      rect.setAttribute(\"fill\", `url('#${name}')`);\n      this._defs.appendChild(gradient);\n    } else if (color) {\n      rect.setAttribute(\"fill\", color);\n    }\n\n    this._element.appendChild(rect);\n  }\n\n  _roundSize = (value: number) => {\n    if (this._options.dotsOptions.roundSize) {\n      return Math.floor(value);\n    }\n    return value;\n  }\n}\n","interface ImageSizeOptions {\n  originalHeight: number;\n  originalWidth: number;\n  maxHiddenDots: number;\n  maxHiddenAxisDots?: number;\n  dotSize: number;\n}\n\ninterface ImageSizeResult {\n  height: number;\n  width: number;\n  hideYDots: number;\n  hideXDots: number;\n}\n\nexport default function calculateImageSize({\n  originalHeight,\n  originalWidth,\n  maxHiddenDots,\n  maxHiddenAxisDots,\n  dotSize\n}: ImageSizeOptions): ImageSizeResult {\n  const hideDots = { x: 0, y: 0 };\n  const imageSize = { x: 0, y: 0 };\n\n  if (originalHeight <= 0 || originalWidth <= 0 || maxHiddenDots <= 0 || dotSize <= 0) {\n    return {\n      height: 0,\n      width: 0,\n      hideYDots: 0,\n      hideXDots: 0\n    };\n  }\n\n  const k = originalHeight / originalWidth;\n\n  //Getting the maximum possible axis hidden dots\n  hideDots.x = Math.floor(Math.sqrt(maxHiddenDots / k));\n  //The count of hidden dot's can't be less than 1\n  if (hideDots.x <= 0) hideDots.x = 1;\n  //Check the limit of the maximum allowed axis hidden dots\n  if (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.x) hideDots.x = maxHiddenAxisDots;\n  //The count of dots should be odd\n  if (hideDots.x % 2 === 0) hideDots.x--;\n  imageSize.x = hideDots.x * dotSize;\n  //Calculate opposite axis hidden dots based on axis value.\n  //The value will be odd.\n  //We use ceil to prevent dots covering by the image.\n  hideDots.y = 1 + 2 * Math.ceil((hideDots.x * k - 1) / 2);\n  imageSize.y = Math.round(imageSize.x * k);\n  //If the result dots count is bigger than max - then decrease size and calculate again\n  if (hideDots.y * hideDots.x > maxHiddenDots || (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.y)) {\n    if (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.y) {\n      hideDots.y = maxHiddenAxisDots;\n      if (hideDots.y % 2 === 0) hideDots.x--;\n    } else {\n      hideDots.y -= 2;\n    }\n    imageSize.y = hideDots.y * dotSize;\n    hideDots.x = 1 + 2 * Math.ceil((hideDots.y / k - 1) / 2);\n    imageSize.x = Math.round(imageSize.y / k);\n  }\n\n  return {\n    height: imageSize.y,\n    width: imageSize.x,\n    hideYDots: hideDots.y,\n    hideXDots: hideDots.x\n  };\n}\n","import { Window } from \"../types\";\n\nexport default async function toDataURL(url: string, window: Window): Promise<string> {\n  return new Promise((resolve) => {\n    const xhr = new window.XMLHttpRequest();\n    xhr.onload = function () {\n      const reader = new window.FileReader();\n      reader.onloadend = function () {\n        resolve(reader.result as string);\n      };\n      reader.readAsDataURL(xhr.response);\n    };\n    xhr.open(\"GET\", url);\n    xhr.responseType = \"blob\";\n    xhr.send();\n  });\n}\n","import { DrawTypes } from \"../types\";\n\nexport default {\n  canvas: \"canvas\",\n  svg: \"svg\"\n} as DrawTypes;\n","import { TypeNumber } from \"../types\";\n\ninterface TypesMap {\n  [key: number]: TypeNumber;\n}\n\nconst qrTypes: TypesMap = {};\n\nfor (let type = 0; type <= 40; type++) {\n  qrTypes[type] = type as TypeNumber;\n}\n\n// 0 types is autodetect\n\n// types = {\n//     0: 0,\n//     1: 1,\n//     ...\n//     40: 40\n// }\n\nexport default qrTypes;\n","import qrTypes from \"../constants/qrTypes\";\nimport drawTypes from \"../constants/drawTypes\";\nimport shapeTypes from \"../constants/shapeTypes\";\nimport errorCorrectionLevels from \"../constants/errorCorrectionLevels\";\nimport { ShapeType, DotType, Options, TypeNumber, ErrorCorrectionLevel, Mode, DrawType, Gradient } from \"../types\";\n\nexport interface RequiredOptions extends Options {\n  type: DrawType;\n  shape: ShapeType;\n  width: number;\n  height: number;\n  margin: number;\n  data: string;\n  qrOptions: {\n    typeNumber: TypeNumber;\n    mode?: Mode;\n    errorCorrectionLevel: ErrorCorrectionLevel;\n  };\n  imageOptions: {\n    saveAsBlob: boolean;\n    hideBackgroundDots: boolean;\n    imageSize: number;\n    crossOrigin?: string;\n    margin: number;\n  };\n  dotsOptions: {\n    type: DotType;\n    color: string;\n    gradient?: Gradient;\n    roundSize?: boolean;\n  };\n  backgroundOptions: {\n    round: number;\n    color: string;\n    gradient?: Gradient;\n  };\n}\n\nconst defaultOptions: RequiredOptions = {\n  type: drawTypes.canvas,\n  shape: shapeTypes.square,\n  width: 300,\n  height: 300,\n  data: \"\",\n  margin: 0,\n  qrOptions: {\n    typeNumber: qrTypes[0],\n    mode: undefined,\n    errorCorrectionLevel: errorCorrectionLevels.Q\n  },\n  imageOptions: {\n    saveAsBlob: true,\n    hideBackgroundDots: true,\n    imageSize: 0.4,\n    crossOrigin: undefined,\n    margin: 0\n  },\n  dotsOptions: {\n    type: \"square\",\n    color: \"#000\",\n    roundSize: true,\n  },\n  backgroundOptions: {\n    round: 0,\n    color: \"#fff\"\n  }\n};\n\nexport default defaultOptions;\n","import { ErrorCorrectionLevel } from \"../types\";\n\ninterface ErrorCorrectionLevels {\n  [key: string]: ErrorCorrectionLevel;\n}\n\nexport default {\n  L: \"L\",\n  M: \"M\",\n  Q: \"Q\",\n  H: \"H\"\n} as ErrorCorrectionLevels;\n","import { RequiredOptions } from \"../core/QROptions\";\nimport { Gradient } from \"../types\";\n\nfunction sanitizeGradient(gradient: Gradient): Gradient {\n  const newGradient = { ...gradient };\n\n  if (!newGradient.colorStops || !newGradient.colorStops.length) {\n    throw \"Field 'colorStops' is required in gradient\";\n  }\n\n  if (newGradient.rotation) {\n    newGradient.rotation = Number(newGradient.rotation);\n  } else {\n    newGradient.rotation = 0;\n  }\n\n  newGradient.colorStops = newGradient.colorStops.map((colorStop: { offset: number; color: string }) => ({\n    ...colorStop,\n    offset: Number(colorStop.offset)\n  }));\n\n  return newGradient;\n}\n\nexport default function sanitizeOptions(options: RequiredOptions): RequiredOptions {\n  const newOptions = { ...options };\n\n  newOptions.width = Number(newOptions.width);\n  newOptions.height = Number(newOptions.height);\n  newOptions.margin = Number(newOptions.margin);\n  newOptions.imageOptions = {\n    ...newOptions.imageOptions,\n    hideBackgroundDots: Boolean(newOptions.imageOptions.hideBackgroundDots),\n    imageSize: Number(newOptions.imageOptions.imageSize),\n    margin: Number(newOptions.imageOptions.margin)\n  };\n\n  if (newOptions.margin > Math.min(newOptions.width, newOptions.height)) {\n    newOptions.margin = Math.min(newOptions.width, newOptions.height);\n  }\n\n  newOptions.dotsOptions = {\n    ...newOptions.dotsOptions\n  };\n  if (newOptions.dotsOptions.gradient) {\n    newOptions.dotsOptions.gradient = sanitizeGradient(newOptions.dotsOptions.gradient);\n  }\n\n  if (newOptions.cornersSquareOptions) {\n    newOptions.cornersSquareOptions = {\n      ...newOptions.cornersSquareOptions\n    };\n    if (newOptions.cornersSquareOptions.gradient) {\n      newOptions.cornersSquareOptions.gradient = sanitizeGradient(newOptions.cornersSquareOptions.gradient);\n    }\n  }\n\n  if (newOptions.cornersDotOptions) {\n    newOptions.cornersDotOptions = {\n      ...newOptions.cornersDotOptions\n    };\n    if (newOptions.cornersDotOptions.gradient) {\n      newOptions.cornersDotOptions.gradient = sanitizeGradient(newOptions.cornersDotOptions.gradient);\n    }\n  }\n\n  if (newOptions.backgroundOptions) {\n    newOptions.backgroundOptions = {\n      ...newOptions.backgroundOptions\n    };\n    if (newOptions.backgroundOptions.gradient) {\n      newOptions.backgroundOptions.gradient = sanitizeGradient(newOptions.backgroundOptions.gradient);\n    }\n  }\n\n  return newOptions;\n}\n","export default function getMimeType(extension: string) {\n  if (!extension) throw new Error('Extension must be defined');\n  if (extension[0] === \".\") {\n    extension = extension.substring(1);\n  }\n  const type = {\n    \"bmp\": \"image/bmp\",\n    \"gif\": \"image/gif\",\n    \"ico\": \"image/vnd.microsoft.icon\",\n    \"jpeg\": \"image/jpeg\",\n    \"jpg\": \"image/jpeg\",\n    \"png\": \"image/png\",\n    \"svg\": \"image/svg+xml\",\n    \"tif\": \"image/tiff\",\n    \"tiff\": \"image/tiff\",\n    \"webp\": \"image/webp\",\n    \"pdf\": \"application/pdf\",\n  }[extension.toLowerCase()]\n\n  if (!type) {\n    throw new Error(`Extension \"${extension}\" is not supported`);\n  }\n\n  return type;\n}","import getMode from \"../tools/getMode\";\nimport mergeDeep from \"../tools/merge\";\nimport downloadURI from \"../tools/downloadURI\";\nimport QRSVG from \"./QRSVG\";\nimport drawTypes from \"../constants/drawTypes\";\n\nimport defaultOptions, { RequiredOptions } from \"./QROptions\";\nimport sanitizeOptions from \"../tools/sanitizeOptions\";\nimport { FileExtension, QRCode, Options, DownloadOptions, ExtensionFunction, Window } from \"../types\";\nimport qrcode from \"qrcode-generator\";\nimport getMimeType from \"../tools/getMimeType\";\nimport { Canvas as NodeCanvas, Image } from \"canvas\";\n\ndeclare const window: Window;\n\nexport default class QRCodeStyling {\n  _options: RequiredOptions;\n  _window: Window;\n  _container?: HTMLElement;\n  _domCanvas?: HTMLCanvasElement;\n  _nodeCanvas?: NodeCanvas;\n  _svg?: SVGElement;\n  _qr?: QRCode;\n  _extension?: ExtensionFunction;\n  _canvasDrawingPromise?: Promise<void>;\n  _svgDrawingPromise?: Promise<void>;\n\n  constructor(options?: Partial<Options>) {\n    if (options?.jsdom) {\n      this._window = new options.jsdom(\"\", { resources: \"usable\" }).window;\n    } else {\n      this._window = window;\n    }\n    this._options = options ? sanitizeOptions(mergeDeep(defaultOptions, options) as RequiredOptions) : defaultOptions;\n    this.update();\n  }\n\n  static _clearContainer(container?: HTMLElement): void {\n    if (container) {\n      container.innerHTML = \"\";\n    }\n  }\n\n  _setupSvg(): void {\n    if (!this._qr) {\n      return;\n    }\n    const qrSVG = new QRSVG(this._options, this._window);\n\n    this._svg = qrSVG.getElement();\n    this._svgDrawingPromise = qrSVG.drawQR(this._qr).then(() => {\n      if (!this._svg) return;\n      this._extension?.(qrSVG.getElement(), this._options);\n    });\n  }\n\n  _setupCanvas(): void {\n    if (!this._qr) {\n      return;\n    }\n\n    if (this._options.nodeCanvas?.createCanvas) {\n      this._nodeCanvas = this._options.nodeCanvas.createCanvas(this._options.width, this._options.height);\n      this._nodeCanvas.width = this._options.width;\n      this._nodeCanvas.height = this._options.height;\n    } else {\n      this._domCanvas = document.createElement(\"canvas\");\n      this._domCanvas.width = this._options.width;\n      this._domCanvas.height = this._options.height;\n    }\n\n    this._setupSvg();\n    this._canvasDrawingPromise = this._svgDrawingPromise?.then(() => {\n      if (!this._svg) return;\n\n      const svg = this._svg;\n      const xml = new this._window.XMLSerializer().serializeToString(svg);\n      const svg64 = btoa(xml);\n      const image64 = `data:${getMimeType('svg')};base64,${svg64}`;\n\n      if (this._options.nodeCanvas?.loadImage) {\n        return this._options.nodeCanvas.loadImage(image64).then((image: Image) => {\n          // fix blurry svg\n          image.width = this._options.width;\n          image.height = this._options.height;\n          this._nodeCanvas?.getContext(\"2d\")?.drawImage(image, 0, 0);\n        });\n      } else {\n        const image = new this._window.Image();\n\n        return new Promise((resolve) => {\n          image.onload = (): void => {\n            this._domCanvas?.getContext(\"2d\")?.drawImage(image, 0, 0);\n            resolve();\n          };\n\n          image.src = image64;\n        });\n      }\n    });\n  }\n\n  async _getElement(extension: FileExtension = \"png\") {\n    if (!this._qr) throw \"QR code is empty\";\n\n    if (extension.toLowerCase() === \"svg\") {\n      if (!this._svg || !this._svgDrawingPromise) {\n        this._setupSvg();\n      }\n      await this._svgDrawingPromise;\n      return this._svg;\n    } else {\n      if (!(this._domCanvas || this._nodeCanvas) || !this._canvasDrawingPromise) {\n        this._setupCanvas();\n      }\n      await this._canvasDrawingPromise;\n      return this._domCanvas || this._nodeCanvas;\n    }\n  }\n\n  update(options?: Partial<Options>): void {\n    QRCodeStyling._clearContainer(this._container);\n    this._options = options ? sanitizeOptions(mergeDeep(this._options, options) as RequiredOptions) : this._options;\n\n    if (!this._options.data) {\n      return;\n    }\n\n    this._qr = qrcode(this._options.qrOptions.typeNumber, this._options.qrOptions.errorCorrectionLevel);\n    this._qr.addData(this._options.data, this._options.qrOptions.mode || getMode(this._options.data));\n    this._qr.make();\n\n    if (this._options.type === drawTypes.canvas) {\n      this._setupCanvas();\n    } else {\n      this._setupSvg();\n    }\n\n    this.append(this._container);\n  }\n\n  append(container?: HTMLElement): void {\n    if (!container) {\n      return;\n    }\n\n    if (typeof container.appendChild !== \"function\") {\n      throw \"Container should be a single DOM node\";\n    }\n\n    if (this._options.type === drawTypes.canvas) {\n      if (this._domCanvas) {\n        container.appendChild(this._domCanvas);\n      }\n    } else {\n      if (this._svg) {\n        container.appendChild(this._svg);\n      }\n    }\n\n    this._container = container;\n  }\n\n  applyExtension(extension: ExtensionFunction): void {\n    if (!extension) {\n      throw \"Extension function should be defined.\";\n    }\n\n    this._extension = extension;\n    this.update();\n  }\n\n  deleteExtension(): void {\n    this._extension = undefined;\n    this.update();\n  }\n\n  async getRawData(extension: FileExtension = \"png\"): Promise<Blob | Buffer | null> {\n    if (!this._qr) throw \"QR code is empty\";\n    const element = await this._getElement(extension);\n    const mimeType = getMimeType(extension);\n\n    if (!element) {\n      return null;\n    }\n\n    if (extension.toLowerCase() === \"svg\") {\n      const serializer = new this._window.XMLSerializer();\n      const source = serializer.serializeToString(element as SVGElement);\n      const svgString = `<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n${source}`;\n      if (typeof Blob !== \"undefined\" && !this._options.jsdom) {\n        return new Blob([svgString], { type: mimeType });\n      } else {\n        return Buffer.from(svgString);\n      }\n    } else {\n      return new Promise((resolve) => {\n        const canvas = element;\n        if ('toBuffer' in canvas) {\n          // Different call is needed to prevent error TS2769: No overload matches this call.\n          if (mimeType === \"image/png\") {\n            resolve(canvas.toBuffer(mimeType));\n          } else if (mimeType === \"image/jpeg\") {\n            resolve(canvas.toBuffer(mimeType));\n          } else if (mimeType === \"application/pdf\") {\n            resolve(canvas.toBuffer(mimeType));\n          } else {\n            throw Error(\"Unsupported extension\");\n          }\n        } else if ('toBlob' in canvas) {\n          (canvas).toBlob(resolve, mimeType, 1);\n        }\n      });\n    }\n  }\n\n  async download(downloadOptions?: Partial<DownloadOptions> | string): Promise<void> {\n    if (!this._qr) throw \"QR code is empty\";\n    if (typeof Blob === \"undefined\") throw \"Cannot download in Node.js, call getRawData instead.\";\n    let extension = \"png\" as FileExtension;\n    let name = \"qr\";\n\n    //TODO remove deprecated code in the v2\n    if (typeof downloadOptions === \"string\") {\n      extension = downloadOptions as FileExtension;\n      console.warn(\n        \"Extension is deprecated as argument for 'download' method, please pass object { name: '...', extension: '...' } as argument\"\n      );\n    } else if (typeof downloadOptions === \"object\" && downloadOptions !== null) {\n      if (downloadOptions.name) {\n        name = downloadOptions.name;\n      }\n      if (downloadOptions.extension) {\n        extension = downloadOptions.extension;\n      }\n    }\n\n    const element = await this._getElement(extension);\n\n    if (!element) {\n      return;\n    }\n\n    if (extension.toLowerCase() === \"svg\") {\n      const serializer = new XMLSerializer();\n      let source = serializer.serializeToString(element as SVGElement);\n\n      source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\n      const url = `data:${getMimeType(extension)};charset=utf-8,${encodeURIComponent(source)}`;\n      downloadURI(url, `${name}.svg`);\n    } else {\n      const url = (element as HTMLCanvasElement).toDataURL(getMimeType(extension));\n      downloadURI(url, `${name}.${extension}`);\n    }\n  }\n}\n","import modes from \"../constants/modes\";\nimport { Mode } from \"../types\";\n\nexport default function getMode(data: string): Mode {\n  switch (true) {\n    case /^[0-9]*$/.test(data):\n      return modes.numeric;\n    case /^[0-9A-Z $%*+\\-./:]*$/.test(data):\n      return modes.alphanumeric;\n    default:\n      return modes.byte;\n  }\n}\n","import QRCodeStyling from \"./core/QRCodeStyling\";\nimport dotTypes from \"./constants/dotTypes\";\nimport cornerDotTypes from \"./constants/cornerDotTypes\";\nimport cornerSquareTypes from \"./constants/cornerSquareTypes\";\nimport errorCorrectionLevels from \"./constants/errorCorrectionLevels\";\nimport errorCorrectionPercents from \"./constants/errorCorrectionPercents\";\nimport modes from \"./constants/modes\";\nimport qrTypes from \"./constants/qrTypes\";\nimport drawTypes from \"./constants/drawTypes\";\nimport shapeTypes from \"./constants/shapeTypes\";\nimport gradientTypes from \"./constants/gradientTypes\";\n\nexport * from \"./types\";\n\nexport {\n  dotTypes,\n  cornerDotTypes,\n  cornerSquareTypes,\n  errorCorrectionLevels,\n  errorCorrectionPercents,\n  modes,\n  qrTypes,\n  drawTypes,\n  shapeTypes,\n  gradientTypes\n};\n\nexport default QRCodeStyling;\n"],"names":["root","factory","exports","module","define","amd","this","qrcode","typeNumber","errorCorrectionLevel","_typeNumber","_errorCorrectionLevel","QRErrorCorrectionLevel","_modules","_moduleCount","_dataCache","_dataList","_this","makeImpl","test","maskPattern","moduleCount","modules","Array","row","col","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","c","pos","QRUtil","getPatternPosition","i","length","j","bits","getBCHTypeNumber","mod","Math","floor","data","getBCHTypeInfo","inc","bitIndex","byteIndex","maskFunc","getMaskFunction","dark","dataList","rsBlocks","QRRSBlock","getRSBlocks","buffer","qrBitBuffer","put","getMode","getLength","getLengthInBits","write","totalDataCount","dataCount","putBit","offset","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","max","getBuffer","rsPoly","getErrorCorrectPolynomial","modPoly","qrPolynomial","modIndex","getAt","totalCodeCount","index","createBytes","addData","mode","newData","qrNumber","qrAlphaNum","qr8BitByte","qrKanji","push","isDark","getModuleCount","make","minLostPoint","pattern","lostPoint","getLostPoint","getBestMaskPattern","createTableTag","cellSize","margin","qrHtml","createSvgTag","alt","title","opts","arguments","text","id","mr","rect","size","qrSvg","scalable","escapeXml","join","trim","createDataURL","min","x","y","createImgTag","img","s","escaped","charAt","createASCII","r1","r2","p","blocks","blocksLastLineNoMargin","ascii","substring","_createHalfASCII","white","black","line","renderTo2dContext","context","fillStyle","fillRect","stringToBytes","stringToBytesFuncs","bytes","charCodeAt","createStringToBytes","unicodeData","numChars","unicodeMap","bin","base64DecodeInputStream","read","b","count","b0","b1","v","String","fromCharCode","unknownChar","PATTERN_POSITION_TABLE","G15","G18","getBCHDigit","L","M","Q","H","digit","d","errorCorrectLength","a","multiply","QRMath","gexp","type","sameCount","darkCount","abs","EXP_TABLE","LOG_TABLE","n","num","shift","_num","e","glog","ratio","RS_BLOCK_TABLE","qrRSBlock","rsBlock","getRsBlockTable","list","_buffer","_length","bufIndex","bit","_data","strToNum","chatToNum","getCode","_bytes","byteArrayOutputStream","writeByte","off","len","str","_str","_pos","_buflen","match","decode","width","height","getPixel","gif","_width","_height","pixel","out","writeString","writeShort","raster","getLZWRaster","writeBytes","lzwMinCodeSize","clearCode","endCode","bitLength","table","lzwTable","add","_out","_bitLength","_bitBuffer","byteOut","bitOut","dataIndex","contains","indexOf","flush","toByteArray","_map","_size","key","gifImage","setPixel","base64","_base64","writeEncoded","encode","padlen","toString","base64EncodeOutputStream","utf8","charcode","toUTF8Array","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","__esModule","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","isObject","isArray","mergeDeep","target","sources","source","keys","forEach","targetValue","sourceValue","assign","downloadURI","uri","name","link","document","createElement","download","href","body","appendChild","click","removeChild","QRDot","constructor","svg","window","_svg","_type","_window","draw","getNeighbor","drawFunction","_drawDot","_drawClassy","_drawClassyRounded","_drawRounded","_drawExtraRounded","_drawSquare","_rotateFigure","rotation","cx","cy","_element","setAttribute","PI","_basicDot","args","createElementNS","_basicSquare","_basicSideRounded","_basicCornerRounded","_basicCornerExtraRounded","_basicCornersRounded","leftNeighbor","rightNeighbor","topNeighbor","bottomNeighbor","neighborsCount","dot","square","extraRounded","availableCornerSquareTypes","values","cornerSquareTypes","QRCornerSquare","dotSize","_basicExtraRounded","availableCornerDotTypes","cornerDotTypes","QRCornerDot","squareMask","dotMask","QRSVG","options","_roundSize","value","_options","dotsOptions","roundSize","_defs","_imageUri","image","_instanceId","instanceCount","getElement","drawQR","qr","minSize","realQRSize","shape","shapeTypes","sqrt","drawImageSize","hideXDots","hideYDots","_qr","loadImage","_image","imageOptions","qrOptions","coverLevel","imageSize","errorCorrectionPercents","maxHiddenDots","originalHeight","originalWidth","maxHiddenAxisDots","hideDots","k","ceil","round","calculateImageSize","drawBackground","drawDots","hideBackgroundDots","drawCorners","drawImage","element","gradientOptions","backgroundOptions","gradient","color","_backgroundClipPath","_createColor","additionalRotation","filter","xBeginning","yBeginning","_dotsClipPath","xOffset","yOffset","additionalDots","fakeCount","xFakeBeginning","yFakeBeginning","fakeMatrix","center","cornersSquareSize","cornersDotSize","column","cornersSquareClipPath","cornersDotClipPath","cornersSquareOptions","_cornersSquareClipPath","_cornersDotClipPath","includes","cornersSquare","cornersDotOptions","cornersDot","Promise","resolve","reject","nodeCanvas","then","saveAsBlob","canvas","createCanvas","getContext","toDataURL","catch","Image","crossOrigin","onload","async","url","xhr","XMLHttpRequest","reader","FileReader","onloadend","result","readAsDataURL","response","open","responseType","send","src","dx","dy","dw","dh","positiveRotation","x0","y0","x1","y1","tan","colorStops","stop","qrTypes","drawTypes","sanitizeGradient","newGradient","Number","map","colorStop","sanitizeOptions","newOptions","Boolean","getMimeType","extension","Error","toLowerCase","QRCodeStyling","jsdom","resources","update","_clearContainer","container","innerHTML","_setupSvg","qrSVG","_svgDrawingPromise","_extension","_setupCanvas","_nodeCanvas","_domCanvas","_canvasDrawingPromise","xml","XMLSerializer","serializeToString","svg64","btoa","image64","_getElement","_container","append","applyExtension","deleteExtension","getRawData","mimeType","svgString","Blob","Buffer","from","toBuffer","toBlob","downloadOptions","console","warn","encodeURIComponent"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]}},
    {"offset": {"line": 3101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}