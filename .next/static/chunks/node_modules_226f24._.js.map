{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/sturdy-websocket/src/index.ts"],"sourcesContent":["export interface Options {\n    allClearResetTime?: number;\n    connectTimeout?: number;\n    debug?: boolean;\n    minReconnectDelay?: number;\n    maxReconnectDelay?: number;\n    maxReconnectAttempts?: number;\n    reconnectBackoffFactor?: number;\n    wsConstructor?: new (url: string, protocols?: string | string[]) => any;\n    shouldReconnect?(closeEvent: CloseEvent): boolean | Promise<boolean>;\n}\n\ninterface SturdyWebSocketEventMap extends WebSocketEventMap {\n    down: CloseEvent;\n    reopen: Event;\n}\n\ntype WebSocketListener<K extends keyof SturdyWebSocketEventMap> = (\n    this: WebSocket,\n    event: SturdyWebSocketEventMap[K],\n) => any;\n\ntype WebSocketListeners = {\n    [K in keyof SturdyWebSocketEventMap]?: Array<WebSocketListener<K>>;\n} & {\n    [key: string]: EventListenerOrEventListenerObject[];\n};\n\nconst SHOULD_RECONNECT_FALSE_MESSAGE =\n    \"Provided shouldReconnect() returned false. Closing permanently.\";\nconst SHOULD_RECONNECT_PROMISE_FALSE_MESSAGE =\n    \"Provided shouldReconnect() resolved to false. Closing permanently.\";\n\nexport default class SturdyWebSocket implements WebSocket {\n    public static readonly DEFAULT_OPTIONS: Required<Options> = {\n        allClearResetTime: 5000,\n        connectTimeout: 5000,\n        debug: false,\n        minReconnectDelay: 1000,\n        maxReconnectDelay: 30000,\n        maxReconnectAttempts: Number.POSITIVE_INFINITY,\n        reconnectBackoffFactor: 1.5,\n        shouldReconnect: () => true,\n        wsConstructor: undefined!,\n    };\n\n    public static readonly CONNECTING = 0;\n    public static readonly OPEN = 1;\n    public static readonly CLOSING = 2;\n    public static readonly CLOSED = 3;\n\n    public onclose: ((event: CloseEvent) => void) | null = null;\n    public onerror: ((event: Event) => void) | null = null;\n    public onmessage: ((event: MessageEvent) => void) | null = null;\n    public onopen: ((event: Event) => void) | null = null;\n    public ondown: ((event: CloseEvent | undefined) => void) | null = null;\n    public onreopen: ((event: Event) => void) | null = null;\n    public readonly CONNECTING = SturdyWebSocket.CONNECTING;\n    public readonly OPEN = SturdyWebSocket.OPEN;\n    public readonly CLOSING = SturdyWebSocket.CLOSING;\n    public readonly CLOSED = SturdyWebSocket.CLOSED;\n\n    private readonly protocols?: string | string[];\n    private readonly options: Required<Options>;\n    private ws?: WebSocket;\n    private hasBeenOpened = false;\n    private isClosed = false;\n    private messageBuffer: any[] = [];\n    private nextRetryTime: number = 0;\n    private reconnectCount = 0;\n    private allClearTimeoutId?: any;\n    private connectTimeoutId?: any;\n    private binaryTypeInternal?: BinaryType;\n    private lastKnownExtensions = \"\";\n    private lastKnownProtocol = \"\";\n    private readonly listeners: WebSocketListeners = {};\n\n    constructor(url: string, options?: Options);\n    constructor(\n        url: string,\n        protocols: string | string[] | undefined,\n        options?: Options,\n    );\n    constructor(\n        public readonly url: string,\n        protocolsOrOptions?: string | string[] | Options,\n        options: Options = {},\n    ) {\n        if (\n            protocolsOrOptions == null ||\n            typeof protocolsOrOptions === \"string\" ||\n            Array.isArray(protocolsOrOptions)\n        ) {\n            this.protocols = protocolsOrOptions;\n        } else {\n            options = protocolsOrOptions;\n        }\n        this.options = applyDefaultOptions(options);\n        if (!this.options.wsConstructor) {\n            if (typeof WebSocket !== \"undefined\") {\n                this.options.wsConstructor = WebSocket;\n            } else {\n                throw new Error(\n                    \"WebSocket not present in global scope and no \" +\n                        \"wsConstructor option was provided.\",\n                );\n            }\n        }\n        this.openNewWebSocket();\n    }\n\n    public get binaryType(): BinaryType {\n        return this.binaryTypeInternal || \"blob\";\n    }\n\n    public set binaryType(binaryType: BinaryType) {\n        this.binaryTypeInternal = binaryType;\n        if (this.ws) {\n            this.ws.binaryType = binaryType;\n        }\n    }\n\n    public get bufferedAmount(): number {\n        let sum = this.ws ? this.ws.bufferedAmount : 0;\n        let hasUnknownAmount = false;\n        this.messageBuffer.forEach(data => {\n            const byteLength = getDataByteLength(data);\n            if (byteLength != null) {\n                sum += byteLength;\n            } else {\n                hasUnknownAmount = true;\n            }\n        });\n        if (hasUnknownAmount) {\n            this.debugLog(\n                \"Some buffered data had unknown length. bufferedAmount()\" +\n                    \" return value may be below the correct amount.\",\n            );\n        }\n        return sum;\n    }\n\n    public get extensions(): string {\n        return this.ws ? this.ws.extensions : this.lastKnownExtensions;\n    }\n\n    public get protocol(): string {\n        return this.ws ? this.ws.protocol : this.lastKnownProtocol;\n    }\n\n    public get readyState(): number {\n        return this.isClosed ? SturdyWebSocket.CLOSED : SturdyWebSocket.OPEN;\n    }\n\n    public close(code?: number, reason?: string): void {\n        this.disposeSocket(code, reason);\n        this.shutdown();\n        this.debugLog(\"WebSocket permanently closed by client.\");\n    }\n\n    public send(data: any): void {\n        if (this.isClosed) {\n            throw new Error(\"WebSocket is already in CLOSING or CLOSED state.\");\n        } else if (this.ws && this.ws.readyState === this.OPEN) {\n            this.ws.send(data);\n        } else {\n            this.messageBuffer.push(data);\n        }\n    }\n\n    public reconnect(): void {\n        if (this.isClosed) {\n            throw new Error(\n                \"Cannot call reconnect() on socket which is permanently closed.\",\n            );\n        }\n        this.disposeSocket(1000, \"Client requested reconnect.\");\n        this.handleClose(undefined);\n    }\n\n    public addEventListener<K extends keyof SturdyWebSocketEventMap>(\n        type: K,\n        listener: (this: WebSocket, event: SturdyWebSocketEventMap[K]) => void,\n    ): void;\n    public addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n    ): void;\n    public addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n    ): void {\n        if (!this.listeners[type]) {\n            this.listeners[type] = [];\n        }\n        this.listeners[type].push(listener);\n    }\n\n    public dispatchEvent(event: Event): boolean {\n        return this.dispatchEventOfType(event.type, event);\n    }\n\n    public removeEventListener<K extends keyof SturdyWebSocketEventMap>(\n        type: K,\n        listener: (this: WebSocket, event: SturdyWebSocketEventMap[K]) => void,\n    ): void;\n    public removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n    ): void;\n    public removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n    ): void {\n        if (this.listeners[type]) {\n            this.listeners[type] = this.listeners[type].filter(\n                l => l !== listener,\n            );\n        }\n    }\n\n    private openNewWebSocket(): void {\n        if (this.isClosed) {\n            return;\n        }\n        const { connectTimeout, wsConstructor } = this.options;\n        this.debugLog(`Opening new WebSocket to ${this.url}.`);\n        const ws: WebSocket = new wsConstructor(this.url, this.protocols);\n        ws.onclose = event => this.handleClose(event);\n        ws.onerror = event => this.handleError(event);\n        ws.onmessage = event => this.handleMessage(event);\n        ws.onopen = event => this.handleOpen(event);\n        this.connectTimeoutId = setTimeout(() => {\n            // If this is running, we still haven't opened the websocket.\n            // Kill it so we can try again.\n            this.clearConnectTimeout();\n            this.disposeSocket();\n            this.handleClose(undefined);\n        }, connectTimeout);\n        this.ws = ws;\n    }\n\n    private handleOpen(event: Event): void {\n        if (!this.ws || this.isClosed) {\n            return;\n        }\n        const { allClearResetTime } = this.options;\n        this.debugLog(\"WebSocket opened.\");\n        if (this.binaryTypeInternal != null) {\n            this.ws.binaryType = this.binaryTypeInternal;\n        } else {\n            this.binaryTypeInternal = this.ws.binaryType;\n        }\n        this.clearConnectTimeout();\n        if (this.hasBeenOpened) {\n            this.dispatchEventOfType(\"reopen\", event);\n        } else {\n            this.dispatchEventOfType(\"open\", event);\n            this.hasBeenOpened = true;\n        }\n        this.messageBuffer.forEach(message => this.send(message));\n        this.messageBuffer = [];\n        this.allClearTimeoutId = setTimeout(() => {\n            this.clearAllClearTimeout();\n            this.nextRetryTime = 0;\n            this.reconnectCount = 0;\n            const openTime = (allClearResetTime / 1000) | 0;\n            this.debugLog(\n                `WebSocket remained open for ${openTime} seconds. Resetting` +\n                    \" retry time and count.\",\n            );\n        }, allClearResetTime);\n    }\n\n    private handleMessage(event: MessageEvent): void {\n        if (this.isClosed) {\n            return;\n        }\n        this.dispatchEventOfType(\"message\", event);\n    }\n\n    private handleClose(event: CloseEvent | undefined): void {\n        if (this.isClosed) {\n            return;\n        }\n        const { maxReconnectAttempts, shouldReconnect } = this.options;\n        this.clearConnectTimeout();\n        this.clearAllClearTimeout();\n        if (this.ws) {\n            this.lastKnownExtensions = this.ws.extensions;\n            this.lastKnownProtocol = this.ws.protocol;\n            this.disposeSocket();\n        }\n        this.dispatchEventOfType(\"down\", event);\n        if (this.reconnectCount >= maxReconnectAttempts) {\n            this.stopReconnecting(\n                event,\n                this.getTooManyFailedReconnectsMessage(),\n            );\n            return;\n        }\n        const willReconnect = !event || shouldReconnect(event);\n        if (typeof willReconnect === \"boolean\") {\n            this.handleWillReconnect(\n                willReconnect,\n                event,\n                SHOULD_RECONNECT_FALSE_MESSAGE,\n            );\n        } else {\n            willReconnect.then(willReconnectResolved => {\n                if (this.isClosed) {\n                    return;\n                }\n                this.handleWillReconnect(\n                    willReconnectResolved,\n                    event,\n                    SHOULD_RECONNECT_PROMISE_FALSE_MESSAGE,\n                );\n            });\n        }\n    }\n\n    private handleError(event: Event): void {\n        this.dispatchEventOfType(\"error\", event);\n        this.debugLog(\"WebSocket encountered an error.\");\n    }\n\n    private handleWillReconnect(\n        willReconnect: boolean,\n        event: CloseEvent | undefined,\n        denialReason: string,\n    ): void {\n        if (willReconnect) {\n            this.reestablishConnection();\n        } else {\n            this.stopReconnecting(event, denialReason);\n        }\n    }\n\n    private reestablishConnection(): void {\n        const {\n            minReconnectDelay,\n            maxReconnectDelay,\n            reconnectBackoffFactor,\n        } = this.options;\n        this.reconnectCount++;\n        const retryTime = this.nextRetryTime;\n        this.nextRetryTime = Math.max(\n            minReconnectDelay,\n            Math.min(\n                this.nextRetryTime * reconnectBackoffFactor,\n                maxReconnectDelay,\n            ),\n        );\n        setTimeout(() => this.openNewWebSocket(), retryTime);\n        const retryTimeSeconds = (retryTime / 1000) | 0;\n        this.debugLog(\n            `WebSocket was closed. Re-opening in ${retryTimeSeconds} seconds.`,\n        );\n    }\n\n    private stopReconnecting(\n        event: CloseEvent | undefined,\n        debugReason: string,\n    ): void {\n        this.debugLog(debugReason);\n        this.shutdown();\n        if (event) {\n            this.dispatchEventOfType(\"close\", event);\n        }\n    }\n\n    private shutdown(): void {\n        this.isClosed = true;\n        this.clearAllTimeouts();\n        this.messageBuffer = [];\n        this.disposeSocket();\n    }\n\n    private disposeSocket(closeCode?: number, reason?: string): void {\n        if (!this.ws) {\n            return;\n        }\n        // Use noop handlers instead of null because some WebSocket\n        // implementations, such as the one from isomorphic-ws, raise a stink on\n        // unhandled events.\n        this.ws.onerror = noop;\n        this.ws.onclose = noop;\n        this.ws.onmessage = noop;\n        this.ws.onopen = noop;\n        this.ws.close(closeCode, reason);\n        this.ws = undefined;\n    }\n\n    private clearAllTimeouts(): void {\n        this.clearConnectTimeout();\n        this.clearAllClearTimeout();\n    }\n\n    private clearConnectTimeout(): void {\n        if (this.connectTimeoutId != null) {\n            clearTimeout(this.connectTimeoutId);\n            this.connectTimeoutId = undefined;\n        }\n    }\n\n    private clearAllClearTimeout(): void {\n        if (this.allClearTimeoutId != null) {\n            clearTimeout(this.allClearTimeoutId);\n            this.allClearTimeoutId = undefined;\n        }\n    }\n\n    private dispatchEventOfType(type: string, event: any): boolean {\n        switch (type) {\n            case \"close\":\n                if (this.onclose) {\n                    this.onclose(event);\n                }\n                break;\n            case \"error\":\n                if (this.onerror) {\n                    this.onerror(event);\n                }\n                break;\n            case \"message\":\n                if (this.onmessage) {\n                    this.onmessage(event);\n                }\n                break;\n            case \"open\":\n                if (this.onopen) {\n                    this.onopen(event);\n                }\n                break;\n            case \"down\":\n                if (this.ondown) {\n                    this.ondown(event);\n                }\n                break;\n            case \"reopen\":\n                if (this.onreopen) {\n                    this.onreopen(event);\n                }\n                break;\n        }\n        if (type in this.listeners) {\n            this.listeners[type]\n                .slice()\n                .forEach(listener => this.callListener(listener, event));\n        }\n        return !event || !(event as Event).defaultPrevented;\n    }\n\n    private callListener(\n        listener: EventListenerOrEventListenerObject,\n        event: Event,\n    ): void {\n        if (typeof listener === \"function\") {\n            listener.call(this, event);\n        } else {\n            listener.handleEvent.call(this, event);\n        }\n    }\n\n    private debugLog(message: string): void {\n        if (this.options.debug) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        }\n    }\n\n    private getTooManyFailedReconnectsMessage(): string {\n        const { maxReconnectAttempts } = this.options;\n        return `Failed to reconnect after ${maxReconnectAttempts} ${pluralize(\n            \"attempt\",\n            maxReconnectAttempts,\n        )}. Closing permanently.`;\n    }\n}\n\nfunction applyDefaultOptions(options: Options): Required<Options> {\n    const result: any = {};\n    Object.keys(SturdyWebSocket.DEFAULT_OPTIONS).forEach(key => {\n        const value = (options as any)[key];\n        result[key] =\n            value === undefined\n                ? (SturdyWebSocket.DEFAULT_OPTIONS as any)[key]\n                : value;\n    });\n    return result;\n}\n\nfunction getDataByteLength(data: any): number | undefined {\n    if (typeof data === \"string\") {\n        // UTF-16 strings use two bytes per character.\n        return 2 * data.length;\n    } else if (data instanceof ArrayBuffer) {\n        return data.byteLength;\n    } else if (data instanceof Blob) {\n        return data.size;\n    } else {\n        return undefined;\n    }\n}\n\nfunction pluralize(s: string, n: number): string {\n    return n === 1 ? s : `${s}s`;\n}\n\nfunction noop(): void {\n    // Nothing.\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 408, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 414, "column": 0}, "map": {"version":3,"file":"_version.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/web/src.ts/_version.ts"],"sourcesContent":["export const version = \"web/5.7.1\";\n"],"names":[],"mappings":";;;AAAO,MAAM,OAAO,GAAG,WAAW,CAAC","ignoreList":[0]}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 424, "column": 0}, "map": {"version":3,"file":"base64.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/base64/src.ts/browser-base64.ts"],"sourcesContent":["\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function decode(textData: string): Uint8Array {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\n\nexport function encode(data: BytesLike): string {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n\n\n"],"names":[],"mappings":";;;;AAEA,OAAO,EAAE,QAAQ,EAAa,MAAM,sBAAsB,CAAC;AAF3D,YAAY,CAAC;;AAIP,SAAU,MAAM,CAAC,QAAgB;IACnC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1B,MAAM,IAAI,GAAG,EAAE,CAAC;IAChB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;QACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;KACrC;IACD,8KAAO,WAAA,AAAQ,EAAC,IAAI,CAAC,CAAC;AAC1B,CAAC;AAEK,SAAU,MAAM,CAAC,IAAe;IAClC,IAAI,0KAAG,WAAA,AAAQ,EAAC,IAAI,CAAC,CAAC;IACtB,IAAI,QAAQ,GAAG,EAAE,CAAC;IAClB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;QAClC,QAAQ,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KAC5C;IACD,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1B,CAAC","ignoreList":[0]}},
    {"offset": {"line": 447, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 453, "column": 0}, "map": {"version":3,"file":"geturl.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/web/src.ts/browser-geturl.ts"],"sourcesContent":["\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport type { GetUrlResponse, Options } from \"./types\";\n\nexport { GetUrlResponse, Options };\n\nexport async function getUrl(href: string, options?: Options): Promise<GetUrlResponse> {\n    if (options == null) { options = { }; }\n\n    const request: RequestInit = {\n        method: (options.method || \"GET\"),\n        headers: (options.headers || { }),\n        body: (options.body || undefined),\n    };\n\n    if (options.skipFetchSetup !== true) {\n        request.mode = <RequestMode>\"cors\";              // no-cors, cors, *same-origin\n        request.cache = <RequestCache>\"no-cache\";        // *default, no-cache, reload, force-cache, only-if-cached\n        request.credentials = <RequestCredentials>\"same-origin\";  // include, *same-origin, omit\n        request.redirect = <RequestRedirect>\"follow\";    // manual, *follow, error\n        request.referrer = \"client\";                     // no-referrer, *client\n    };\n\n    if (options.fetchOptions != null) {\n        const opts = options.fetchOptions;\n        if (opts.mode) { request.mode = <RequestMode>(opts.mode); }\n        if (opts.cache) { request.cache = <RequestCache>(opts.cache); }\n        if (opts.credentials) { request.credentials = <RequestCredentials>(opts.credentials); }\n        if (opts.redirect) { request.redirect = <RequestRedirect>(opts.redirect); }\n        if (opts.referrer) { request.referrer = opts.referrer; }\n    }\n\n    const response = await fetch(href, request);\n    const body = await response.arrayBuffer();\n\n    const headers: { [ name: string ]: string } = { };\n    if (response.headers.forEach) {\n        response.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n    } else {\n        (<() => Array<string>>((<any>(response.headers)).keys))().forEach((key) => {\n            headers[key.toLowerCase()] = response.headers.get(key);\n        });\n    }\n\n    return {\n        headers: headers,\n        statusCode: response.status,\n        statusMessage: response.statusText,\n        body: arrayify(new Uint8Array(body)),\n    }\n}\n"],"names":[],"mappings":";;;AAEA,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAFhD,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQP,SAAgB,MAAM,CAAC,IAAY,EAAE,OAAiB;;QACxD,IAAI,OAAO,IAAI,IAAI,EAAE;YAAE,OAAO,GAAG,CAAA,CAAG,CAAC;SAAE;QAEvC,MAAM,OAAO,GAAgB;YACzB,MAAM,EAAE,AAAC,OAAO,CAAC,MAAM,IAAI,KAAK,CAAC;YACjC,OAAO,EAAE,AAAC,OAAO,CAAC,OAAO,IAAI,CAAA,CAAG,CAAC;YACjC,IAAI,EAAE,AAAC,OAAO,CAAC,IAAI,IAAI,SAAS,CAAC;SACpC,CAAC;QAEF,IAAI,OAAO,CAAC,cAAc,KAAK,IAAI,EAAE;YACjC,OAAO,CAAC,IAAI,GAAgB,MAAM,CAAC,CAAc,8BAA8B;YAC/E,OAAO,CAAC,KAAK,GAAiB,UAAU,CAAC,CAAQ,0DAA0D;YAC3G,OAAO,CAAC,WAAW,GAAuB,aAAa,CAAC,CAAE,8BAA8B;YACxF,OAAO,CAAC,QAAQ,GAAoB,QAAQ,CAAC,CAAI,yBAAyB;YAC1E,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAqB,uBAAuB;SAC3E;;QAED,IAAI,OAAO,CAAC,YAAY,IAAI,IAAI,EAAE;YAC9B,MAAM,IAAI,GAAG,OAAO,CAAC,YAAY,CAAC;YAClC,IAAI,IAAI,CAAC,IAAI,EAAE;gBAAE,OAAO,CAAC,IAAI,GAAgB,AAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAAE;YAC3D,IAAI,IAAI,CAAC,KAAK,EAAE;gBAAE,OAAO,CAAC,KAAK,GAAiB,AAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAAE;YAC/D,IAAI,IAAI,CAAC,WAAW,EAAE;gBAAE,OAAO,CAAC,WAAW,GAAwB,AAAD,IAAK,CAAC,WAAW,CAAC,CAAC;aAAE;YACvF,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAAE,OAAO,CAAC,QAAQ,GAAoB,AAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAAE;YAC3E,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAAE,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;aAAE;SAC3D;QAED,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC5C,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,WAAW,EAAE,CAAC;QAE1C,MAAM,OAAO,GAAiC,CAAA,CAAG,CAAC;QAClD,IAAI,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE;YAC1B,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;gBACpC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,GAAG,KAAK,CAAC;YACvC,CAAC,CAAC,CAAC;SACN,MAAM;YAC2B,QAAQ,CAAC,OAAO,CAAE,AAAC,IAAI,CAAE,EAAE,AAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;gBACtE,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC;SACN;QAED,OAAO;YACH,OAAO,EAAE,OAAO;YAChB,UAAU,EAAE,QAAQ,CAAC,MAAM;YAC3B,aAAa,EAAE,QAAQ,CAAC,UAAU;YAClC,IAAI,yKAAE,WAAA,AAAQ,EAAC,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;SACvC,CAAA;IACL,CAAC;CAAA","ignoreList":[0]}},
    {"offset": {"line": 542, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 548, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/web/src.ts/index.ts"],"sourcesContent":["\"use strict\";\n\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getUrl, GetUrlResponse, Options } from \"./geturl\";\n\nfunction staller(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\nfunction bodyify(value: any, type: string): string {\n    if (value == null) { return null; }\n\n    if (typeof(value) === \"string\") { return value; }\n\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            } catch (error) { };\n        }\n        return hexlify(value);\n    }\n\n    return value;\n}\n\n// Exported Types\nexport type ConnectionInfo = {\n    url: string,\n    headers?: { [key: string]: string | number }\n\n    user?: string,\n    password?: string,\n\n    allowInsecureAuthentication?: boolean,\n    allowGzip?: boolean,\n\n    throttleLimit?: number,\n    throttleSlotInterval?: number;\n    throttleCallback?: (attempt: number, url: string) => Promise<boolean>,\n\n    skipFetchSetup?: boolean;\n    fetchOptions?: Record<string, string>;\n    errorPassThrough?: boolean;\n\n    timeout?: number,\n};\n\nexport interface OnceBlockable {\n    once(eventName: \"block\", handler: () => void): void;\n}\n\nexport interface OncePollable {\n    once(eventName: \"poll\", handler: () => void): void;\n}\n\nexport type PollOptions = {\n    timeout?: number,\n    floor?: number,\n    ceiling?: number,\n    interval?: number,\n    retryLimit?: number,\n    onceBlock?: OnceBlockable\n    oncePoll?: OncePollable\n};\n\nexport type FetchJsonResponse = {\n    statusCode: number;\n    headers: { [ header: string ]: string };\n};\n\n\ntype Header = { key: string, value: string };\n\nfunction unpercent(value: string): Uint8Array {\n    return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n        return String.fromCharCode(parseInt(code, 16));\n    }));\n}\n\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData<T = Uint8Array>(connection: string | ConnectionInfo, body?: Uint8Array, processFunc?: (value: Uint8Array, response: FetchJsonResponse) => T): Promise<T> {\n\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof(connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit: 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0),\n        \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n\n    const throttleCallback = ((typeof(connection) === \"object\") ? connection.throttleCallback: null);\n    const throttleSlotInterval = ((typeof(connection) === \"object\" && typeof(connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval: 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0),\n        \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n\n    const errorPassThrough = ((typeof(connection) === \"object\") ? !!(connection.errorPassThrough): false);\n\n    const headers: { [key: string]: Header } = { };\n\n    let url: string = null;\n\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options: Options = {\n        method: \"GET\",\n    };\n\n    let allow304 = false;\n\n    let timeout = 2 * 60 * 1000;\n\n    if (typeof(connection) === \"string\") {\n        url = connection;\n\n    } else if (typeof(connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n\n        url = connection.url;\n\n        if (typeof(connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n\n        options.allowGzip = !!connection.allowGzip;\n\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\n                    \"basic authentication requires a secure https url\",\n                    Logger.errors.INVALID_ARGUMENT,\n                    { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" }\n                );\n            }\n\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n\n        if (connection.skipFetchSetup != null) {\n            options.skipFetchSetup = !!connection.skipFetchSetup;\n        }\n\n        if (connection.fetchOptions != null) {\n            options.fetchOptions = shallowCopy(connection.fetchOptions);\n        }\n    }\n\n    const reData = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData): null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": (dataMatch[1] || \"text/plain\")},\n                body: (dataMatch[2] ? base64Decode(dataMatch[3]): unpercent(dataMatch[3]))\n            };\n\n            let result: T = <T><unknown>response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(<T><unknown>result);\n\n        } catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n\n    const flatHeaders: { [ key: string ]: string } = { };\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n\n    const runningTimeout = (function() {\n        let timer: NodeJS.Timer = null;\n        const promise: Promise<never> = new Promise(function(resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) { return; }\n                    timer = null;\n\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n\n        const cancel = function() {\n            if (timer == null) { return; }\n            clearTimeout(timer);\n            timer = null;\n        }\n\n        return { promise, cancel };\n    })();\n\n    const runningFetch = (async function() {\n\n        for (let attempt = 0; attempt < attemptLimit; attempt++) {\n            let response: GetUrlResponse = null;\n\n            try {\n                response = await getUrl(url, options);\n\n                if (attempt < attemptLimit) {\n                    if (response.statusCode === 301 || response.statusCode === 302) {\n                        // Redirection; for now we only support absolute locataions\n                        const location = response.headers.location || \"\";\n                        if (options.method === \"GET\" && location.match(/^https:/)) {\n                            url = response.headers.location;\n                            continue;\n                        }\n\n                    } else if (response.statusCode === 429) {\n                        // Exponential back-off throttling\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            let stall = 0;\n\n                            const retryAfter = response.headers[\"retry-after\"];\n                            if (typeof(retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                stall = parseInt(retryAfter) * 1000;\n                            } else {\n                                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            }\n\n                            //console.log(\"Stalling 429\");\n                            await staller(stall);\n                            continue;\n                        }\n                    }\n                }\n\n            } catch (error) {\n                response = (<any>error).response;\n                if (response == null) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        serverError: error,\n                        url: url\n                    });\n                }\n            }\n\n\n            let body = response.body;\n\n            if (allow304 && response.statusCode === 304) {\n                body = null;\n            } else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {\n                runningTimeout.cancel();\n                logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                    status: response.statusCode,\n                    headers: response.headers,\n                    body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                    requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                    requestMethod: options.method,\n                    url: url\n                });\n            }\n\n            if (processFunc) {\n                try {\n                    const result = await processFunc(body, response);\n                    runningTimeout.cancel();\n                    return result;\n\n                } catch (error) {\n                    // Allow the processFunc to trigger a throttle\n                    if (error.throttleRetry && attempt < attemptLimit) {\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            //console.log(\"Stalling callback\");\n                            await staller(timeout);\n                            continue;\n                        }\n                    }\n\n                    runningTimeout.cancel();\n                    logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                        error: error,\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n            }\n\n            runningTimeout.cancel();\n\n            // If we had a processFunc, it either returned a T or threw above.\n            // The \"body\" is now a Uint8Array.\n            return <T>(<unknown>body);\n        }\n\n        return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            url: url\n        });\n    })();\n\n    return Promise.race([ runningTimeout.promise, runningFetch ]);\n}\n\nexport function fetchJson(connection: string | ConnectionInfo, json?: string, processFunc?: (value: any, response: FetchJsonResponse) => any): Promise<any> {\n    let processJsonFunc = (value: Uint8Array, response: FetchJsonResponse) => {\n        let result: any = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            } catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n\n        return result;\n    }\n\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body: Uint8Array = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n\n        // Create a connection with the content-type set for JSON\n        const updated: ConnectionInfo = (typeof(connection) === \"string\") ? ({ url: connection }): shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        } else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n\n    return _fetchData<any>(connection, body, processJsonFunc);\n}\n\nexport function poll<T>(func: () => Promise<T>, options?: PollOptions): Promise<T> {\n    if (!options) { options = {}; }\n    options = shallowCopy(options);\n    if (options.floor == null) { options.floor = 0; }\n    if (options.ceiling == null) { options.ceiling = 10000; }\n    if (options.interval == null) { options.interval = 250; }\n\n    return new Promise(function(resolve, reject) {\n\n        let timer: NodeJS.Timer = null;\n        let done: boolean = false;\n\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = (): boolean => {\n            if (done) { return false; }\n            done = true;\n            if (timer) { clearTimeout(timer); }\n            return true;\n        };\n\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) { reject(new Error(\"timeout\")); }\n            }, options.timeout)\n        }\n\n        const retryLimit = options.retryLimit;\n\n        let attempt = 0;\n        function check() {\n            return func().then(function(result) {\n\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) { resolve(result); }\n\n                } else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n\n                } else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n\n                // Otherwise, exponential back-off (up to 10s) our next request\n                } else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) { reject(new Error(\"retry limit reached\")); }\n                        return;\n                    }\n\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) { timeout = options.floor; }\n                    if (timeout > options.ceiling) { timeout = options.ceiling; }\n\n                    setTimeout(check, timeout);\n                }\n\n                return null;\n            }, function(error) {\n                if (cancel()) { reject(error); }\n            });\n        }\n        check();\n    });\n}\n\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 991, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 997, "column": 0}, "map": {"version":3,"file":"_version.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/networks/src.ts/_version.ts"],"sourcesContent":["export const version = \"networks/5.7.1\";\n"],"names":[],"mappings":";;;AAAO,MAAM,OAAO,GAAG,gBAAgB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1001, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1007, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/networks/src.ts/index.ts"],"sourcesContent":["\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Network, Networkish } from \"./types\";\n\nexport {\n    Network,\n    Networkish\n};\n\ntype DefaultProviderFunc = (providers: any, options?: any) => any;\n\ninterface Renetworkable extends DefaultProviderFunc {\n    renetwork: (network: Network) => DefaultProviderFunc;\n};\n\nfunction isRenetworkable(value: any): value is Renetworkable {\n    return (value && typeof(value.renetwork) === \"function\");\n}\n\nfunction ethDefaultProvider(network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (options == null) { options = { }; }\n        const providerList: Array<any> = [];\n\n        if (providers.InfuraProvider && options.infura !== \"-\") {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            } catch(error) { }\n        }\n\n        if (providers.EtherscanProvider && options.etherscan !== \"-\") {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            } catch(error) { }\n        }\n\n        if (providers.AlchemyProvider && options.alchemy !== \"-\") {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            } catch(error) { }\n        }\n\n        if (providers.PocketProvider && options.pocket !== \"-\") {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [ \"goerli\", \"ropsten\", \"rinkeby\", \"sepolia\" ];\n            try {\n                const provider = new providers.PocketProvider(network, options.pocket);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providers.CloudflareProvider && options.cloudflare !== \"-\") {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            } catch(error) { }\n        }\n\n        if (providers.AnkrProvider && options.ankr !== \"-\") {\n            try {\n                const skip = [ \"ropsten\" ];\n                const provider = new providers.AnkrProvider(network, options.ankr);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providerList.length === 0) { return null; }\n\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            } else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n\n        return providerList[0];\n    };\n\n    func.renetwork = function(network: Network) {\n        return ethDefaultProvider(network);\n    };\n\n    return func;\n}\n\nfunction etcDefaultProvider(url: string, network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n\n        return null;\n    };\n\n    func.renetwork = function(network: Network) {\n        return etcDefaultProvider(url, network);\n    };\n\n    return func;\n}\n\nconst homestead: Network = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\n\nconst ropsten: Network = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\n\nconst classicMordor: Network = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n\n// See: https://chainlist.org\nconst networks: { [name: string]: Network } = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n\n    homestead: homestead,\n    mainnet: homestead,\n\n    morden: { chainId: 2, name: \"morden\" },\n\n    ropsten: ropsten,\n    testnet: ropsten,\n\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n\n    sepolia: {\n        chainId: 11155111,\n        name: \"sepolia\",\n        _defaultProvider: ethDefaultProvider(\"sepolia\")\n    },\n\n\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n\n    xdai: { chainId: 100, name: \"xdai\" },\n\n    matic: {\n        chainId: 137,\n        name: \"matic\",\n        _defaultProvider: ethDefaultProvider(\"matic\")\n    },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n\n    optimism: {\n        chainId: 10,\n        name: \"optimism\",\n        _defaultProvider: ethDefaultProvider(\"optimism\")\n    },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    \"arbitrum-goerli\": { chainId: 421613, name: \"arbitrum-goerli\" },\n\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n}\n\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network: Networkish): Network {\n    // No network (null)\n    if (network == null) { return null; }\n\n    if (typeof(network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n\n    if (typeof(network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) { return null; }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n\n    const standard  = networks[network.name];\n\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof(network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider: DefaultProviderFunc = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        } else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1291, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1296, "column": 0}, "map": {"version":3,"sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/bech32/index.js"],"sourcesContent":["'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1439, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1445, "column": 0}, "map": {"version":3,"file":"decoder.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/hash/src.ts/ens-normalize/decoder.ts"],"sourcesContent":["/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nexport type Numbers = Uint8Array | Array<number>;\nexport type NextFunc = (...args: Array<any>) => number;\n\n// https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js\nfunction flat(array: Array<any>, depth?: number): Array<any> {\n    if (depth == null) { depth = 1; }\n    const result: Array<any> = [];\n\n    const forEach = result.forEach;\n\n    const flatDeep = function (arr: Array<any>, depth: number) {\n        forEach.call(arr, function (val: any) {\n            if (depth > 0 && Array.isArray(val)) {\n                flatDeep(val, depth - 1);\n            } else {\n               result.push(val);\n            }\n        });\n    };\n\n    flatDeep(array, depth);\n    return result;\n}\n\nfunction fromEntries<T extends string | number | symbol = string | number | symbol, U = any>(array: Array<[T, U]>): Record<T, U> {\n    const result: Record<T, U> = <Record<T, U>>{ };\n    for (let i = 0; i < array.length; i++) {\n        const value = array[i];\n        result[value[0]] = value[1];\n    }\n    return result;\n}\n\nexport function decode_arithmetic(bytes: Numbers): Array<number> {\n\tlet pos = 0;\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\n\t\n\t// decode the frequency table\n\tlet symbol_count = u16();\n\tlet total = 1;\n\tlet acc = [0, 1]; // first symbol has frequency 1\n\tfor (let i = 1; i < symbol_count; i++) {\n\t\tacc.push(total += u16());\n\t}\n\n\t// skip the sized-payload that the last 3 symbols index into\n\tlet skip = u16();\n\tlet pos_payload = pos;\n\tpos += skip;\n\n\tlet read_width = 0;\n\tlet read_buffer = 0; \n\tfunction read_bit() {\n\t\tif (read_width == 0) {\n\t\t\t// this will read beyond end of buffer\n\t\t\t// but (undefined|0) => zero pad\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\n\t\t\tread_width = 8;\n\t\t}\n\t\treturn (read_buffer >> --read_width) & 1;\n\t}\n\n\tconst N = 31;\n\tconst FULL = 2**N;\n\tconst HALF = FULL >>> 1;\n\tconst QRTR = HALF >> 1;\n\tconst MASK = FULL - 1;\n\n\t// fill register\n\tlet register = 0;\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\n\n\tlet symbols = [];\n\tlet low = 0;\n\tlet range = FULL; // treat like a float\n\twhile (true) {\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\n\t\tlet start = 0;\n\t\tlet end = symbol_count;\n\t\twhile (end - start > 1) { // binary search\n\t\t\tlet mid = (start + end) >>> 1;\n\t\t\tif (value < acc[mid]) {\n\t\t\t\tend = mid;\n\t\t\t} else {\n\t\t\t\tstart = mid;\n\t\t\t}\n\t\t}\n\t\tif (start == 0) break; // first symbol is end mark\n\t\tsymbols.push(start);\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1\n\t\twhile (((a ^ b) & HALF) == 0) {\n\t\t\tregister = (register << 1) & MASK | read_bit();\n\t\t\ta = (a << 1) & MASK;\n\t\t\tb = (b << 1) & MASK | 1;\n\t\t}\n\t\twhile (a & ~b & QRTR) {\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\n\t\t\ta = (a << 1) ^ HALF;\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\n\t\t}\n\t\tlow = a;\n\t\trange = 1 + b - a;\n\t}\n\tlet offset = symbol_count - 4;\n\treturn symbols.map(x => { // index into payload\n\t\tswitch (x - offset) {\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 1: return offset + bytes[pos_payload++];\n\t\t\tdefault: return x - 1;\n\t\t}\n\t});\n}\t\n\n\n// returns an iterator which returns the next symbol\nexport function read_payload(v: Numbers): NextFunc {\n\tlet pos = 0;\n\treturn () => v[pos++];\n}\nexport function read_compressed_payload(bytes: Numbers): NextFunc {\n\treturn read_payload(decode_arithmetic(bytes));\n}\n\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\nexport function signed(i: number): number { \n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\n}\n\nfunction read_counts(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0; i < n; i++) v[i] = 1 + next();\n\treturn v;\n}\n\nfunction read_ascending(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = -1; i < n; i++) v[i] = x += 1 + next();\n\treturn v;\n}\n\nfunction read_deltas(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\n\treturn v;\n}\n\nexport function read_member_array(next: NextFunc, lookup?: Record<number, number>) {\n    let v = read_ascending(next(), next);\n    let n = next();\n    let vX = read_ascending(n, next);\n    let vN = read_counts(n, next);\n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < vN[i]; j++) {\n            v.push(vX[i] + j);\n        }\n    }\n    return lookup ? v.map(x => lookup[x]) : v;\n}\n\n// returns array of \n// [x, ys] => single replacement rule\n// [x, ys, n, dx, dx] => linear map\nexport function read_mapped_map(next: NextFunc): Record<number, Array<number>> {\n\tlet ret = [];\n\twhile (true) {\n\t\tlet w = next();\n\t\tif (w == 0) break;\n\t\tret.push(read_linear_table(w, next));\n\t}\n\twhile (true) {\n\t\tlet w = next() - 1;\n\t\tif (w < 0) break;\n\t\tret.push(read_replacement_table(w, next));\n\t}\n\treturn fromEntries<number, Array<number>>(flat(ret));\n}\n\nexport function read_zero_terminated_array(next: NextFunc): Array<number> {\n\tlet v = [];\n\twhile (true) {\n\t\tlet i = next();\n\t\tif (i == 0) break;\n\t\tv.push(i);\n\t}\n\treturn v;\n}\n\nfunction read_transposed(n: number, w: number, next: NextFunc): Array<Array<number>> {\n    let m = Array(n).fill(undefined).map(() => []);\n    for (let i = 0; i < w; i++) {\n        read_deltas(n, next).forEach((x, j) => m[j].push(x));\n    }\n    return m;\n}\n\n\nfunction read_linear_table(w: number, next: NextFunc): Array<Array<number | Array<number>>> {\n\tlet dx = 1 + next();\n\tlet dy = next();\n\tlet vN = read_zero_terminated_array(next);\n\tlet m = read_transposed(vN.length, 1+w, next);\n\treturn flat(m.map((v, i) => {\n\t  const x = v[0], ys = v.slice(1);\n\t\t//let [x, ...ys] = v;\n\t\t//return Array(vN[i]).fill().map((_, j) => {\n\t\treturn Array(vN[i]).fill(undefined).map((_, j) => {\n\t\t\tlet j_dy = j * dy;\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\n\t\t});\n\t}));\n}\n\nfunction read_replacement_table(w: number, next: NextFunc): Array<[ number, Array<number> ]> {\n\tlet n = 1 + next();\n\tlet m = read_transposed(n, 1+w, next);\n\treturn m.map(v => [v[0], v.slice(1)]);\n}\n\nexport type Branch = {\n    set: Set<number>;\n    node: Node;\n};\n\nexport type Node = {\n    branches: Array<Branch>;\n    valid: number;\n    fe0f: boolean;\n    save: boolean;\n    check: boolean;\n};\n\nexport function read_emoji_trie(next: NextFunc): Node {\n\tlet sorted = read_member_array(next).sort((a, b) => a - b);\n\treturn read();\n\tfunction read(): Node {\n\t\tlet branches = [];\n\t\twhile (true) {\n\t\t\tlet keys = read_member_array(next, sorted);\n\t\t\tif (keys.length == 0) break;\n\t\t\tbranches.push({set: new Set(keys), node: read()});\n\t\t}\n    branches.sort((a, b) => b.set.size - a.set.size); // sort by likelihood\n \t\tlet temp = next();\n \t\tlet valid = temp % 3;\n \t\ttemp = (temp / 3)|0;\n \t\tlet fe0f = !!(temp & 1);\n \t\ttemp >>= 1;\n \t\tlet save = temp == 1;\n \t\tlet check = temp == 2;\n \t\treturn {branches, valid, fe0f, save, check};\n\t}\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1717, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1723, "column": 0}, "map": {"version":3,"file":"include.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/hash/src.ts/ens-normalize/include.ts"],"sourcesContent":["/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { decode } from \"@ethersproject/base64\";\n\nimport {read_compressed_payload} from './decoder.js';\n\nexport function getData(): () => number {\n    return read_compressed_payload(decode(''));\n}\n\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;;;AAIH,OAAO,EAAC,uBAAuB,EAAC,MAAM,cAAc,CAAC;AAFrD,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;;;AAIzC,SAAU,OAAO;IACnB,mMAAO,0BAAA,AAAuB,2KAAC,SAAA,AAAM,EAAC,k6cAAk6c,CAAC,CAAC,CAAC;AAC/8c,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1760, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1766, "column": 0}, "map": {"version":3,"file":"lib.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/hash/src.ts/ens-normalize/lib.ts"],"sourcesContent":["/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { toUtf8CodePoints } from \"@ethersproject/strings\";\n\nimport { getData } from './include.js';\nconst r = getData();\n\nimport {read_member_array, read_mapped_map, read_emoji_trie} from './decoder.js';\n\n// @TODO: This should be lazily loaded\n\nconst VALID = new Set(read_member_array(r));\nconst IGNORED = new Set(read_member_array(r));\nconst MAPPED = read_mapped_map(r);\nconst EMOJI_ROOT = read_emoji_trie(r);\n//const NFC_CHECK = new Set(read_member_array(r, Array.from(VALID.values()).sort((a, b) => a - b)));\n\n//const STOP = 0x2E;\nconst HYPHEN = 0x2D;\nconst UNDERSCORE = 0x5F;\n\nfunction explode_cp(name: string): Array<number> {\n    return toUtf8CodePoints(name);\n}\n\nfunction filter_fe0f(cps: Array<number>): Array<number> {\n    return cps.filter(cp => cp != 0xFE0F);\n}\n\nexport function ens_normalize_post_check(name: string): string {\n\tfor (let label of name.split('.')) {\n\t\tlet cps = explode_cp(label);\n\t\ttry {\n\t\t\tfor (let i = cps.lastIndexOf(UNDERSCORE) - 1; i >= 0; i--) {\n\t\t\t\tif (cps[i] !== UNDERSCORE) {\n\t\t\t\t\tthrow new Error(`underscore only allowed at start`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (cps.length >= 4 && cps.every(cp => cp < 0x80) && cps[2] === HYPHEN && cps[3] === HYPHEN) {\n\t\t\t\tthrow new Error(`invalid label extension`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthrow new Error(`Invalid label \"${label}\": ${err.message}`);\n\t\t}\n\t}\n\treturn name;\n}\n\nexport function ens_normalize(name: string): string {\n\treturn ens_normalize_post_check(normalize(name, filter_fe0f));\n}\n\nfunction normalize(name: string, emoji_filter: (a: Array<number>) => Array<number>): string {\n\tlet input = explode_cp(name).reverse(); // flip for pop\n\tlet output = [];\n\twhile (input.length) {\t\t\n\t\tlet emoji = consume_emoji_reversed(input);\n\t\tif (emoji) {\n\t\t\toutput.push(...emoji_filter(emoji));\n\t\t\tcontinue;\n\t\t}\n\t\tlet cp = input.pop();\n\t\tif (VALID.has(cp)) {\n\t\t\toutput.push(cp);\n\t\t\tcontinue;\n\t\t} \n\t\tif (IGNORED.has(cp)) {\n\t\t\tcontinue;\n\t\t}\n\t\tlet cps = MAPPED[cp];\n\t\tif (cps) {\n\t\t\toutput.push(...cps);\n\t\t\tcontinue;\n\t\t}\n\t\tthrow new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`);\n\t}\n\treturn ens_normalize_post_check(nfc(String.fromCodePoint(...output)));\n}\n\nfunction nfc(s: string): string {\n    return s.normalize('NFC');\n}\n\nfunction consume_emoji_reversed(cps: Array<number>, eaten?: Array<number>) {\n\tlet node = EMOJI_ROOT;\n\tlet emoji;\n\tlet saved;\n\tlet stack = [];\n\tlet pos = cps.length;\n\tif (eaten) eaten.length = 0; // clear input buffer (if needed)\n\twhile (pos) {\n\t\tlet cp = cps[--pos];\n\t\tnode = node.branches.find(x => x.set.has(cp))?.node;\n\t\tif (!node) break;\n\t\tif (node.save) { // remember\n\t\t\tsaved = cp;\n\t\t} else if (node.check) { // check exclusion\n\t\t\tif (cp === saved) break;\n\t\t}\n\t\tstack.push(cp);\n\t\tif (node.fe0f) {\n\t\t\tstack.push(0xFE0F);\n\t\t\tif (pos > 0 && cps[pos - 1] == 0xFE0F) pos--; // consume optional FE0F\n\t\t}\n\t\tif (node.valid) { // this is a valid emoji (so far)\n\t\t\temoji = stack.slice(); // copy stack\n\t\t\tif (node.valid == 2) emoji.splice(1, 1); // delete FE0F at position 1 (RGI ZWJ don't follow spec!)\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // copy input (if needed)\n\t\t\tcps.length = pos; // truncate\n\t\t}\n\t}\n\treturn emoji;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1900, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1906, "column": 0}, "map": {"version":3,"file":"namehash.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/hash/src.ts/namehash.ts"],"sourcesContent":["import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { ens_normalize } from \"./ens-normalize/lib\";\n\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\n\nfunction checkComponent(comp: Uint8Array): Uint8Array {\n    if (comp.length === 0) { throw new Error(\"invalid ENS name; empty component\"); }\n    return comp;\n}\n\nfunction ensNameSplit(name: string): Array<Uint8Array> {\n    const bytes = toUtf8Bytes(ens_normalize(name));\n    const comps: Array<Uint8Array> = [ ];\n\n    if (name.length === 0) { return comps; }\n\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n\n    // There was a stray separator at the end of the name\n    if (last >= bytes.length) { throw new Error(\"invalid ENS name; empty component\"); }\n\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\n\nexport function ensNormalize(name: string): string {\n    return ensNameSplit(name).map((comp) => toUtf8String(comp)).join(\".\");\n}\n\nexport function isValidName(name: string): boolean {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    } catch (error) { }\n    return false;\n}\n\nexport function namehash(name: string): string {\n    /* istanbul ignore if */\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n\n    let result: string | Uint8Array = Zeros;\n\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = keccak256(concat([result, keccak256(comps.pop())]));\n    }\n\n    return hexlify(result);\n}\n\nexport function dnsEncode(name: string): string {\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n        // DNS does not allow components over 63 bytes in length\n        if (comp.length > 63) {\n            throw new Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");\n        }\n\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n\n    }))) + \"00\";\n}\n"],"names":[],"mappings":";;;;;;AAIA,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAJrC,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,wBAAwB,CAAC;AAOnE,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AANpD,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AAFrD,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;;;;;;AAMvD,MAAM,MAAM,GAAG,wKAAI,SAAM,sKAAC,UAAO,CAAC,CAAC;;AAInC,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC;AACjC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAEd,SAAS,cAAc,CAAC,IAAgB;IACpC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;QAAE,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;KAAE;IAChF,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,SAAS,YAAY,CAAC,IAAY;IAC9B,MAAM,KAAK,OAAG,kLAAA,AAAW,0LAAC,gBAAA,AAAa,EAAC,IAAI,CAAC,CAAC,CAAC;IAC/C,MAAM,KAAK,GAAsB,EAAG,CAAC;IAErC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;QAAE,OAAO,KAAK,CAAC;KAAE;IAExC,IAAI,IAAI,GAAG,CAAC,CAAC;IACb,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;QACnC,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QAEnB,8CAA8C;QAC9C,IAAI,CAAC,KAAK,IAAI,EAAE;YACZ,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACjD,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;SAChB;KACJ;IAED,qDAAqD;IACrD,IAAI,IAAI,IAAI,KAAK,CAAC,MAAM,EAAE;QAAE,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;KAAE;IAEnF,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9C,OAAO,KAAK,CAAC;AACjB,CAAC;AAEK,SAAU,YAAY,CAAC,IAAY;IACrC,OAAO,YAAY,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,sLAAC,AAAY,EAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC1E,CAAC;AAEK,SAAU,WAAW,CAAC,IAAY;IACpC,IAAI;QACA,OAAO,AAAC,YAAY,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;KAC5C,CAAC,OAAO,KAAK,EAAE,CAAA,CAAG;IACnB,OAAO,KAAK,CAAC;AACjB,CAAC;AAEK,SAAU,QAAQ,CAAC,IAAY;IACjC,sBAAA,EAAwB,CACxB,IAAI,OAAM,AAAC,IAAI,CAAC,IAAK,QAAQ,EAAE;QAC3B,MAAM,CAAC,kBAAkB,CAAC,gCAAgC,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;KAC7E;IAED,IAAI,MAAM,GAAwB,KAAK,CAAC;IAExC,MAAM,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;IACjC,MAAO,KAAK,CAAC,MAAM,CAAE;QACjB,MAAM,IAAG,sLAAA,AAAS,yKAAC,SAAA,AAAM,EAAC;YAAC,MAAM;aAAE,sLAAA,AAAS,EAAC,KAAK,CAAC,GAAG,EAAE,CAAC;SAAC,CAAC,CAAC,CAAC;KAChE;IAED,8KAAO,UAAA,AAAO,EAAC,MAAM,CAAC,CAAC;AAC3B,CAAC;AAEK,SAAU,SAAS,CAAC,IAAY;IAClC,8KAAO,UAAA,AAAO,yKAAC,SAAA,AAAM,EAAC,YAAY,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;QAClD,wDAAwD;QACxD,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,EAAE;YAClB,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;SACzE;QAED,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC9C,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QACnB,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QAC5B,OAAO,KAAK,CAAC;IAEjB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AAChB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1990, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1996, "column": 0}, "map": {"version":3,"file":"hashes.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/constants/src.ts/hashes.ts"],"sourcesContent":["export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\n"],"names":[],"mappings":";;;AAAO,MAAM,QAAQ,GAAG,oEAAoE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2000, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2006, "column": 0}, "map": {"version":3,"file":"_version.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/_version.ts"],"sourcesContent":["export const version = \"providers/5.7.2\";\n"],"names":[],"mappings":";;;AAAO,MAAM,OAAO,GAAG,iBAAiB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2010, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2016, "column": 0}, "map": {"version":3,"file":"addresses.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/constants/src.ts/addresses.ts"],"sourcesContent":["export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n\n"],"names":[],"mappings":";;;AAAO,MAAM,WAAW,GAAG,4CAA4C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2020, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2026, "column": 0}, "map": {"version":3,"file":"formatter.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/formatter.ts"],"sourcesContent":["\"use strict\";\n\nimport { Block, TransactionReceipt, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport type FormatFunc = (value: any) => any;\n\nexport type FormatFuncs = { [ key: string ]: FormatFunc };\n\nexport type Formats = {\n    transaction: FormatFuncs,\n    transactionRequest: FormatFuncs,\n    receipt: FormatFuncs,\n    receiptLog: FormatFuncs,\n    block: FormatFuncs,\n    blockWithTransactions: FormatFuncs,\n    filter: FormatFuncs,\n    filterLog: FormatFuncs,\n};\n\nexport class Formatter {\n    readonly formats: Formats;\n\n    constructor() {\n        this.formats = this.getDefaultFormats();\n    }\n\n    getDefaultFormats(): Formats {\n        const formats: Formats = <Formats>({ });\n\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n\n        const strictData = (v: any) => { return this.data(v, true); };\n\n        formats.transaction = {\n            hash: hash,\n\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n\n            confirmations: Formatter.allowNull(number, null),\n\n            from: address,\n\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n\n            creates: Formatter.allowNull(address, null),\n\n            raw: Formatter.allowNull(data),\n        };\n\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),// @TODO: should this be data?\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n\n        formats.block = {\n            hash: Formatter.allowNull(hash),\n            parentHash: hash,\n            number: number,\n\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n\n            miner: Formatter.allowNull(address),\n            extraData: data,\n\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n\n            topics: Formatter.arrayOf(hash),\n\n            transactionHash: hash,\n            logIndex: number,\n        };\n\n        return formats;\n    }\n\n    accessList(accessList: Array<any>): AccessList {\n        return accessListify(accessList || []);\n    }\n\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number: any): number {\n        if (number === \"0x\") { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    type(number: any): number {\n        if (number === \"0x\" || number == null) { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    // Strict! Used on input.\n    bigNumber(value: any): BigNumber {\n        return BigNumber.from(value);\n    }\n\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value: any): boolean {\n        if (typeof(value) === \"boolean\") { return value; }\n        if (typeof(value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") { return true; }\n            if (value === \"false\") { return false; }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n\n    hex(value: any, strict?: boolean): string {\n        if (typeof(value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n            if (isHexString(value)) {\n               return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n\n    data(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n\n    // Requires an address\n    // Strict! Used on input.\n    address(value: any): string {\n        return getAddress(value);\n    }\n\n    callAddress(value: any): string {\n        if (!isHexString(value, 32)) { return null; }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null: address;\n    }\n\n    contractAddress(value: any): string {\n        return getContractAddress(value);\n    }\n\n    // Strict! Used on input.\n    blockTag(blockTag: any): string {\n        if (blockTag == null) { return \"latest\"; }\n\n        if (blockTag === \"earliest\") { return \"0x0\"; }\n\n        switch (blockTag) {\n            case \"earliest\": return \"0x0\";\n            case \"latest\": case \"pending\": case \"safe\": case \"finalized\":\n                return blockTag;\n        }\n\n        if (typeof(blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(<number | string>blockTag);\n        }\n\n        throw new Error(\"invalid blockTag\");\n    }\n\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value: any): number {\n        if (value == null) { return null; }\n\n        const v = BigNumber.from(value);\n\n        try {\n            return v.toNumber();\n        } catch (error) { }\n\n       return null;\n    }\n\n    uint256(value: any): string {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n\n    _block(value: any, format: any): Block {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty: value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null: BigNumber.from(difficulty));\n        return result;\n    }\n\n    block(value: any): Block {\n        return this._block(value, this.formats.block);\n    }\n\n    blockWithTransactions(value: any): Block {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n\n    // Strict! Used on input.\n    transactionRequest(value: any): any {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n\n    transactionResponse(transaction: any): TransactionResponse {\n\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n\n        if ((transaction.type === 1 || transaction.type === 2)&& transaction.accessList == null) {\n            transaction.accessList = [ ];\n        }\n\n        const result: TransactionResponse = Formatter.check(this.formats.transaction, transaction);\n\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            result.chainId = chainId;\n\n        } else {\n            let chainId = transaction.networkId;\n\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            if (typeof(chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) { chainId = 0; }\n                chainId = parseInt(chainId);\n            }\n\n            if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n            result.chainId = chainId;\n        }\n\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n\n        return result;\n    }\n\n    transaction(value: any): any {\n        return parseTransaction(value);\n    }\n\n    receiptLog(value: any): any {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n\n    receipt(value: any): TransactionReceipt {\n        const result: TransactionReceipt = Formatter.check(this.formats.receipt, value);\n\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                } else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            } else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n\n        return result;\n    }\n\n    topics(value: any): any {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n\n        } else if (value != null) {\n            return this.hash(value, true);\n        }\n\n        return null;\n    }\n\n    filter(value: any): any {\n        return Formatter.check(this.formats.filter, value);\n    }\n\n    filterLog(value: any): any {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n\n    static check(format: { [ name: string ]: FormatFunc }, object: any): any {\n        const result: any = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) { result[key] = value; }\n            } catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n\n    // if value is null-ish, nullValue is returned\n    static allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n        return (function(value: any) {\n            if (value == null) { return nullValue; }\n            return format(value);\n        });\n    }\n\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format: FormatFunc, replaceValue: any): FormatFunc {\n        return (function(value: any) {\n            if (!value) { return replaceValue; }\n            return format(value);\n        });\n    }\n\n    // Requires an Array satisfying check\n    static arrayOf(format: FormatFunc): FormatFunc {\n        return (function(array: any): Array<any> {\n            if (!Array.isArray(array)) { throw new Error(\"not an array\"); }\n\n            const result: any = [];\n\n            array.forEach(function(value) {\n                result.push(format(value));\n            });\n\n            return result;\n        });\n    }\n}\n\nexport interface CommunityResourcable {\n    isCommunityResource(): boolean;\n}\n\nexport function isCommunityResourcable(value: any): value is CommunityResourcable {\n    return (value && typeof(value.isCommunityResource) === \"function\");\n}\n\nexport function isCommunityResource(value: any): boolean {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) { return; }\n    throttleMessage = true;\n\n    console.log(\"========= NOTICE =========\")\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n\n"],"names":[],"mappings":";;;;;;AAUA,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAJrC,OAAO,EAAE,WAAW,EAAE,MAAM,2BAA2B,CAAC;AACxD,OAAO,EAAc,aAAa,EAAE,KAAK,IAAI,gBAAgB,EAAE,MAAM,6BAA6B,CAAC;AAJnG,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AACrD,OAAO,EAAE,aAAa,EAAE,YAAY,EAAE,QAAQ,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AAFtG,OAAO,EAAE,UAAU,EAAE,kBAAkB,EAAE,MAAM,wBAAwB,CAAC;AAGxE,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AANvD,YAAY,CAAC;;;;;;;;;AAYb,MAAM,MAAM,GAAG,wKAAI,SAAM,CAAC,oLAAO,CAAC,CAAC;AAiB7B,MAAO,SAAS;IAGlB,aAAA;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC5C,CAAC;IAED,iBAAiB,GAAA;QACb,MAAM,OAAO,GAAqB,AAAC,CAAA,CAAG,CAAC,CAAC;QAExC,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxC,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5C,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAElC,MAAM,UAAU,GAAG,CAAC,CAAM,EAAE,EAAE;YAAG,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QAAC,CAAC,CAAC;QAE9D,OAAO,CAAC,WAAW,GAAG;YAClB,IAAI,EAAE,IAAI;YAEV,IAAI,EAAE,IAAI;YACV,UAAU,EAAE,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;YAEjE,SAAS,EAAE,SAAS,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC;YAC1C,WAAW,EAAE,SAAS,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC;YAC9C,gBAAgB,EAAE,SAAS,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC;YAEnD,aAAa,EAAE,SAAS,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC;YAEhD,IAAI,EAAE,OAAO;YAEb,6DAA6D;YAC7D,cAAc;YACd,QAAQ,EAAE,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC;YACxC,oBAAoB,EAAE,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC;YACpD,YAAY,EAAE,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC;YAE5C,QAAQ,EAAE,SAAS;YACnB,EAAE,EAAE,SAAS,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC;YACtC,KAAK,EAAE,SAAS;YAChB,KAAK,EAAE,MAAM;YACb,IAAI,EAAE,IAAI;YAEV,CAAC,EAAE,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC;YACpC,CAAC,EAAE,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC;YACpC,CAAC,EAAE,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC;YAE9B,OAAO,EAAE,SAAS,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC;YAE3C,GAAG,EAAE,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC;SACjC,CAAC;QAEF,OAAO,CAAC,kBAAkB,GAAG;YACzB,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC;YAClC,KAAK,EAAE,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC;YAClC,QAAQ,EAAE,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC;YACxC,QAAQ,EAAE,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC;YACxC,oBAAoB,EAAE,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC;YACpD,YAAY,EAAE,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC;YAC5C,EAAE,EAAE,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC;YAChC,KAAK,EAAE,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC;YACrC,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC;YACrC,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC;YACjC,UAAU,EAAE,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;SACpE,CAAC;QAEF,OAAO,CAAC,UAAU,GAAG;YACjB,gBAAgB,EAAE,MAAM;YACxB,WAAW,EAAE,MAAM;YACnB,eAAe,EAAE,IAAI;YACrB,OAAO,EAAE,OAAO;YAChB,MAAM,EAAE,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC;YAC/B,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,MAAM;YAChB,SAAS,EAAE,IAAI;SAClB,CAAC;QAEF,OAAO,CAAC,OAAO,GAAG;YACd,EAAE,EAAE,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC;YAC3C,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC;YAC7C,eAAe,EAAE,SAAS,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC;YACnD,gBAAgB,EAAE,MAAM;YACxB,8EAA8E;YAC9E,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC;YAC9B,OAAO,EAAE,SAAS;YAClB,SAAS,EAAE,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC;YACpC,SAAS,EAAE,IAAI;YACf,eAAe,EAAE,IAAI;YACrB,IAAI,EAAE,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnD,WAAW,EAAE,MAAM;YACnB,aAAa,EAAE,SAAS,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC;YAChD,iBAAiB,EAAE,SAAS;YAC5B,iBAAiB,EAAE,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC;YACjD,MAAM,EAAE,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC;YACnC,IAAI,EAAE,IAAI;SACb,CAAC;QAEF,OAAO,CAAC,KAAK,GAAG;YACZ,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC;YAC/B,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE,MAAM;YAEd,SAAS,EAAE,MAAM;YACjB,KAAK,EAAE,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC;YAC/B,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;YAEtC,QAAQ,EAAE,SAAS;YACnB,OAAO,EAAE,SAAS;YAElB,KAAK,EAAE,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC;YACnC,SAAS,EAAE,IAAI;YAEf,YAAY,EAAE,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAE1D,aAAa,EAAE,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC;SAChD,CAAC;QAEF,OAAO,CAAC,qBAAqB,+KAAG,cAAA,AAAW,EAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC3D,OAAO,CAAC,qBAAqB,CAAC,YAAY,GAAG,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAEzH,OAAO,CAAC,MAAM,GAAG;YACb,SAAS,EAAE,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC;YACnD,OAAO,EAAE,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC;YACjD,SAAS,EAAE,SAAS,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC;YAC/C,OAAO,EAAE,SAAS,CAAC,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC;YAChD,MAAM,EAAE,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC;SACjE,CAAC;QAEF,OAAO,CAAC,SAAS,GAAG;YAChB,WAAW,EAAE,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC;YACxC,SAAS,EAAE,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC;YACpC,gBAAgB,EAAE,MAAM;YAExB,OAAO,EAAE,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAErD,OAAO,EAAE,OAAO;YAChB,IAAI,EAAE,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC;YAExC,MAAM,EAAE,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC;YAE/B,eAAe,EAAE,IAAI;YACrB,QAAQ,EAAE,MAAM;SACnB,CAAC;QAEF,OAAO,OAAO,CAAC;IACnB,CAAC;IAED,UAAU,CAAC,UAAsB,EAAA;QAC7B,qLAAO,gBAAA,AAAa,EAAC,UAAU,IAAI,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED,0FAA0F;IAC1F,yBAAyB;IACzB,MAAM,CAAC,MAAW,EAAA;QACd,IAAI,MAAM,KAAK,IAAI,EAAE;YAAE,OAAO,CAAC,CAAC;SAAE;QAClC,kLAAO,YAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC7C,CAAC;IAED,IAAI,CAAC,MAAW,EAAA;QACZ,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,IAAI,IAAI,EAAE;YAAE,OAAO,CAAC,CAAC;SAAE;QACpD,kLAAO,YAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC7C,CAAC;IAED,yBAAyB;IACzB,SAAS,CAAC,KAAU,EAAA;QAChB,kLAAO,YAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,4DAA4D;IAC5D,OAAO,CAAC,KAAU,EAAA;QACd,IAAI,OAAM,AAAC,KAAK,CAAC,IAAK,SAAS,EAAE;YAAE,OAAO,KAAK,CAAC;SAAE;QAClD,IAAI,OAAM,AAAC,KAAK,CAAC,IAAK,QAAQ,EAAE;YAC5B,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;YAC5B,IAAI,KAAK,KAAK,MAAM,EAAE;gBAAE,OAAO,IAAI,CAAC;aAAE;YACtC,IAAI,KAAK,KAAK,OAAO,EAAE;gBAAE,OAAO,KAAK,CAAC;aAAE;SAC3C;QACD,MAAM,IAAI,KAAK,CAAC,oBAAoB,GAAG,KAAK,CAAC,CAAC;IAClD,CAAC;IAED,GAAG,CAAC,KAAU,EAAE,MAAgB,EAAA;QAC5B,IAAI,OAAM,AAAC,KAAK,CAAC,IAAK,QAAQ,EAAE;YAC5B,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;gBAAE,KAAK,GAAG,IAAI,GAAG,KAAK,CAAC;aAAE;YACxE,2KAAI,cAAA,AAAW,EAAC,KAAK,CAAC,EAAE;gBACrB,OAAO,KAAK,CAAC,WAAW,EAAE,CAAC;aAC7B;SACJ;QACD,OAAO,MAAM,CAAC,kBAAkB,CAAC,cAAc,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;IACrE,CAAC;IAED,IAAI,CAAC,KAAU,EAAE,MAAgB,EAAA;QAC7B,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACvC,IAAI,AAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,IAAK,CAAC,EAAE;YAC3B,MAAM,IAAI,KAAK,CAAC,6BAA6B,GAAG,KAAK,CAAC,CAAC;SAC1D;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,sBAAsB;IACtB,yBAAyB;IACzB,OAAO,CAAC,KAAU,EAAA;QACd,gLAAO,aAAA,AAAU,EAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;IAED,WAAW,CAAC,KAAU,EAAA;QAClB,IAAI,wKAAC,cAAA,AAAW,EAAC,KAAK,EAAE,EAAE,CAAC,EAAE;YAAE,OAAO,IAAI,CAAC;SAAE;QAC7C,MAAM,OAAO,4KAAG,aAAA,AAAU,EAAC,sLAAA,AAAY,EAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;QACpD,OAAO,AAAC,OAAO,gLAAK,cAAW,CAAC,CAAC,CAAE,AAAD,IAAK,CAAA,CAAC,CAAC,OAAO,CAAC;IACrD,CAAC;IAED,eAAe,CAAC,KAAU,EAAA;QACtB,QAAO,6LAAA,AAAkB,EAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAED,yBAAyB;IACzB,QAAQ,CAAC,QAAa,EAAA;QAClB,IAAI,QAAQ,IAAI,IAAI,EAAE;YAAE,OAAO,QAAQ,CAAC;SAAE;QAE1C,IAAI,QAAQ,KAAK,UAAU,EAAE;YAAE,OAAO,KAAK,CAAC;SAAE;QAE9C,OAAQ,QAAQ,EAAE;YACd,KAAK,UAAU,CAAC;gBAAC,OAAO,KAAK,CAAC;YAC9B,KAAK,QAAQ,CAAC;YAAC,KAAK,SAAS,CAAC;YAAC,KAAK,MAAM,CAAC;YAAC,KAAK,WAAW;gBACxD,OAAO,QAAQ,CAAC;SACvB;QAED,IAAI,OAAM,AAAC,QAAQ,CAAC,IAAK,QAAQ,2KAAI,cAAA,AAAW,EAAC,QAAQ,CAAC,EAAE;YACxD,WAAO,8KAAA,AAAQ,EAAkB,QAAQ,CAAC,CAAC;SAC9C;QAED,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;IACxC,CAAC;IAED,mFAAmF;IACnF,IAAI,CAAC,KAAU,EAAE,MAAgB,EAAA;QAC7B,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACvC,QAAI,mLAAA,AAAa,EAAC,MAAM,CAAC,KAAK,EAAE,EAAE;YAC9B,OAAO,MAAM,CAAC,kBAAkB,CAAC,cAAc,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;SACpE;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,8EAA8E;IAC9E,UAAU,CAAC,KAAU,EAAA;QACjB,IAAI,KAAK,IAAI,IAAI,EAAE;YAAE,OAAO,IAAI,CAAC;SAAE;QAEnC,MAAM,CAAC,8KAAG,YAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEhC,IAAI;YACA,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;SACvB,CAAC,OAAO,KAAK,EAAE,CAAA,CAAG;QAEpB,OAAO,IAAI,CAAC;IACf,CAAC;IAED,OAAO,CAAC,KAAU,EAAA;QACd,IAAI,wKAAC,cAAA,AAAW,EAAC,KAAK,CAAC,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;SACtC;QACD,OAAO,oLAAA,AAAU,EAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IACjC,CAAC;IAED,MAAM,CAAC,KAAU,EAAE,MAAW,EAAA;QAC1B,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,KAAK,IAAI,IAAI,EAAE;YAC7C,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;SAC9B;QACD,sEAAsE;QACtE,MAAM,UAAU,GAAG,AAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC,CAAC,AAAC,KAAK,CAAC,WAAW,CAAA,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC;QACrF,MAAM,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAC9C,MAAM,CAAC,WAAW,GAAG,AAAC,AAAC,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC,AAAC,IAAI,CAAA,CAAC,4KAAC,YAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QAC/E,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,KAAK,CAAC,KAAU,EAAA;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC;IAED,qBAAqB,CAAC,KAAU,EAAA;QAC5B,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;IAClE,CAAC;IAED,yBAAyB;IACzB,kBAAkB,CAAC,KAAU,EAAA;QACzB,OAAO,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;IACnE,CAAC;IAED,mBAAmB,CAAC,WAAgB,EAAA;QAEhC,yBAAyB;QACzB,IAAI,WAAW,CAAC,GAAG,IAAI,IAAI,IAAI,WAAW,CAAC,QAAQ,IAAI,IAAI,EAAE;YACzD,WAAW,CAAC,QAAQ,GAAG,WAAW,CAAC,GAAG,CAAC;SAC1C;QAED,mEAAmE;QACnE,+CAA+C;QAC/C,IAAI,WAAW,CAAC,EAAE,+KAAI,YAAS,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE;YAC3D,WAAW,CAAC,EAAE,GAAG,4CAA4C,CAAC;SACjE;QAED,uBAAuB;QACvB,IAAI,WAAW,CAAC,KAAK,IAAI,IAAI,IAAI,WAAW,CAAC,IAAI,IAAI,IAAI,EAAE;YACvD,WAAW,CAAC,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC;SACxC;QAED,yEAAyE;QACzE,IAAI,WAAW,CAAC,EAAE,IAAI,IAAI,IAAI,WAAW,CAAC,OAAO,IAAI,IAAI,EAAE;YACvD,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;SAC3D;QAED,IAAI,CAAC,WAAW,CAAC,IAAI,KAAK,CAAC,IAAI,WAAW,CAAC,IAAI,KAAK,CAAC,CAAC,IAAG,WAAW,CAAC,UAAU,IAAI,IAAI,EAAE;YACrF,WAAW,CAAC,UAAU,GAAG,EAAG,CAAC;SAChC;QAED,MAAM,MAAM,GAAwB,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;QAE3F,IAAI,WAAW,CAAC,OAAO,IAAI,IAAI,EAAE;YAC7B,IAAI,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;YAElC,2KAAI,cAAA,AAAW,EAAC,OAAO,CAAC,EAAE;gBACtB,OAAO,8KAAG,YAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;aAChD;YAED,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;SAE5B,MAAM;YACH,IAAI,OAAO,GAAG,WAAW,CAAC,SAAS,CAAC;YAEpC,2BAA2B;YAC3B,IAAI,OAAO,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,IAAI,IAAI,EAAE;gBACrC,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;aACjC;YAED,IAAI,qLAAA,AAAW,EAAC,OAAO,CAAC,EAAE;gBACtB,OAAO,8KAAG,YAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;aAChD;YAED,IAAI,OAAM,AAAC,OAAO,CAAC,IAAK,QAAQ,IAAI,MAAM,CAAC,CAAC,IAAI,IAAI,EAAE;gBAClD,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;gBAC9B,IAAI,OAAO,GAAG,CAAC,EAAE;oBAAE,OAAO,GAAG,CAAC,CAAC;iBAAE;gBACjC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;aAC/B;YAED,IAAI,OAAM,AAAC,OAAO,CAAC,IAAK,QAAQ,EAAE;gBAAE,OAAO,GAAG,CAAC,CAAC;aAAE;YAElD,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;SAC5B;QAED,oCAAoC;QACpC,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,KAAK,GAAG,EAAE;YAChE,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;SAC3B;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,WAAW,CAAC,KAAU,EAAA;QAClB,OAAO,sLAAgB,AAAhB,EAAiB,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,UAAU,CAAC,KAAU,EAAA;QACjB,OAAO,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;IAC3D,CAAC;IAED,OAAO,CAAC,KAAU,EAAA;QACd,MAAM,MAAM,GAAuB,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAEhF,4EAA4E;QAC5E,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,EAAE;YACrB,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;gBACzB,kCAAkC;gBAClC,MAAM,KAAK,8KAAG,YAAS,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;gBACrD,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,EAAE;oBAC5B,8CAA8C;oBAC9C,IAAI,MAAM,CAAC,MAAM,IAAI,IAAI,IAAK,AAAD,MAAO,CAAC,MAAM,KAAK,KAAK,CAAC,CAAE;wBACpD,MAAM,CAAC,kBAAkB,CAAC,iCAAiC,EAAE,OAAO,EAAE;4BAAE,IAAI,EAAE,MAAM,CAAC,IAAI;4BAAE,MAAM,EAAE,MAAM,CAAC,MAAM;wBAAA,CAAE,CAAC,CAAC;qBACvH;oBACD,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;oBACtB,OAAO,MAAM,CAAC,IAAI,CAAC;iBACtB,MAAM;oBACH,MAAM,CAAC,kBAAkB,CAAC,yBAAyB,EAAE,YAAY,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;iBACnF;aACJ,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,EAAE,EAAE;gBAClC,0BAA0B;gBAC1B,MAAM,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,YAAY,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;aAC7E;SACJ;QAED,IAAI,MAAM,CAAC,MAAM,IAAI,IAAI,EAAE;YACvB,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;SAC3B;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,KAAU,EAAA;QACb,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACtB,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,GAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SAE3C,MAAM,IAAI,KAAK,IAAI,IAAI,EAAE;YACtB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;SACjC;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,MAAM,CAAC,KAAU,EAAA;QACb,OAAO,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IACvD,CAAC;IAED,SAAS,CAAC,KAAU,EAAA;QAChB,OAAO,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAC1D,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,MAAwC,EAAE,MAAW,EAAA;QAC9D,MAAM,MAAM,GAAQ,CAAA,CAAE,CAAC;QACvB,IAAK,MAAM,GAAG,IAAI,MAAM,CAAE;YACtB,IAAI;gBACA,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvC,IAAI,KAAK,KAAK,SAAS,EAAE;oBAAE,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;iBAAE;aACpD,CAAC,OAAO,KAAK,EAAE;gBACZ,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;gBACrB,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC/B,MAAM,KAAK,CAAC;aACf;SACJ;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,8CAA8C;IAC9C,MAAM,CAAC,SAAS,CAAC,MAAkB,EAAE,SAAe,EAAA;QAChD,OAAO,AAAC,SAAS,KAAU;YACvB,IAAI,KAAK,IAAI,IAAI,EAAE;gBAAE,OAAO,SAAS,CAAC;aAAE;YACxC,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kDAAkD;IAClD,MAAM,CAAC,YAAY,CAAC,MAAkB,EAAE,YAAiB,EAAA;QACrD,OAAO,AAAC,SAAS,KAAU;YACvB,IAAI,CAAC,KAAK,EAAE;gBAAE,OAAO,YAAY,CAAC;aAAE;YACpC,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAqC;IACrC,MAAM,CAAC,OAAO,CAAC,MAAkB,EAAA;QAC7B,OAAO,AAAC,SAAS,KAAU;YACvB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAAE,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;aAAE;YAE/D,MAAM,MAAM,GAAQ,EAAE,CAAC;YAEvB,KAAK,CAAC,OAAO,CAAC,SAAS,KAAK;gBACxB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;YAEH,OAAO,MAAM,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AAMK,SAAU,sBAAsB,CAAC,KAAU;IAC7C,OAAO,AAAC,KAAK,IAAI,OAAM,AAAC,KAAK,CAAC,mBAAmB,CAAC,IAAK,UAAU,CAAC,CAAC;AACvE,CAAC;AAEK,SAAU,mBAAmB,CAAC,KAAU;IAC1C,OAAQ,AAAD,sBAAuB,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,mBAAmB,EAAE,CAAC,CAAC;AAC1E,CAAC;AAED,sCAAsC;AACtC,IAAI,eAAe,GAAG,KAAK,CAAC;AACtB,SAAU,mBAAmB;IAC/B,IAAI,eAAe,EAAE;QAAE,OAAO;KAAE;IAChC,eAAe,GAAG,IAAI,CAAC;IAEvB,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAA;IACzC,OAAO,CAAC,GAAG,CAAC,4DAA4D,CAAC,CAAC;IAC1E,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAChB,OAAO,CAAC,GAAG,CAAC,2EAA2E,CAAC,CAAC;IACzF,OAAO,CAAC,GAAG,CAAC,oEAAoE,CAAC,CAAC;IAClF,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAChB,OAAO,CAAC,GAAG,CAAC,yEAAyE,CAAC,CAAC;IACvF,OAAO,CAAC,GAAG,CAAC,wEAAwE,CAAC,CAAC;IACtF,OAAO,CAAC,GAAG,CAAC,+EAA+E,CAAC,CAAC;IAC7F,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAChB,OAAO,CAAC,GAAG,CAAC,qDAAqD,CAAC,CAAC;IACnE,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;AAC9C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2486, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2492, "column": 0}, "map": {"version":3,"file":"base-provider.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/base-provider.ts"],"sourcesContent":["\"use strict\";\n\nimport {\n    Block, BlockTag, BlockWithTransactions, EventType, Filter, FilterByBlockHash, ForkEvent,\n    Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse\n} from \"@ethersproject/abstract-provider\";\nimport { encode as base64Encode } from \"@ethersproject/base64\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { dnsEncode, namehash } from \"@ethersproject/hash\";\nimport { getNetwork, Network, Networkish } from \"@ethersproject/networks\";\nimport { Deferrable, defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { Transaction } from \"@ethersproject/transactions\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\n\nimport bech32 from \"bech32\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Formatter } from \"./formatter\";\n\nconst MAX_CCIP_REDIRECTS = 10;\n\n//////////////////////////////\n// Event Serializeing\n\nfunction checkTopic(topic: string): string {\n     if (topic == null) { return \"null\"; }\n     if (hexDataLength(topic) !== 32) {\n         logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n     }\n     return topic.toLowerCase();\n}\n\nfunction serializeTopics(topics: Array<string | Array<string>>): string {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) { topics.pop(); }\n\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n\n            // Only track unique OR-topics\n            const unique: { [ topic: string ]: boolean } = { }\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n\n            return sorted.join(\"|\");\n\n        } else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\n\nfunction deserializeTopics(data: string): Array<string | Array<string>> {\n    if (data === \"\") { return [ ]; }\n\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") { return [ ]; }\n\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null: topic);\n        });\n\n        return ((comps.length === 1) ? comps[0]: comps);\n    });\n}\n\nfunction getEventTag(eventName: EventType): string {\n    if (typeof(eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n\n    } else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n\n    } else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n\n    } else if (eventName && typeof(eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n\n    throw new Error(\"invalid event - \" + eventName);\n}\n\n//////////////////////////////\n// Helper Object\n\nfunction getTime() {\n    return (new Date()).getTime();\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\n//////////////////////////////\n// Provider Object\n\n\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\n\nconst PollableEvents = [ \"block\", \"network\", \"pending\", \"poll\" ];\n\nexport class Event {\n    readonly listener: Listener;\n    readonly once: boolean;\n    readonly tag: string;\n\n    _lastBlockNumber: number\n    _inflight: boolean;\n\n    constructor(tag: string, listener: Listener, once: boolean) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n\n        this._lastBlockNumber = -2;\n        this._inflight = false;\n    }\n\n    get event(): EventType {\n        switch (this.type) {\n            case \"tx\":\n               return this.hash;\n            case \"filter\":\n               return this.filter;\n        }\n        return this.tag;\n    }\n\n    get type(): string {\n        return this.tag.split(\":\")[0]\n    }\n\n    get hash(): string {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") { return null; }\n        return comps[1];\n    }\n\n    get filter(): Filter {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") { return null; }\n        const address = comps[1];\n\n        const topics = deserializeTopics(comps[2]);\n        const filter: Filter = { };\n\n        if (topics.length > 0) { filter.topics = topics; }\n        if (address && address !== \"*\") { filter.address = address; }\n\n        return filter;\n    }\n\n    pollable(): boolean {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n\nexport interface EnsResolver {\n\n    // Name this Resolver is associated with\n    readonly name: string;\n\n    // The address of the resolver\n    readonly address: string;\n\n    // Multichain address resolution (also normal address resolution)\n    // See: https://eips.ethereum.org/EIPS/eip-2304\n    getAddress(coinType?: 60): Promise<null | string>\n\n    // Contenthash field\n    // See: https://eips.ethereum.org/EIPS/eip-1577\n    getContentHash(): Promise<null | string>;\n\n    // Storage of text records\n    // See: https://eips.ethereum.org/EIPS/eip-634\n    getText(key: string): Promise<null | string>;\n};\n\nexport interface EnsProvider {\n    resolveName(name: string): Promise<null | string>;\n    lookupAddress(address: string): Promise<null | string>;\n    getResolver(name: string): Promise<null | EnsResolver>;\n}\n\ntype CoinInfo = {\n    symbol: string,\n    ilk?: string,     // General family\n    prefix?: string,  // Bech32 prefix\n    p2pkh?: number,   // Pay-to-Public-Key-Hash Version\n    p2sh?: number,    // Pay-to-Script-Hash Version\n};\n\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos: { [ coinType: string ]: CoinInfo } = {\n    \"0\":   { symbol: \"btc\",  p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\":   { symbol: \"ltc\",  p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\":   { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\":  { symbol: \"eth\",  ilk: \"eth\" },\n    \"61\":  { symbol: \"etc\",  ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\n\nfunction bytes32ify(value: number): string {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nexport interface Avatar {\n    url: string;\n    linkage: Array<{ type: string, content: string }>;\n}\n\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n\nfunction _parseString(result: string, start: number): null | string {\n    try {\n        return toUtf8String(_parseBytes(result, start));\n    } catch(error) { }\n    return null;\n}\n\nfunction _parseBytes(result: string, start: number): null | string {\n    if (result === \"0x\") { return null; }\n\n    const offset = BigNumber.from(hexDataSlice(result, start, start + 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link: string): string {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    } else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    } else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n\n    return `https:/\\/gateway.ipfs.io/ipfs/${ link }`;\n}\n\nfunction numPad(value: number): Uint8Array {\n    const result = arrayify(value);\n    if (result.length > 32) { throw new Error(\"internal; should not happen\"); }\n\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\n\nfunction bytesPad(value: Uint8Array): Uint8Array {\n    if ((value.length % 32) === 0) { return value; }\n\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas: Array<BytesLike>) {\n    const result: Array<Uint8Array> = [ ];\n\n    let byteCount = 0;\n\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(null);\n        byteCount += 32;\n    }\n\n    for (let i = 0; i < datas.length; i++) {\n        const data = arrayify(datas[i]);\n\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n\n    return hexConcat(result);\n}\n\nexport class Resolver implements EnsResolver {\n    readonly provider: BaseProvider;\n\n    readonly name: string;\n    readonly address: string;\n\n    readonly _resolvedAddress: null | string;\n\n    // For EIP-2544 names, the ancestor that provided the resolver\n    _supportsEip2544: null | Promise<boolean>;\n\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider: BaseProvider, address: string, name: string, resolvedAddress?: string) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n\n    supportsWildcard(): Promise<boolean> {\n        if (!this._supportsEip2544) {\n            // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n            this._supportsEip2544 = this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n            }).then((result) => {\n                return BigNumber.from(result).eq(1);\n            }).catch((error) => {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return false; }\n                // Rethrow the error: link is down, etc. Let future attempts retry.\n                this._supportsEip2544 = null;\n                throw error;\n            });\n        }\n\n        return this._supportsEip2544;\n    }\n\n    async _fetch(selector: string, parameters?: string): Promise<null | string> {\n\n        // e.g. keccak256(\"addr(bytes32,uint256)\")\n        const tx = {\n            to: this.address,\n            ccipReadEnabled: true,\n            data: hexConcat([ selector, namehash(this.name), (parameters || \"0x\") ])\n        };\n\n        // Wildcard support; use EIP-2544 to resolve the request\n        let parseBytes = false;\n        if (await this.supportsWildcard()) {\n            parseBytes = true;\n\n            // selector(\"resolve(bytes,bytes)\")\n            tx.data = hexConcat([ \"0x9061b923\", encodeBytes([ dnsEncode(this.name), tx.data ]) ]);\n        }\n\n        try {\n            let result = await this.provider.call(tx);\n            if ((arrayify(result).length % 32) === 4) {\n                logger.throwError(\"resolver threw error\", Logger.errors.CALL_EXCEPTION, {\n                    transaction: tx, data: result\n                });\n            }\n            if (parseBytes) { result = _parseBytes(result, 0); }\n            return result;\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n            throw error;\n        }\n    }\n\n    async _fetchBytes(selector: string, parameters?: string): Promise<null | string> {\n        const result = await this._fetch(selector, parameters);\n        if (result != null) { return _parseBytes(result, 0); }\n        return null;\n    }\n\n    _getAddress(coinType: number, hexBytes: string): string {\n        const coinInfo = coinInfos[String(coinType)];\n\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${ coinType }`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`\n            });\n        }\n\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n\n        const bytes = arrayify(hexBytes);\n\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2pkh ], (\"0x\" + p2pkh[2]) ]));\n                }\n            }\n        }\n\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2sh ], (\"0x\" + p2sh[2]) ]));\n                }\n            }\n        }\n\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            } else {\n                version = -1;\n            }\n\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n\n        return null;\n    }\n\n\n    async getAddress(coinType?: number): Promise<string> {\n        if (coinType == null) { coinType = 60; }\n\n        // If Ethereum, use the standard `addr(bytes32)`\n        if (coinType === 60) {\n            try {\n                // keccak256(\"addr(bytes32)\")\n                const result = await this._fetch(\"0x3b3b57de\");\n\n                // No address\n                if (result === \"0x\" || result === HashZero) { return null; }\n\n                return this.provider.formatter.callAddress(result);\n            } catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n                throw error;\n            }\n        }\n\n        // keccak256(\"addr(bytes32,uint256\")\n        const hexBytes = await this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n\n        // No address\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // Compute the address\n        const address = this._getAddress(coinType, hexBytes);\n\n        if (address == null) {\n            logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`,\n                coinType: coinType,\n                data: hexBytes\n            });\n        }\n\n        return address;\n    }\n\n    async getAvatar(): Promise<null | Avatar> {\n        const linkage: Array<{ type: string, content: string }> = [ { type: \"name\", content: this.name } ];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) { return null; }\n\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) { continue; }\n\n                const scheme = match[1].toLowerCase();\n\n                switch (scheme) {\n                    case \"https\":\n                        linkage.push({ type: \"url\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"data\":\n                        linkage.push({ type: \"data\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"ipfs\":\n                        linkage.push({ type: \"ipfs\", content: avatar });\n                        return { linkage, url: getIpfsLink(avatar) };\n\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"0xc87b56dd\": \"0x0e89341c\";\n                        linkage.push({ type: scheme, content: avatar });\n\n                        // The owner of this name\n                        const owner = (this._resolvedAddress || await this.getAddress());\n\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) { return null; }\n\n                        const addr = await this.provider.formatter.address(comps[0]);\n                        const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            // ownerOf(uint256 tokenId)\n                            const tokenOwner = this.provider.formatter.callAddress(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x6352211e\", tokenId ])\n                            }));\n                            if (owner !== tokenOwner) { return null; }\n                            linkage.push({ type: \"owner\", content: tokenOwner });\n\n                        } else if (scheme === \"erc1155\") {\n                            // balanceOf(address owner, uint256 tokenId)\n                            const balance = BigNumber.from(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x00fdd58e\", hexZeroPad(owner, 32), tokenId ])\n                            }));\n                            if (balance.isZero()) { return null; }\n                            linkage.push({ type: \"balance\", content: balance.toString() });\n                        }\n\n                        // Call the token contract for the metadata URL\n                        const tx = {\n                            to: this.provider.formatter.address(comps[0]),\n                            data: hexConcat([ selector, tokenId ])\n                        };\n\n                        let metadataUrl = _parseString(await this.provider.call(tx), 0);\n                        if (metadataUrl == null) { return null; }\n                        linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                        }\n\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n\n                        linkage.push({ type: \"metadata-url\", content: metadataUrl });\n\n                        // Get the token metadata\n                        const metadata = await fetchJson(metadataUrl);\n                        if (!metadata) { return null; }\n                        linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof(imageUrl) !== \"string\") { return null; }\n\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        } else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) { return null; }\n\n                            linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n\n                        linkage.push({ type: \"url\", content: imageUrl });\n\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        } catch (error) { }\n\n        return null;\n    }\n\n    async getContentHash(): Promise<string> {\n\n        // keccak256(\"contenthash()\")\n        const hexBytes = await this._fetchBytes(\"0xbc1c58d1\");\n\n        // No contenthash\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // IPFS (CID: 1, Type: DAG-PB)\n        const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const length = parseInt(ipfs[3], 16);\n            if (ipfs[4].length === length * 2) {\n                return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n            }\n        }\n\n        // IPNS (CID: 1, Type: libp2p-key)\n        const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipns) {\n            const length = parseInt(ipns[3], 16);\n            if (ipns[4].length === length * 2) {\n                return \"ipns:/\\/\" + Base58.encode(\"0x\" + ipns[1]);\n            }\n        }\n\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/)\n        if (swarm) {\n            if (swarm[1].length === (32 * 2)) {\n                return \"bzz:/\\/\" + swarm[1]\n            }\n        }\n\n        const skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);\n        if (skynet) {\n            if (skynet[1].length === (34 * 2)) {\n                // URL Safe base64; https://datatracker.ietf.org/doc/html/rfc4648#section-5\n                const urlSafe: Record<string, string> = { \"=\": \"\", \"+\": \"-\", \"/\": \"_\" };\n                const hash = base64Encode(\"0x\" + skynet[1]).replace(/[=+\\/]/g, (a) => (urlSafe[a]));\n                return \"sia:/\\/\" + hash;\n            }\n        }\n\n        return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"getContentHash()\",\n            data: hexBytes\n        });\n    }\n\n    async getText(key: string): Promise<string> {\n\n        // The key encoded as parameter to fetchBytes\n        let keyBytes = toUtf8Bytes(key);\n\n        // The nodehash consumes the first slot, so the string pointer targets\n        // offset 64, with the length at offset 64 and data starting at offset 96\n        keyBytes = concat([ bytes32ify(64), bytes32ify(keyBytes.length), keyBytes ]);\n\n        // Pad to word-size (32 bytes)\n        if ((keyBytes.length % 32) !== 0) {\n            keyBytes = concat([ keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32)) ])\n        }\n\n        const hexBytes = await this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        return toUtf8String(hexBytes);\n    }\n}\n\nlet defaultFormatter: Formatter = null;\n\nlet nextPollId = 1;\n\nexport class BaseProvider extends Provider implements EnsProvider {\n    _networkPromise: Promise<Network>;\n    _network: Network;\n\n    _events: Array<Event>;\n\n    formatter: Formatter;\n\n    // To help mitigate the eventually consistent nature of the blockchain\n    // we keep a mapping of events we emit. If we emit an event X, we expect\n    // that a user should be able to query for that event in the callback,\n    // if the node returns null, we stall the response until we get back a\n    // meaningful value, since we may be hitting a re-org, or a node that\n    // has not indexed the event yet.\n    // Events:\n    //   - t:{hash}    - Transaction hash\n    //   - b:{hash}    - BlockHash\n    //   - block       - The most recent emitted block\n    _emitted: { [ eventName: string ]: number | \"pending\" };\n\n    _pollingInterval: number;\n    _poller: NodeJS.Timer;\n    _bootstrapPoll: NodeJS.Timer;\n\n    _lastBlockNumber: number;\n    _maxFilterBlockRange: number;\n\n    _fastBlockNumber: number;\n    _fastBlockNumberPromise: Promise<number>;\n    _fastQueryDate: number;\n\n    _maxInternalBlockNumber: number;\n    _internalBlockNumber: Promise<{ blockNumber: number, reqTime: number, respTime: number }>;\n\n    readonly anyNetwork: boolean;\n\n    disableCcipRead: boolean;\n\n\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n\n    constructor(network: Networkish | Promise<Network>) {\n        super();\n\n        // Events being listened to\n        this._events = [];\n\n        this._emitted = { block: -2 };\n\n        this.disableCcipRead = false;\n\n        this.formatter = new.target.getFormatter();\n\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) { network = this.detectNetwork(); }\n\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n\n        } else {\n            const knownNetwork = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n\n            } else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n\n        this._maxInternalBlockNumber = -1024;\n\n        this._lastBlockNumber = -2;\n        this._maxFilterBlockRange = 10;\n\n        this._pollingInterval = 4000;\n\n        this._fastQueryDate = 0;\n    }\n\n    async _ready(): Promise<Network> {\n        if (this._network == null) {\n            let network: Network = null;\n            if (this._networkPromise) {\n                try {\n                    network = await this._networkPromise;\n                } catch (error) { }\n            }\n\n            // Try the Provider's network detection (this MUST throw if it cannot)\n            if (network == null) {\n                network = await this.detectNetwork();\n            }\n\n            // This should never happen; every Provider sub-class should have\n            // suggested a network by here (or have thrown).\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // Possible this call stacked so do not call defineReadOnly again\n            if (this._network == null) {\n                if (this.anyNetwork) {\n                    this._network = network;\n                } else {\n                    defineReadOnly(this, \"_network\", network);\n                }\n                this.emit(\"network\", network, null);\n            }\n        }\n\n        return this._network;\n    }\n\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready(): Promise<Network> {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter(): Formatter {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network: Networkish): Network {\n        return getNetwork((network == null) ? \"homestead\": network);\n    }\n\n    async ccipReadFetch(tx: Transaction, calldata: string, urls: Array<string>): Promise<null | string> {\n        if (this.disableCcipRead || urls.length === 0) { return null; }\n\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n\n        const errorMessages: Array<string> = [ ];\n\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n\n            // If no {data} is present, use POST; otherwise GET\n            const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n\n            const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n                value.status = response.statusCode;\n                return value;\n            });\n\n            if (result.data) { return result.data; }\n\n            const errorMessage = (result.message || \"unknown error\");\n\n            // 4xx indicates the result is not present; stop\n            if (result.status >= 400 && result.status < 500) {\n                return logger.throwError(`response not found during CCIP fetch: ${ errorMessage }`, Logger.errors.SERVER_ERROR, { url, errorMessage });\n            }\n\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n\n        return logger.throwError(`error encountered during CCIP fetch: ${ errorMessages.map((m) => JSON.stringify(m)).join(\", \") }`, Logger.errors.SERVER_ERROR, {\n            urls, errorMessages\n        });\n    }\n\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    async _getInternalBlockNumber(maxAge: number): Promise<number> {\n        await this._ready();\n\n        // Allowing stale data up to maxAge old\n        if (maxAge > 0) {\n\n            // While there are pending internal block requests...\n            while (this._internalBlockNumber) {\n\n                // ...\"remember\" which fetch we started with\n                const internalBlockNumber = this._internalBlockNumber;\n\n                try {\n                    // Check the result is not too stale\n                    const result = await internalBlockNumber;\n                    if ((getTime() - result.respTime) <= maxAge) {\n                        return result.blockNumber;\n                    }\n\n                    // Too old; fetch a new value\n                    break;\n\n                } catch(error) {\n\n                    // The fetch rejected; if we are the first to get the\n                    // rejection, drop through so we replace it with a new\n                    // fetch; all others blocked will then get that fetch\n                    // which won't match the one they \"remembered\" and loop\n                    if (this._internalBlockNumber === internalBlockNumber) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        const reqTime = getTime();\n\n        const checkInternalBlockNumber = resolveProperties({\n            blockNumber: this.perform(\"getBlockNumber\", { }),\n            networkError: this.getNetwork().then((network) => (null), (error) => (error))\n        }).then(({ blockNumber, networkError }) => {\n            if (networkError) {\n                // Unremember this bad internal block number\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n                throw networkError;\n            }\n\n            const respTime = getTime();\n\n            blockNumber = BigNumber.from(blockNumber).toNumber();\n            if (blockNumber < this._maxInternalBlockNumber) { blockNumber = this._maxInternalBlockNumber; }\n\n            this._maxInternalBlockNumber = blockNumber;\n            this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n            return { blockNumber, reqTime, respTime };\n        });\n\n        this._internalBlockNumber = checkInternalBlockNumber;\n\n        // Swallow unhandled exceptions; if needed they are handled else where\n        checkInternalBlockNumber.catch((error) => {\n            // Don't null the dead (rejected) fetch, if it has already been updated\n            if (this._internalBlockNumber === checkInternalBlockNumber) {\n                this._internalBlockNumber = null;\n            }\n        });\n\n        return (await checkInternalBlockNumber).blockNumber;\n    }\n\n    async poll(): Promise<void> {\n        const pollId = nextPollId++;\n\n        // Track all running promises, so we can trigger a post-poll once they are complete\n        const runners: Array<Promise<void>> = [];\n\n        let blockNumber: number = null;\n        try {\n            blockNumber = await this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n        } catch (error) {\n            this.emit(\"error\", error);\n            return;\n        }\n        this._setFastBlockNumber(blockNumber);\n\n        // Emit a poll event after we have the latest (fast) block number\n        this.emit(\"poll\", pollId, blockNumber);\n\n        // If the block has not changed, meh.\n        if (blockNumber === this._lastBlockNumber) {\n            this.emit(\"didPoll\", pollId);\n            return;\n        }\n\n        // First polling cycle, trigger a \"block\" events\n        if (this._emitted.block === -2) {\n            this._emitted.block = blockNumber - 1;\n        }\n\n        if (Math.abs((<number>(this._emitted.block)) - blockNumber) > 1000) {\n            logger.warn(`network block skew detected; skipping block events (emitted=${ this._emitted.block } blockNumber${ blockNumber })`);\n            this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                blockNumber: blockNumber,\n                event: \"blockSkew\",\n                previousBlockNumber: this._emitted.block\n            }));\n            this.emit(\"block\", blockNumber);\n\n        } else {\n            // Notify all listener for each block that has passed\n            for (let i = (<number>this._emitted.block) + 1; i <= blockNumber; i++) {\n                this.emit(\"block\", i);\n            }\n        }\n\n        // The emitted block was updated, check for obsolete events\n        if ((<number>this._emitted.block) !== blockNumber) {\n            this._emitted.block = blockNumber;\n\n            Object.keys(this._emitted).forEach((key) => {\n                // The block event does not expire\n                if (key === \"block\") { return; }\n\n                // The block we were at when we emitted this event\n                const eventBlockNumber = this._emitted[key];\n\n                // We cannot garbage collect pending transactions or blocks here\n                // They should be garbage collected by the Provider when setting\n                // \"pending\" events\n                if (eventBlockNumber === \"pending\") { return; }\n\n                // Evict any transaction hashes or block hashes over 12 blocks\n                // old, since they should not return null anyways\n                if (blockNumber - eventBlockNumber > 12) {\n                    delete this._emitted[key];\n                }\n            });\n        }\n\n        // First polling cycle\n        if (this._lastBlockNumber === -2) {\n            this._lastBlockNumber = blockNumber - 1;\n        }\n        // Find all transaction hashes we are waiting on\n        this._events.forEach((event) => {\n            switch (event.type) {\n                case \"tx\": {\n                    const hash = event.hash;\n                    let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt || receipt.blockNumber == null) { return null; }\n                        this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                        this.emit(hash, receipt);\n                        return null;\n                    }).catch((error: Error) => { this.emit(\"error\", error); });\n\n                    runners.push(runner);\n\n                    break;\n                }\n\n                case \"filter\": {\n                    // We only allow a single getLogs to be in-flight at a time\n                    if (!event._inflight) {\n                        event._inflight = true;\n\n                        // This is the first filter for this event, so we want to\n                        // restrict events to events that happened no earlier than now\n                        if (event._lastBlockNumber === -2) {\n                            event._lastBlockNumber = blockNumber - 1;\n                        }\n\n                        // Filter from the last *known* event; due to load-balancing\n                        // and some nodes returning updated block numbers before\n                        // indexing events, a logs result with 0 entries cannot be\n                        // trusted and we must retry a range which includes it again\n                        const filter = event.filter;\n                        filter.fromBlock = event._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n\n                        // Prevent fitler ranges from growing too wild, since it is quite\n                        // likely there just haven't been any events to move the lastBlockNumber.\n                        const minFromBlock = filter.toBlock - this._maxFilterBlockRange;\n                        if (minFromBlock > filter.fromBlock) { filter.fromBlock = minFromBlock; }\n\n                        if (filter.fromBlock < 0) { filter.fromBlock = 0; }\n\n                        const runner = this.getLogs(filter).then((logs) => {\n                            // Allow the next getLogs\n                            event._inflight = false;\n\n                            if (logs.length === 0) { return; }\n\n                            logs.forEach((log: Log) => {\n                                // Only when we get an event for a given block number\n                                // can we trust the events are indexed\n                                if (log.blockNumber > event._lastBlockNumber) {\n                                    event._lastBlockNumber = log.blockNumber;\n                                }\n\n                                // Make sure we stall requests to fetch blocks and txs\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n\n                                this.emit(filter, log);\n                            });\n                        }).catch((error: Error) => {\n                            this.emit(\"error\", error);\n\n                            // Allow another getLogs (the range was not updated)\n                            event._inflight = false;\n                        });\n                        runners.push(runner);\n                    }\n\n                    break;\n                }\n            }\n        });\n\n        this._lastBlockNumber = blockNumber;\n\n        // Once all events for this loop have been processed, emit \"didPoll\"\n        Promise.all(runners).then(() => {\n            this.emit(\"didPoll\", pollId);\n        }).catch((error) => { this.emit(\"error\", error); });\n\n        return;\n    }\n\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber: number): void {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) { this.poll(); }\n    }\n\n    get network(): Network {\n        return this._network;\n    }\n\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    async detectNetwork(): Promise<Network> {\n        return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"provider.detectNetwork\"\n        });\n    }\n\n    async getNetwork(): Promise<Network> {\n        const network = await this._ready();\n\n        // Make sure we are still connected to the same network; this is\n        // only an external call for backends which can have the underlying\n        // network change spontaneously\n        const currentNetwork = await this.detectNetwork();\n        if (network.chainId !== currentNetwork.chainId) {\n\n            // We are allowing network changes, things can get complex fast;\n            // make sure you know what you are doing if you use \"any\"\n            if (this.anyNetwork) {\n                this._network = currentNetwork;\n\n                // Reset all internal block number guards and caches\n                this._lastBlockNumber = -2;\n                this._fastBlockNumber = null;\n                this._fastBlockNumberPromise = null;\n                this._fastQueryDate = 0;\n                this._emitted.block = -2;\n                this._maxInternalBlockNumber = -1024;\n                this._internalBlockNumber = null;\n\n                // The \"network\" event MUST happen before this method resolves\n                // so any events have a chance to unregister, so we stall an\n                // additional event loop before returning from /this/ call\n                this.emit(\"network\", currentNetwork, network);\n                await stall(0);\n\n                return this._network;\n            }\n\n            const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                event: \"changed\",\n                network: network,\n                detectedNetwork: currentNetwork\n            });\n\n            this.emit(\"error\", error);\n            throw error;\n        }\n\n        return network;\n    }\n\n    get blockNumber(): number {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber: -1;\n    }\n\n    get polling(): boolean {\n        return (this._poller != null);\n    }\n\n    set polling(value: boolean) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) { this.poll(); }\n\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n\n        } else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n\n    get pollingInterval(): number {\n        return this._pollingInterval;\n    }\n\n    set pollingInterval(value: number) {\n        if (typeof(value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n\n        this._pollingInterval = value;\n\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n\n    _getFastBlockNumber(): Promise<number> {\n        const now = getTime();\n\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n\n        return this._fastBlockNumberPromise;\n    }\n\n    _setFastBlockNumber(blockNumber: number): void {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) { return; }\n\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n\n    async waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt> {\n        return this._waitForTransaction(transactionHash, (confirmations == null) ? 1: confirmations, timeout || 0, null);\n    }\n\n    async _waitForTransaction(transactionHash: string, confirmations: number, timeout: number, replaceable: { data: string, from: string, nonce: number, to: string, value: BigNumber, startBlock: number }): Promise<TransactionReceipt> {\n        const receipt = await this.getTransactionReceipt(transactionHash);\n\n        // Receipt is already good\n        if ((receipt ? receipt.confirmations: 0) >= confirmations) { return receipt; }\n\n        // Poll until the receipt is good...\n        return new Promise((resolve, reject) => {\n            const cancelFuncs: Array<() => void> = [];\n\n            let done = false;\n            const alreadyDone = function() {\n                if (done) { return true; }\n                done = true;\n                cancelFuncs.forEach((func) => { func(); });\n                return false;\n            };\n\n            const minedHandler = (receipt: TransactionReceipt) => {\n                if (receipt.confirmations < confirmations) { return; }\n                if (alreadyDone()) { return; }\n                resolve(receipt);\n            }\n            this.on(transactionHash, minedHandler);\n            cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n\n            if (replaceable) {\n                let lastBlockNumber = replaceable.startBlock;\n                let scannedBlock: number = null;\n                const replaceHandler = async (blockNumber: number) => {\n                    if (done) { return; }\n\n                    // Wait 1 second; this is only used in the case of a fault, so\n                    // we will trade off a little bit of latency for more consistent\n                    // results and fewer JSON-RPC calls\n                    await stall(1000);\n\n                    this.getTransactionCount(replaceable.from).then(async (nonce) => {\n                        if (done) { return; }\n\n                        if (nonce <= replaceable.nonce) {\n                            lastBlockNumber = blockNumber;\n\n                        } else {\n                            // First check if the transaction was mined\n                            {\n                                const mined = await this.getTransaction(transactionHash);\n                                if (mined && mined.blockNumber != null) { return; }\n                            }\n\n                            // First time scanning. We start a little earlier for some\n                            // wiggle room here to handle the eventually consistent nature\n                            // of blockchain (e.g. the getTransactionCount was for a\n                            // different block)\n                            if (scannedBlock == null) {\n                                scannedBlock = lastBlockNumber - 3;\n                                if (scannedBlock < replaceable.startBlock) {\n                                    scannedBlock = replaceable.startBlock;\n                                }\n                            }\n\n                            while (scannedBlock <= blockNumber) {\n                                if (done) { return; }\n\n                                const block = await this.getBlockWithTransactions(scannedBlock);\n                                for (let ti = 0; ti < block.transactions.length; ti++) {\n                                    const tx = block.transactions[ti];\n\n                                    // Successfully mined!\n                                    if (tx.hash === transactionHash) { return; }\n\n                                    // Matches our transaction from and nonce; its a replacement\n                                    if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                        if (done) { return; }\n\n                                        // Get the receipt of the replacement\n                                        const receipt = await this.waitForTransaction(tx.hash, confirmations);\n\n                                        // Already resolved or rejected (prolly a timeout)\n                                        if (alreadyDone()) { return; }\n\n                                        // The reason we were replaced\n                                        let reason = \"replaced\";\n                                        if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                            reason = \"repriced\";\n                                        } else  if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                            reason = \"cancelled\"\n                                        }\n\n                                        // Explain why we were replaced\n                                        reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                            reason,\n                                            replacement: this._wrapTransaction(tx),\n                                            hash: transactionHash,\n                                            receipt\n                                        }));\n\n                                        return;\n                                    }\n                                }\n                                scannedBlock++;\n                            }\n                        }\n\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n\n                    }, (error) => {\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n                    });\n                };\n\n                if (done) { return; }\n                this.once(\"block\", replaceHandler);\n\n                cancelFuncs.push(() => {\n                    this.removeListener(\"block\", replaceHandler);\n                });\n            }\n\n            if (typeof(timeout) === \"number\" && timeout > 0) {\n                const timer = setTimeout(() => {\n                    if (alreadyDone()) { return; }\n                    reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                }, timeout);\n                if (timer.unref) { timer.unref(); }\n\n                cancelFuncs.push(() => { clearTimeout(timer); });\n            }\n        });\n    }\n\n    async getBlockNumber(): Promise<number> {\n        return this._getInternalBlockNumber(0);\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        await this.getNetwork();\n\n        const result = await this.perform(\"getGasPrice\", { });\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getGasPrice\",\n                result, error\n            });\n        }\n    }\n\n    async getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getBalance\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getBalance\",\n                params, result, error\n            });\n        }\n    }\n\n    async getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getTransactionCount\", params);\n        try {\n            return BigNumber.from(result).toNumber();\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getTransactionCount\",\n                params, result, error\n            });\n        }\n    }\n\n    async getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getCode\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getCode\",\n                params, result, error\n            });\n        }\n    }\n\n    async getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag),\n            position: Promise.resolve(position).then((p) => hexValue(p))\n        });\n        const result = await this.perform(\"getStorageAt\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getStorageAt\",\n                params, result, error\n            });\n        }\n    }\n\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx: Transaction, hash?: string, startBlock?: number): TransactionResponse {\n        if (hash != null && hexDataLength(hash) !== 32) { throw new Error(\"invalid response - sendTransaction\"); }\n\n        const result = <TransactionResponse>tx;\n\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n\n        result.wait = async (confirms?: number, timeout?: number) => {\n            if (confirms == null) { confirms = 1; }\n            if (timeout == null) { timeout = 0; }\n\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n\n            const receipt = await this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) { return null; }\n\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        };\n\n        return result;\n    }\n\n    async sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        const hexTx = await Promise.resolve(signedTransaction).then(t => hexlify(t));\n        const tx = this.formatter.transaction(signedTransaction);\n        if (tx.confirmations == null) { tx.confirmations = 0; }\n        const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n        try {\n            const hash = await this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n            return this._wrapTransaction(tx, hash, blockNumber);\n        } catch (error) {\n            (<any>error).transaction = tx;\n            (<any>error).transactionHash = tx.hash;\n            throw error;\n        }\n    }\n\n    async _getTransactionRequest(transaction: Deferrable<TransactionRequest>): Promise<Transaction> {\n        const values: any = await transaction;\n\n        const tx: any = { };\n\n        [\"from\", \"to\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v): null))\n        });\n\n        [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v): null));\n        });\n\n        [\"type\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v: null));\n        });\n\n        if (values.accessList) {\n            tx.accessList = this.formatter.accessList(values.accessList);\n        }\n\n        [\"data\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v): null));\n        });\n\n        return this.formatter.transactionRequest(await resolveProperties(tx));\n    }\n\n    async _getFilter(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Filter | FilterByBlockHash> {\n        filter = await filter;\n\n        const result: any = { };\n\n        if (filter.address != null) {\n            result.address = this._getAddress(filter.address);\n        }\n\n        [\"blockHash\", \"topics\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = (<any>filter)[key];\n        });\n\n        [\"fromBlock\", \"toBlock\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = this._getBlockTag((<any>filter)[key]);\n        });\n\n        return this.formatter.filter(await resolveProperties(result));\n    }\n\n    async _call(transaction: TransactionRequest, blockTag: BlockTag, attempt: number): Promise<string> {\n        if (attempt >= MAX_CCIP_REDIRECTS) {\n            logger.throwError(\"CCIP read exceeded maximum redirections\", Logger.errors.SERVER_ERROR, {\n                redirects: attempt, transaction\n            });\n        }\n\n        const txSender = transaction.to;\n\n        const result = await this.perform(\"call\", { transaction, blockTag });\n\n        // CCIP Read request via OffchainLookup(address,string[],bytes,bytes4,bytes)\n        if (attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && (hexDataLength(result) % 32 === 4)) {\n            try {\n                const data = hexDataSlice(result, 4);\n\n                // Check the sender of the OffchainLookup matches the transaction\n                const sender = hexDataSlice(data, 0, 32);\n                if (!BigNumber.from(sender).eq(txSender)) {\n                    logger.throwError(\"CCIP Read sender did not match\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                // Read the URLs from the response\n                const urls: Array<string> = [];\n                const urlsOffset = BigNumber.from(hexDataSlice(data, 32, 64)).toNumber();\n                const urlsLength = BigNumber.from(hexDataSlice(data, urlsOffset, urlsOffset + 32)).toNumber();\n                const urlsData = hexDataSlice(data, urlsOffset + 32);\n                for (let u = 0; u < urlsLength; u++) {\n                    const url = _parseString(urlsData, u * 32);\n                    if (url == null) {\n                        logger.throwError(\"CCIP Read contained corrupt URL string\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    urls.push(url);\n                }\n\n                // Get the CCIP calldata to forward\n                const calldata = _parseBytes(data, 64);\n\n                // Get the callbackSelector (bytes4)\n                if (!BigNumber.from(hexDataSlice(data, 100, 128)).isZero()) {\n                    logger.throwError(\"CCIP Read callback selector included junk\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n                const callbackSelector = hexDataSlice(data, 96, 100);\n\n                // Get the extra data to send back to the contract as context\n                const extraData = _parseBytes(data, 128);\n\n                const ccipResult = await this.ccipReadFetch(<Transaction>transaction, calldata, urls);\n                if (ccipResult == null) {\n                    logger.throwError(\"CCIP Read disabled or provided no URLs\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                const tx = {\n                    to: txSender,\n                    data: hexConcat([ callbackSelector, encodeBytes([ ccipResult, extraData ]) ])\n                };\n\n                return this._call(tx, blockTag, attempt + 1);\n\n            } catch (error) {\n                if (error.code === Logger.errors.SERVER_ERROR) { throw error; }\n            }\n        }\n\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"call\",\n                params: { transaction, blockTag }, result, error\n            });\n        }\n\n    }\n\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const resolved = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction),\n            blockTag: this._getBlockTag(blockTag),\n            ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n        });\n        return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0: -1);\n    }\n\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction)\n        });\n\n        const result = await this.perform(\"estimateGas\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"estimateGas\",\n                params, result, error\n            });\n        }\n    }\n\n    async _getAddress(addressOrName: string | Promise<string>): Promise<string> {\n        addressOrName = await addressOrName;\n        if (typeof(addressOrName) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n        }\n\n        const address = await this.resolveName(addressOrName);\n        if (address == null) {\n            logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `resolveName(${ JSON.stringify(addressOrName) })`\n            });\n        }\n        return address;\n    }\n\n    async _getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>, includeTransactions?: boolean): Promise<Block | BlockWithTransactions> {\n        await this.getNetwork();\n\n        blockHashOrBlockTag = await blockHashOrBlockTag;\n\n        // If blockTag is a number (not \"latest\", etc), this is the block number\n        let blockNumber = -128;\n\n        const params: { [key: string]: any } = {\n            includeTransactions: !!includeTransactions\n        };\n\n        if (isHexString(blockHashOrBlockTag, 32)) {\n            params.blockHash = blockHashOrBlockTag;\n        } else {\n            try {\n                params.blockTag = await this._getBlockTag(blockHashOrBlockTag);\n                if (isHexString(params.blockTag)) {\n                    blockNumber = parseInt(params.blockTag.substring(2), 16);\n                }\n            } catch (error) {\n                logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n            }\n        }\n\n        return poll(async () => {\n            const block = await this.perform(\"getBlock\", params);\n\n            // Block was not found\n            if (block == null) {\n\n                // For blockhashes, if we didn't say it existed, that blockhash may\n                // not exist. If we did see it though, perhaps from a log, we know\n                // it exists, and this node is just not caught up yet.\n                if (params.blockHash != null) {\n                    if (this._emitted[\"b:\" + params.blockHash] == null) { return null; }\n                }\n\n                // For block tags, if we are asking for a future block, we return null\n                if (params.blockTag != null) {\n                    if (blockNumber > this._emitted.block) { return null; }\n                }\n\n                // Retry on the next block\n                return undefined;\n            }\n\n            // Add transactions\n            if (includeTransactions) {\n                let blockNumber: number = null;\n                for (let i = 0; i < block.transactions.length; i++) {\n                    const tx = block.transactions[i];\n                    if (tx.blockNumber == null) {\n                        tx.confirmations = 0;\n\n                    } else if (tx.confirmations == null) {\n                        if (blockNumber == null) {\n                            blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                        }\n\n                        // Add the confirmations using the fast block number (pessimistic)\n                        let confirmations = (blockNumber - tx.blockNumber) + 1;\n                        if (confirmations <= 0) { confirmations = 1; }\n                        tx.confirmations = confirmations;\n                    }\n                }\n\n                const blockWithTxs: any = this.formatter.blockWithTransactions(block);\n                blockWithTxs.transactions = blockWithTxs.transactions.map((tx: TransactionResponse) => this._wrapTransaction(tx));\n                return blockWithTxs;\n            }\n\n            return this.formatter.block(block);\n\n        }, { oncePoll: this });\n    }\n\n    getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block> {\n        return <Promise<Block>>(this._getBlock(blockHashOrBlockTag, false));\n    }\n\n    getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions> {\n        return <Promise<BlockWithTransactions>>(this._getBlock(blockHashOrBlockTag, true));\n    }\n\n    async getTransaction(transactionHash: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransaction\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            const tx = this.formatter.transactionResponse(result);\n\n            if (tx.blockNumber == null) {\n                tx.confirmations = 0;\n\n            } else if (tx.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - tx.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                tx.confirmations = confirmations;\n            }\n\n            return this._wrapTransaction(tx);\n        }, { oncePoll: this });\n    }\n\n    async getTransactionReceipt(transactionHash: string | Promise<string>): Promise<TransactionReceipt> {\n        await this.getNetwork();\n\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransactionReceipt\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            // \"geth-etc\" returns receipts before they are ready\n            if (result.blockHash == null) { return undefined; }\n\n            const receipt = this.formatter.receipt(result);\n\n            if (receipt.blockNumber == null) {\n                receipt.confirmations = 0;\n\n            } else if (receipt.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                receipt.confirmations = confirmations;\n            }\n\n            return receipt;\n        }, { oncePoll: this });\n    }\n\n    async getLogs(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Array<Log>> {\n        await this.getNetwork();\n        const params = await resolveProperties({ filter: this._getFilter(filter) });\n        const logs: Array<Log> = await this.perform(\"getLogs\", params);\n        logs.forEach((log) => {\n            if (log.removed == null) { log.removed = false; }\n        });\n        return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    }\n\n    async getEtherPrice(): Promise<number> {\n        await this.getNetwork();\n        return this.perform(\"getEtherPrice\", { });\n    }\n\n    async _getBlockTag(blockTag: BlockTag | Promise<BlockTag>): Promise<BlockTag> {\n        blockTag = await blockTag;\n\n        if (typeof(blockTag) === \"number\" && blockTag < 0) {\n            if (blockTag % 1) {\n                logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n            }\n\n            let blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            blockNumber += blockTag;\n            if (blockNumber < 0) { blockNumber = 0; }\n            return this.formatter.blockTag(blockNumber)\n        }\n\n        return this.formatter.blockTag(blockTag);\n    }\n\n\n    async getResolver(name: string): Promise<null | Resolver> {\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") { return null; }\n\n            // Optimization since the eth node cannot change and does\n            // not have a wildcard resolver\n            if (name !== \"eth\" && currentName === \"eth\") { return null; }\n\n            // Check the current node for a resolver\n            const addr = await this._getResolver(currentName, \"getResolver\");\n\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new Resolver(this, addr, name);\n\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) { return null; }\n\n                return resolver;\n            }\n\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n\n    }\n\n    async _getResolver(name: string, operation?: string): Promise<string> {\n        if (operation == null) { operation = \"ENS\"; }\n\n        const network = await this.getNetwork();\n\n        // No ENS...\n        if (!network.ensAddress) {\n            logger.throwError(\n                \"network does not support ENS\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { operation, network: network.name }\n            );\n        }\n\n        try {\n            // keccak256(\"resolver(bytes32)\")\n            const addrData = await this.call({\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            });\n            return this.formatter.callAddress(addrData);\n        } catch (error) {\n            // ENS registry cannot throw errors on resolver(bytes32)\n        }\n\n        return null;\n    }\n\n    async resolveName(name: string | Promise<string>): Promise<null | string> {\n        name = await name;\n\n        // If it is already an address, nothing to resolve\n        try {\n            return Promise.resolve(this.formatter.address(name));\n        } catch (error) {\n            // If is is a hexstring, the address is bad (See #694)\n            if (isHexString(name)) { throw error; }\n        }\n\n        if (typeof(name) !== \"string\") {\n            logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n        }\n\n        // Get the addr from the resolver\n        const resolver = await this.getResolver(name);\n        if (!resolver) { return null; }\n\n        return await resolver.getAddress();\n    }\n\n    async lookupAddress(address: string | Promise<string>): Promise<null | string> {\n        address = await address;\n        address = this.formatter.address(address);\n\n        const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n        const resolverAddr = await this._getResolver(node, \"lookupAddress\");\n        if (resolverAddr == null) { return null; }\n\n        // keccak(\"name(bytes32)\")\n        const name = _parseString(await this.call({\n            to: resolverAddr,\n            data: (\"0x691f3431\" + namehash(node).substring(2))\n        }), 0);\n\n        const addr = await this.resolveName(name);\n        if (addr != address) { return null; }\n\n        return name;\n    }\n\n    async getAvatar(nameOrAddress: string): Promise<null | string> {\n        let resolver: Resolver = null;\n        if (isHexString(nameOrAddress)) {\n            // Address; reverse lookup\n            const address = this.formatter.address(nameOrAddress);\n\n            const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n            const resolverAddress = await this._getResolver(node, \"getAvatar\");\n            if (!resolverAddress) { return null; }\n\n            // Try resolving the avatar against the addr.reverse resolver\n            resolver = new Resolver(this, resolverAddress, node);\n            try {\n                const avatar = await resolver.getAvatar();\n                if (avatar) { return avatar.url; }\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n            }\n\n            // Try getting the name and performing forward lookup; allowing wildcards\n            try {\n                // keccak(\"name(bytes32)\")\n                const name = _parseString(await this.call({\n                    to: resolverAddress,\n                    data: (\"0x691f3431\" + namehash(node).substring(2))\n                }), 0);\n                resolver = await this.getResolver(name);\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n                return null;\n            }\n\n        } else {\n            // ENS name; forward lookup with wildcard\n            resolver = await this.getResolver(nameOrAddress);\n            if (!resolver) { return null; }\n        }\n\n        const avatar = await resolver.getAvatar();\n        if (avatar == null) { return null; }\n\n        return avatar.url;\n    }\n\n    perform(method: string, params: any): Promise<any> {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n\n    _startEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _stopEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _addEventListener(eventName: EventType, listener: Listener, once: boolean): this {\n        const event = new Event(getEventTag(eventName), listener, once)\n        this._events.push(event);\n        this._startEvent(event);\n\n        return this;\n    }\n\n    on(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, false);\n    }\n\n    once(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, true);\n    }\n\n\n    emit(eventName: EventType, ...args: Array<any>): boolean {\n        let result = false;\n\n        let stopped: Array<Event> = [ ];\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) { return true; }\n\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n\n            result = true;\n\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n\n            return true;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventType): number {\n        if (!eventName) { return this._events.length; }\n\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n\n    listeners(eventName?: EventType): Array<Listener> {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n\n    off(eventName: EventType, listener?: Listener): this {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n\n        const stopped: Array<Event> = [ ];\n\n        let found = false;\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) { return true; }\n            if (found) { return true; }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n\n    removeAllListeners(eventName?: EventType): this {\n        let stopped: Array<Event> = [ ];\n        if (eventName == null) {\n            stopped = this._events;\n\n            this._events = [ ];\n        } else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) { return true; }\n                stopped.push(event);\n                return false;\n            });\n        }\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4729, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4735, "column": 0}, "map": {"version":3,"file":"json-rpc-provider.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/json-rpc-provider.ts"],"sourcesContent":["\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/JSON-RPC\n\nimport { Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Bytes, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { checkProperties, deepCopy, Deferrable, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { AccessList, accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson, poll } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider, Event } from \"./base-provider\";\n\n\nconst errorGas = [ \"call\", \"estimateGas\" ];\n\nfunction spelunk(value: any, requireData: boolean): null | { message: string, data: null | string } {\n    if (value == null) { return null; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\" && value.message.match(\"reverted\")) {\n        const data = isHexString(value.data) ? value.data: null;\n        if (!requireData || data) {\n            return { message: value.message, data };\n        }\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            const result = spelunk(value[key], requireData);\n            if (result) { return result; }\n        }\n        return null;\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return spelunk(JSON.parse(value), requireData);\n        } catch (error) { }\n    }\n\n    return null;\n}\n\nfunction checkError(method: string, error: any, params: any): any {\n\n    const transaction = params.transaction || params.signedTransaction;\n\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\") {\n        const result = spelunk(error, true);\n        if (result) { return result.data; }\n\n        // Nothing descriptive..\n        logger.throwError(\"missing revert data in call exception; Transaction reverted without a reason string\", Logger.errors.CALL_EXCEPTION, {\n            data: \"0x\", transaction, error\n        });\n    }\n\n    if (method === \"estimateGas\") {\n        // Try to find something, with a preference on SERVER_ERROR body\n        let result = spelunk(error.body, false);\n        if (result == null) { result = spelunk(error, false); }\n\n        // Found \"reverted\", this is a CALL_EXCEPTION\n        if (result) {\n            logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                reason: result.message, method, transaction, error\n            });\n        }\n    }\n\n    // @TODO: Should we spelunk for message too?\n\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof(error.error.message) === \"string\") {\n        message = error.error.message;\n    } else if (typeof(error.body) === \"string\") {\n        message = error.body;\n    } else if (typeof(error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n\n    // \"nonce too low\"\n    if (message.match(/nonce (is )?too low/i)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/i)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nfunction timer(timeout: number): Promise<any> {\n    return new Promise(function(resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\n\nfunction getResult(payload: { error?: { code?: number, data?: any, message?: string }, result?: any }): any {\n    if (payload.error) {\n        // @TODO: not any\n        const error: any = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n\n    return payload.result;\n}\n\nfunction getLowerCase(value: string): string {\n    if (value) { return value.toLowerCase(); }\n    return value;\n}\n\nconst _constructorGuard = {};\n\nexport class JsonRpcSigner extends Signer implements TypedDataSigner {\n    readonly provider: JsonRpcProvider;\n    _index: number;\n    _address: string;\n\n    constructor(constructorGuard: any, provider: JsonRpcProvider, addressOrIndex?: string | number) {\n        super();\n\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n\n        defineReadOnly(this, \"provider\", provider);\n\n        if (addressOrIndex == null) { addressOrIndex = 0; }\n\n        if (typeof(addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n\n        } else if (typeof(addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n\n        } else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n\n    connect(provider: Provider): JsonRpcSigner {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n\n    connectUnchecked(): JsonRpcSigner {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n\n    getAddress(): Promise<string> {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index])\n        });\n    }\n\n    sendUncheckedTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        transaction = shallowCopy(transaction);\n\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) { address = address.toLowerCase(); }\n            return address;\n        });\n\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n        }\n\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            } else {\n                tx.from = sender;\n            }\n\n            const hexTx = (<any>this.provider.constructor).hexlifyTransaction(tx, { from: true });\n\n            return this.provider.send(\"eth_sendTransaction\", [ hexTx ]).then((hash) => {\n                return hash;\n            }, (error) => {\n                if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                    logger.throwError(\"user rejected transaction\", Logger.errors.ACTION_REJECTED, {\n                        action: \"sendTransaction\",\n                        transaction: tx\n                    });\n                }\n\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(transaction);\n\n        try {\n            // Unfortunately, JSON-RPC only provides and opaque transaction hash\n            // for a response, and we need the actual transaction, so we poll\n            // for it; it should show up very quickly\n            return await poll(async () => {\n                const tx = await this.provider.getTransaction(hash);\n                if (tx === null) { return undefined; }\n                return this.provider._wrapTransaction(tx, hash, blockNumber);\n            }, { oncePoll: this.provider });\n        } catch (error) {\n            (<any>error).transactionHash = hash;\n            throw error;\n        }\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n        try {\n            return await this.provider.send(\"personal_sign\", [ hexlify(data), address.toLowerCase() ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"signMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _legacySignMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n        try {\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return await this.provider.send(\"eth_sign\", [ address.toLowerCase(), hexlify(data) ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_legacySignMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names (in-place)\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            return this.provider.resolveName(name);\n        });\n\n        const address = await this.getAddress();\n\n        try {\n            return await this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_signTypedData\",\n                    from: address,\n                    messageData: { domain: populated.domain, types, value: populated.value }\n                });\n            }\n            throw error;\n        }\n    }\n\n    async unlock(password: string): Promise<boolean> {\n        const provider = this.provider;\n\n        const address = await this.getAddress();\n\n        return provider.send(\"personal_unlockAccount\", [ address.toLowerCase(), password, null ]);\n    }\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return <TransactionResponse>{\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations?: number) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n}\n\nexport class JsonRpcProvider extends BaseProvider {\n    readonly connection: ConnectionInfo;\n\n    _pendingFilter: Promise<number>;\n    _nextId: number;\n\n    // During any given event loop, the results for a given call will\n    // all be the same, so we can dedup the calls to save requests and\n    // bandwidth. @TODO: Try out generalizing this against send?\n    _eventLoopCache: Record<string, Promise<any>>;\n    get _cache(): Record<string, Promise<any>> {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = { };\n        }\n        return this._eventLoopCache;\n    }\n\n    constructor(url?: ConnectionInfo | string, network?: Networkish) {\n        let networkOrReady: Networkish | Promise<Network> = network;\n\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Default URL\n        if (!url) { url = getStatic<() => string>(this.constructor, \"defaultUrl\")(); }\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"connection\",Object.freeze({\n                url: url\n            }));\n        } else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n\n        this._nextId = 42;\n    }\n\n    static defaultUrl(): string {\n        return \"http:/\\/localhost:8545\";\n    }\n\n    detectNetwork(): Promise<Network> {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n\n    async _uncachedDetectNetwork(): Promise<Network> {\n        await timer(0);\n\n        let chainId = null;\n        try {\n            chainId = await this.send(\"eth_chainId\", [ ]);\n        } catch (error) {\n            try {\n                chainId = await this.send(\"net_version\", [ ]);\n            } catch (error) { }\n        }\n\n        if (chainId != null) {\n            const getNetwork = getStatic<(network: Networkish) => Network>(this.constructor, \"getNetwork\");\n            try {\n                return getNetwork(BigNumber.from(chainId).toNumber());\n            } catch (error) {\n                return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                    chainId: chainId,\n                    event: \"invalidNetwork\",\n                    serverError: error\n                });\n            }\n        }\n\n        return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            event: \"noNetwork\"\n        });\n    }\n\n    getSigner(addressOrIndex?: string | number): JsonRpcSigner {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n\n    getUncheckedSigner(addressOrIndex?: string | number): UncheckedJsonRpcSigner {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return this.send(\"eth_accounts\", []).then((accounts: Array<string>) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([ \"eth_chainId\", \"eth_blockNumber\" ].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n\n            return result;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n\n            throw error;\n        });\n\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n\n        return result;\n    }\n\n    prepareRequest(method: string, params: any): [ string, Array<any> ] {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [ \"eth_blockNumber\", [] ];\n\n            case \"getGasPrice\":\n                return [ \"eth_gasPrice\", [] ];\n\n            case \"getBalance\":\n                return [ \"eth_getBalance\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getTransactionCount\":\n                return [ \"eth_getTransactionCount\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getCode\":\n                return [ \"eth_getCode\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getStorageAt\":\n                return [ \"eth_getStorageAt\", [ getLowerCase(params.address), hexZeroPad(params.position, 32), params.blockTag ] ];\n\n            case \"sendTransaction\":\n                return [ \"eth_sendRawTransaction\", [ params.signedTransaction ] ]\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [ \"eth_getBlockByNumber\", [ params.blockTag, !!params.includeTransactions ] ];\n                } else if (params.blockHash) {\n                    return [ \"eth_getBlockByHash\", [ params.blockHash, !!params.includeTransactions ] ];\n                }\n                return null;\n\n            case \"getTransaction\":\n                return [ \"eth_getTransactionByHash\", [ params.transactionHash ] ];\n\n            case \"getTransactionReceipt\":\n                return [ \"eth_getTransactionReceipt\", [ params.transactionHash ] ];\n\n            case \"call\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_call\", [ hexlifyTransaction(params.transaction, { from: true }), params.blockTag ] ];\n            }\n\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_estimateGas\", [ hexlifyTransaction(params.transaction, { from: true }) ] ];\n            }\n\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [ \"eth_getLogs\", [ params.filter ] ];\n\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (method === \"call\" || method === \"estimateGas\") {\n            const tx = params.transaction;\n            if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                // If there are no EIP-1559 properties, it might be non-EIP-1559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        params = shallowCopy(params);\n                        params.transaction = shallowCopy(tx);\n                        delete params.transaction.type;\n                    }\n                }\n            }\n        }\n\n        const args = this.prepareRequest(method,  params);\n\n        if (args == null) {\n            logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n        }\n        try {\n            return await this.send(args[0], args[1])\n        } catch (error) {\n            return checkError(method, error, params);\n        }\n    }\n\n    _startEvent(event: Event): void {\n        if (event.tag === \"pending\") { this._startPending(); }\n        super._startEvent(event);\n    }\n\n    _startPending(): void {\n        if (this._pendingFilter != null) { return; }\n        const self = this;\n\n        const pendingFilter: Promise<number> = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n\n        pendingFilter.then(function(filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [ filterId ]).then(function(hashes: Array<string>) {\n                    if (self._pendingFilter != pendingFilter) { return null; }\n\n                    let seq = Promise.resolve();\n                    hashes.forEach(function(hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function() {\n                            return self.getTransaction(hash).then(function(tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n\n                    return seq.then(function() {\n                        return timer(1000);\n                    });\n                }).then(function() {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [ filterId ]);\n                        return;\n                    }\n                    setTimeout(function() { poll(); }, 0);\n\n                    return null;\n                }).catch((error: Error) => { });\n            }\n            poll();\n\n            return filterId;\n        }).catch((error: Error) => { });\n    }\n\n    _stopEvent(event: Event): void {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction: TransactionRequest, allowExtra?: { [key: string]: boolean }): { [key: string]: string | AccessList } {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) { allowed[key] = true; }\n            }\n        }\n\n        checkProperties(transaction, allowed);\n\n        const result: { [key: string]: string | AccessList } = {};\n\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            const value = hexValue(BigNumber.from((<any>transaction)[key]));\n            if (key === \"gasLimit\") { key = \"gas\"; }\n            result[key] = value;\n        });\n\n        [\"from\", \"to\", \"data\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            result[key] = hexlify((<any>transaction)[key]);\n        });\n\n        if ((<any>transaction).accessList) {\n            result[\"accessList\"] = accessListify((<any>transaction).accessList);\n        }\n\n        return result;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5581, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5587, "column": 0}, "map": {"version":3,"file":"alchemy-provider-ffcaaa67.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/alchemy-sdk/src/internal/request-batcher.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/alchemy-sdk/src/api/alchemy-provider.ts"],"sourcesContent":["import { JsonRpcRequest, JsonRpcResponse } from './internal-types';\n\n/** Maximum size of a batch on the rpc provider. */\nconst DEFAULT_MAX_REQUEST_BATCH_SIZE = 100;\n\n/** Timeout interval before the pending batch is sent. */\nconst DEFAULT_REQUEST_BATCH_DELAY_MS = 10;\n\n/**\n * Internal class to enqueue requests and automatically send/process batches.\n *\n * The underlying batching mechanism is loosely based on ethers.js's\n * `JsonRpcBatchProvider`.\n *\n * @internal\n */\nexport class RequestBatcher {\n  /** Timeout timer that periodically sends the pending batch. */\n  private pendingBatchTimer: NodeJS.Timer | undefined;\n\n  /**\n   * Array of enqueued requests along with the constructed promise handlers for\n   * each request.\n   */\n  private pendingBatch: Array<BatchRequest> = [];\n\n  constructor(\n    private readonly sendBatchFn: SendBatchFn,\n    private readonly maxBatchSize = DEFAULT_MAX_REQUEST_BATCH_SIZE\n  ) {}\n\n  /**\n   * Enqueues the provided request. The batch is immediately sent if the maximum\n   * batch size is reached. Otherwise, the request is enqueued onto a batch that\n   * is sent after 10ms.\n   *\n   * Returns a promise that resolves with the result of the request.\n   */\n  async enqueueRequest(request: JsonRpcRequest): Promise<any> {\n    const inflightRequest: BatchRequest = {\n      request,\n      resolve: undefined,\n      reject: undefined\n    };\n\n    const promise = new Promise((resolve, reject) => {\n      inflightRequest.resolve = resolve;\n      inflightRequest.reject = reject;\n    });\n\n    this.pendingBatch.push(inflightRequest);\n\n    if (this.pendingBatch.length === this.maxBatchSize) {\n      // Send batch immediately if we are at the maximum batch size.\n      void this.sendBatchRequest();\n    } else if (!this.pendingBatchTimer) {\n      // Schedule batch for next event loop + short duration\n      this.pendingBatchTimer = setTimeout(\n        () => this.sendBatchRequest(),\n        DEFAULT_REQUEST_BATCH_DELAY_MS\n      );\n    }\n\n    return promise;\n  }\n\n  /**\n   * Sends the currently queued batches and resets the batch and timer. Processes\n   * the batched response results back to the original promises.\n   */\n  private async sendBatchRequest(): Promise<void> {\n    // Get the current batch and clear it, so new requests\n    // go into the next batch\n    const batch = this.pendingBatch;\n    this.pendingBatch = [];\n    if (this.pendingBatchTimer) {\n      clearTimeout(this.pendingBatchTimer);\n      this.pendingBatchTimer = undefined;\n    }\n\n    // Get the request as an array of requests\n    const request = batch.map(inflight => inflight.request);\n\n    return this.sendBatchFn(request).then(\n      result => {\n        // For each result, feed it to the correct Promise, depending\n        // on whether it was a success or error\n        batch.forEach((inflightRequest, index) => {\n          const payload = result[index];\n          if (payload.error) {\n            const error = new Error(payload.error.message);\n            (error as any).code = payload.error.code;\n            (error as any).data = payload.error.data;\n            inflightRequest.reject!(error);\n          } else {\n            inflightRequest.resolve!(payload.result);\n          }\n        });\n      },\n      error => {\n        batch.forEach(inflightRequest => {\n          inflightRequest.reject!(error);\n        });\n      }\n    );\n  }\n}\n\n/** Function type to match the `fetchJson` function in ethers. */\ntype SendBatchFn = (reqs: JsonRpcRequest[]) => Promise<JsonRpcResponse[]>;\n\n/**\n * Internal interface to represent a request on a batch along with the promises to resolve it.\n */\ninterface BatchRequest {\n  request: JsonRpcRequest;\n  resolve?: (result: any) => void;\n  reject?: (error: Error) => void;\n}\n","import {\n  Network as NetworkFromEthers,\n  Networkish,\n  getNetwork as getNetworkFromEthers\n} from '@ethersproject/networks';\nimport { deepCopy } from '@ethersproject/properties';\nimport {\n  CommunityResourcable,\n  JsonRpcProvider\n} from '@ethersproject/providers';\nimport { ConnectionInfo, fetchJson } from '@ethersproject/web';\n\nimport { JsonRpcRequest, JsonRpcResponse } from '../internal/internal-types';\nimport { RequestBatcher } from '../internal/request-batcher';\nimport { Network } from '../types/types';\nimport {\n  CustomNetworks,\n  DEFAULT_ALCHEMY_API_KEY,\n  DEFAULT_NETWORK,\n  EthersNetwork,\n  getAlchemyHttpUrl,\n  getAlchemyWsUrl\n} from '../util/const';\nimport { logWarn } from '../util/logger';\nimport { IS_BROWSER } from '../util/util';\nimport { VERSION } from '../version';\nimport { AlchemyConfig } from './alchemy-config';\n\n/**\n * SDK's custom implementation of ethers.js's 'AlchemyProvider'.\n *\n * Do not call this constructor directly. Instead, instantiate an instance of\n * {@link Alchemy} and call {@link Alchemy.config.getProvider()}.\n *\n * @public\n */\nexport class AlchemyProvider\n  extends JsonRpcProvider\n  implements CommunityResourcable\n{\n  readonly apiKey: string;\n  readonly maxRetries: number;\n  readonly batchRequests: boolean;\n\n  /**\n   * VISIBLE ONLY FOR TESTING\n   *@internal\n   */\n  readonly batcher: RequestBatcher;\n\n  /** @internal */\n  constructor(config: AlchemyConfig) {\n    // Normalize the API Key to a string.\n    const apiKey = AlchemyProvider.getApiKey(config.apiKey);\n\n    // Generate our own connection info with the correct endpoint URLs.\n    const alchemyNetwork = AlchemyProvider.getAlchemyNetwork(config.network);\n    let connection = AlchemyProvider.getAlchemyConnectionInfo(\n      alchemyNetwork,\n      apiKey,\n      'http'\n    );\n\n    // If a hardcoded url was specified in the config, use that instead of the\n    // provided apiKey or network.\n    if (config.url !== undefined) {\n      connection.url = config.url;\n    }\n\n    connection.throttleLimit = config.maxRetries;\n\n    // Add user provided overrides if they exist.\n    if (config.connectionInfoOverrides) {\n      connection = {\n        ...connection,\n        ...config.connectionInfoOverrides\n      };\n    }\n\n    // Normalize the Alchemy named network input to the network names used by\n    // ethers. This allows the parent super constructor in JsonRpcProvider to\n    // correctly set the network.\n    const ethersNetwork = EthersNetwork[alchemyNetwork];\n    super(connection, ethersNetwork);\n\n    this.apiKey = config.apiKey;\n    this.maxRetries = config.maxRetries;\n    this.batchRequests = config.batchRequests;\n\n    // TODO: support individual headers when calling batch\n    const batcherConnection = {\n      ...this.connection,\n      headers: {\n        ...this.connection.headers,\n        'Alchemy-Ethers-Sdk-Method': 'batchSend'\n      }\n    };\n    const sendBatchFn = (\n      requests: JsonRpcRequest[]\n    ): Promise<JsonRpcResponse[]> => {\n      return fetchJson(batcherConnection, JSON.stringify(requests));\n    };\n    this.batcher = new RequestBatcher(sendBatchFn);\n\n    this.modifyFormatter();\n  }\n\n  /**\n   * Overrides the `UrlJsonRpcProvider.getApiKey` method as implemented by\n   * ethers.js. Returns the API key for an Alchemy provider.\n   *\n   * @internal\n   * @override\n   */\n  static getApiKey(apiKey: any): string {\n    if (apiKey == null) {\n      return DEFAULT_ALCHEMY_API_KEY;\n    }\n    if (apiKey && typeof apiKey !== 'string') {\n      throw new Error(\n        `Invalid apiKey '${apiKey}' provided. apiKey must be a string.`\n      );\n    }\n    return apiKey;\n  }\n\n  /**\n   * Overrides the `BaseProvider.getNetwork` method as implemented by ethers.js.\n   *\n   * This override allows the SDK to set the provider's network to values not\n   * yet supported by ethers.js.\n   *\n   * @internal\n   * @override\n   */\n  static getNetwork(network: Networkish): NetworkFromEthers {\n    if (typeof network === 'string' && network in CustomNetworks) {\n      return CustomNetworks[network];\n    }\n\n    // Call the standard ethers.js getNetwork method for other networks.\n    return getNetworkFromEthers(network);\n  }\n\n  /**\n   * Converts the `Networkish` input to the network enum used by Alchemy.\n   *\n   * @internal\n   */\n  static getAlchemyNetwork(network?: Networkish): Network {\n    if (network === undefined) {\n      return DEFAULT_NETWORK;\n    }\n\n    if (typeof network === 'number') {\n      throw new Error(\n        `Invalid network '${network}' provided. Network must be a string.`\n      );\n    }\n\n    // Guaranteed that `typeof network === 'string`.\n    const isValidNetwork = Object.values(Network).includes(network as Network);\n    if (!isValidNetwork) {\n      throw new Error(\n        `Invalid network '${network}' provided. Network must be one of: ` +\n          `${Object.values(Network).join(', ')}.`\n      );\n    }\n    return network as Network;\n  }\n\n  /**\n   * Returns a {@link ConnectionInfo} object compatible with ethers that contains\n   * the correct URLs for Alchemy.\n   *\n   * @internal\n   */\n  static getAlchemyConnectionInfo(\n    network: Network,\n    apiKey: string,\n    type: 'wss' | 'http'\n  ): ConnectionInfo {\n    const url =\n      type === 'http'\n        ? getAlchemyHttpUrl(network, apiKey)\n        : getAlchemyWsUrl(network, apiKey);\n    return {\n      headers: IS_BROWSER\n        ? {\n            'Alchemy-Ethers-Sdk-Version': VERSION\n          }\n        : {\n            'Alchemy-Ethers-Sdk-Version': VERSION,\n            'Accept-Encoding': 'gzip'\n          },\n      allowGzip: true,\n      url\n    };\n  }\n\n  /**\n   * Overrides the method in ethers.js's `StaticJsonRpcProvider` class. This\n   * method is called when calling methods on the parent class `BaseProvider`.\n   *\n   * @override\n   */\n  async detectNetwork(): Promise<NetworkFromEthers> {\n    let network = this.network;\n    if (network == null) {\n      network = await super.detectNetwork();\n\n      if (!network) {\n        throw new Error('No network detected');\n      }\n    }\n    return network;\n  }\n\n  _startPending(): void {\n    logWarn('WARNING: Alchemy Provider does not support pending filters');\n  }\n\n  /**\n   * Overrides the ether's `isCommunityResource()` method. Returns true if the\n   * current api key is the default key.\n   *\n   * @override\n   */\n  isCommunityResource(): boolean {\n    return this.apiKey === DEFAULT_ALCHEMY_API_KEY;\n  }\n\n  /**\n   * Overrides the base {@link JsonRpcProvider.send} method to implement custom\n   * logic for sending requests to Alchemy.\n   *\n   * @param method The method name to use for the request.\n   * @param params The parameters to use for the request.\n   * @override\n   * @public\n   */\n  // TODO: Add headers for `perform()` override.\n  send(method: string, params: Array<any>): Promise<any> {\n    return this._send(method, params, 'send');\n  }\n\n  /**\n   * DO NOT MODIFY.\n   *\n   * Original code copied over from ether.js's `JsonRpcProvider.send()`.\n   *\n   * This method is copied over directly in order to implement custom headers\n   *\n   * @internal\n   */\n  _send(\n    method: string,\n    params: Array<any>,\n    methodName: string,\n    forceBatch = false\n  ): Promise<any> {\n    const request = {\n      method,\n      params,\n      id: this._nextId++,\n      jsonrpc: '2.0'\n    };\n\n    // START MODIFIED CODE\n    const connection = { ...this.connection };\n    connection.headers!['Alchemy-Ethers-Sdk-Method'] = methodName;\n\n    if (this.batchRequests || forceBatch) {\n      return this.batcher.enqueueRequest(request as JsonRpcRequest);\n    }\n    // END MODIFIED CODE\n\n    this.emit('debug', {\n      action: 'request',\n      request: deepCopy(request),\n      provider: this\n    });\n\n    // We can expand this in the future to any call, but for now these\n    // are the biggest wins and do not require any serializing parameters.\n    const cache = ['eth_chainId', 'eth_blockNumber'].indexOf(method) >= 0;\n    if (cache && this._cache[method]) {\n      return this._cache[method];\n    }\n\n    const result = fetchJson(\n      this.connection,\n      JSON.stringify(request),\n      getResult\n    ).then(\n      result => {\n        this.emit('debug', {\n          action: 'response',\n          request,\n          response: result,\n          provider: this\n        });\n\n        return result;\n      },\n      error => {\n        this.emit('debug', {\n          action: 'response',\n          error,\n          request,\n          provider: this\n        });\n\n        throw error;\n      }\n    );\n\n    // Cache the fetch, but clear it on the next event loop\n    if (cache) {\n      this._cache[method] = result;\n      setTimeout(() => {\n        // @ts-ignore - This is done by ethers.\n        this._cache[method] = null;\n      }, 0);\n    }\n\n    return result;\n  }\n\n  /**\n   * Overrides the base `Formatter` class inherited from ethers to support\n   * returning custom fields in Ethers response types.\n   *\n   * For context, ethers has a `Formatter` class that is used to format the\n   * response from a JSON-RPC request. Any fields that are not defined in the\n   * `Formatter` class are removed from the returned response. By modifying the\n   * `Formatter` class in this method, we can add support for fields that are\n   * not defined in ethers.\n   */\n  private modifyFormatter(): void {\n    this.formatter.formats['receiptLog']['removed'] = val => {\n      if (typeof val === 'boolean') {\n        return val;\n      }\n      return undefined;\n    };\n  }\n}\n\n/**\n * DO NOT MODIFY.\n *\n * Original code copied over from ether.js's\n * `@ethersproject/web/src.ts/index.ts`. Used to support\n * {@link AlchemyProvider._send}, which is also copied over.\n */\nfunction getResult(payload: {\n  error?: { code?: number; data?: any; message?: string };\n  result?: any;\n}): any {\n  if (payload.error) {\n    const error: any = new Error(payload.error.message);\n    error.code = payload.error.code;\n    error.data = payload.error.data;\n    throw error;\n  }\n\n  return payload.result;\n}\n"],"names":["getNetworkFromEthers"],"mappings":"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","ignoreList":[0,1]}},
    {"offset": {"line": 5940, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5946, "column": 0}, "map": {"version":3,"file":"ws.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/browser-ws.ts"],"sourcesContent":["\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nlet WS: any = null;\n\ntry {\n    WS = (WebSocket as any);\n    if (WS == null) { throw new Error(\"inject please\"); }\n} catch (error) {\n    const logger = new Logger(version);\n    WS = function() {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    }\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n"],"names":[],"mappings":";;;AAEA,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAHrC,YAAY,CAAC;;;AAKb,IAAI,EAAE,GAAQ,IAAI,CAAC;AAEnB,IAAI;IACA,EAAE,GAAI,SAAiB,CAAC;IACxB,IAAI,EAAE,IAAI,IAAI,EAAE;QAAE,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;KAAE;CACxD,CAAC,OAAO,KAAK,EAAE;IACZ,MAAM,MAAM,GAAG,IAAI,6KAAM,2KAAC,UAAO,CAAC,CAAC;IACnC,EAAE,GAAG;QACD,MAAM,CAAC,UAAU,CAAC,8CAA8C,sKAAE,SAAM,CAAC,MAAM,CAAC,qBAAqB,EAAE;YACnG,SAAS,EAAE,iBAAiB;SAC/B,CAAC,CAAC;IACP,CAAC,CAAA;CACJ","ignoreList":[0]}},
    {"offset": {"line": 5970, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5976, "column": 0}, "map": {"version":3,"file":"websocket-provider.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/websocket-provider.ts"],"sourcesContent":["\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Event } from \"./base-provider\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\n\nlet NextId = 1;\n\nexport type InflightRequest = {\n     callback: (error: Error, result: any) => void;\n     payload: string;\n};\n\nexport type Subscription = {\n    tag: string;\n    processFunc: (payload: any) => void;\n};\n\nexport interface WebSocketLike {\n    onopen: ((...args: Array<any>) => any) | null;\n    onmessage: ((...args: Array<any>) => any) | null;\n    onerror: ((...args: Array<any>) => any) | null;\n\n    readyState: number;\n\n    send(payload: any): void;\n    close(code?: number, reason?: string): void;\n}\n\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\n\nexport class WebSocketProvider extends JsonRpcProvider {\n    readonly _websocket: any;\n    readonly _requests: { [ name: string ]: InflightRequest };\n    readonly _detectNetwork: Promise<Network>;\n\n    // Maps event tag to subscription ID (we dedupe identical events)\n    readonly _subIds: { [ tag: string ]: Promise<string> };\n\n    // Maps Subscription ID to Subscription\n    readonly _subs: { [ name: string ]: Subscription };\n\n    _wsReady: boolean;\n\n    constructor(url: string | WebSocketLike, network?: Networkish) {\n\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n\n        if (typeof(url) === \"string\") {\n            super(url, network);\n        } else {\n            super(\"_websocket\", network);\n        }\n\n        this._pollingInterval = -1;\n\n        this._wsReady = false;\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        } else {\n            defineReadOnly(this, \"_websocket\", url);\n        }\n\n        defineReadOnly(this, \"_requests\", { });\n        defineReadOnly(this, \"_subs\", { });\n        defineReadOnly(this, \"_subIds\", { });\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n\n        // Stall sending requests until the socket is open...\n        this.websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this.websocket.send(this._requests[id].payload);\n            });\n        };\n\n        this.websocket.onmessage = (messageEvent: { data: string }) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n\n                } else {\n                    let error: Error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(<any>error, \"code\", result.error.code || null);\n                        defineReadOnly(<any>error, \"response\", data);\n                    } else {\n                        error = new Error(\"unknown error\");\n                    }\n\n                    request.callback(error, undefined);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n\n                }\n\n            } else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result)\n                }\n\n            } else {\n                console.warn(\"this should not happen\");\n            }\n        };\n\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) { fauxPoll.unref(); }\n    }\n\n    // Cannot narrow the type of _websocket, as that is not backwards compatible\n    // so we add a getter and let the WebSocket be a public API.\n    get websocket(): WebSocketLike { return this._websocket; }\n\n    detectNetwork(): Promise<Network> {\n        return this._detectNetwork;\n    }\n\n    get pollingInterval(): number {\n        return 0;\n    }\n\n    resetEventsBlock(blockNumber: number): void {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n\n    set pollingInterval(value: number) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n\n    async poll(): Promise<void> {\n        return null;\n    }\n\n    set polling(value: boolean) {\n        if (!value) { return; }\n\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n\n    send(method: string, params?: Array<any>): Promise<any> {\n        const rid = NextId++;\n\n        return new Promise((resolve, reject) => {\n            function callback(error: Error, result: any) {\n                if (error) { return reject(error); }\n                return resolve(result);\n            }\n\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n\n            this._requests[String(rid)] = { callback, payload };\n\n            if (this._wsReady) { this.websocket.send(payload); }\n        });\n    }\n\n    static defaultUrl(): string {\n        return \"ws:/\\/localhost:8546\";\n    }\n\n    async _subscribe(tag: string, param: Array<any>, processFunc: (result: any) => void): Promise<void> {\n        let subIdPromise = this._subIds[tag];\n        if (subIdPromise == null) {\n            subIdPromise = Promise.all(param).then((param) => {\n                return this.send(\"eth_subscribe\", param);\n            });\n            this._subIds[tag] = subIdPromise;\n        }\n        const subId = await subIdPromise;\n        this._subs[subId] = { tag, processFunc };\n    }\n\n    _startEvent(event: Event): void {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [ \"newHeads\" ], (result: any) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n\n            case \"pending\":\n                this._subscribe(\"pending\", [ \"newPendingTransactions\" ], (result: any) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n\n            case \"filter\":\n                this._subscribe(event.tag, [ \"logs\", this._getFilter(event.filter) ], (result: any) => {\n                    if (result.removed == null) { result.removed = false; }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n\n            case \"tx\": {\n                const emitReceipt = (event: Event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) { return; }\n                        this.emit(hash, receipt);\n                    });\n                };\n\n                // In case it is already mined\n                emitReceipt(event);\n\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [ \"newHeads\" ], (result: any) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n\n    _stopEvent(event: Event): void {\n        let tag = event.tag;\n\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        } else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n\n        const subId = this._subIds[tag];\n        if (!subId) { return; }\n\n       delete this._subIds[tag];\n       subId.then((subId) => {\n            if (!this._subs[subId]) { return; }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [ subId ]);\n        });\n    }\n\n    async destroy(): Promise<void> {\n        // Wait until we have connected before trying to disconnect\n        if (this.websocket.readyState === WebSocket.CONNECTING) {\n            await (new Promise((resolve) => {\n                this.websocket.onopen = function() {\n                    resolve(true);\n                };\n\n                this.websocket.onerror = function() {\n                    resolve(false);\n                };\n            }));\n        }\n\n        // Hangup\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n        this.websocket.close(1000);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6311, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6316, "column": 0}, "map": {"version":3,"sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/es5-ext/global.js"],"sourcesContent":["var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n"],"names":[],"mappings":"AAAA,IAAI,gBAAgB;IACnB,IAAI,OAAO,SAAS,YAAY,MAAM,OAAO;IAC7C,IAAI,OAAO,WAAW,YAAY,QAAQ,OAAO;IACjD,MAAM,IAAI,MAAM;AACjB;AAEA,OAAO,OAAO,GAAG,AAAC;IACjB,IAAI,IAAI,EAAE,OAAO,IAAI;IAErB,sEAAsE;IAEtE,+CAA+C;IAC/C,IAAI,OAAO,eAAe,YAAY,YAAY,OAAO;IAEzD,qEAAqE;IACrE,mEAAmE;IACnE,qDAAqD;IACrD,IAAI;QACH,OAAO,cAAc,CAAC,OAAO,SAAS,EAAE,cAAc;YACrD,KAAK;gBAAc,OAAO,IAAI;YAAE;YAChC,cAAc;QACf;IACD,EAAE,OAAO,OAAO;QACf,mEAAmE;QACnE,wCAAwC;QACxC,OAAO;IACR;IACA,IAAI;QACH,iEAAiE;QACjE,IAAI,CAAC,YAAY,OAAO;QACxB,OAAO;IACR,SAAU;QACT,OAAO,OAAO,SAAS,CAAC,UAAU;IACnC;AACD","ignoreList":[0]}},
    {"offset": {"line": 6349, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6359, "column": 0}, "map": {"version":3,"sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/websocket/lib/version.js"],"sourcesContent":["module.exports = require('../package.json').version;\n"],"names":[],"mappings":"AAAA,OAAO,OAAO,GAAG,8EAA2B,OAAO","ignoreList":[0]}},
    {"offset": {"line": 6360, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6365, "column": 0}, "map": {"version":3,"sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/websocket/lib/browser.js"],"sourcesContent":["var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n"],"names":[],"mappings":"AAAA,IAAI;AACJ,IAAI,OAAO,eAAe,UAAU;IACnC,cAAc;AACf,OAAO;IACN,IAAI;QACH;IACD,EAAE,OAAO,OAAO,CAChB,SAAU;QACT,IAAI,CAAC,eAAe,OAAO,WAAW,aAAa;YAAE,cAAc;QAAQ;QAC3E,IAAI,CAAC,aAAa;YAAE,MAAM,IAAI,MAAM;QAAoC;IACzE;AACD;AAEA,IAAI,kBAAkB,YAAY,SAAS,IAAI,YAAY,YAAY;AACvE,IAAI;AAGJ;;CAEC,GACD,SAAS,aAAa,GAAG,EAAE,SAAS;IACnC,IAAI;IAEJ,IAAI,WAAW;QACd,kBAAkB,IAAI,gBAAgB,KAAK;IAC5C,OACK;QACJ,kBAAkB,IAAI,gBAAgB;IACvC;IAEA;;;;;;EAMC,GACD,OAAO;AACR;AACA,IAAI,iBAAiB;IACpB;QAAC;QAAc;QAAQ;QAAW;KAAS,CAAC,OAAO,CAAC,SAAS,IAAI;QAChE,OAAO,cAAc,CAAC,cAAc,MAAM;YACzC,KAAK;gBAAa,OAAO,eAAe,CAAC,KAAK;YAAE;QACjD;IACD;AACD;AAEA;;CAEC,GACD,OAAO,OAAO,GAAG;IACb,gBAAiB,kBAAkB,eAAe;IAClD,WAAiB;AACrB","ignoreList":[0]}},
    {"offset": {"line": 6419, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6425, "column": 0}, "map": {"version":3,"file":"alchemy-websocket-provider-c488fef1.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/alchemy-sdk/src/internal/websocket-backfiller.ts","file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/alchemy-sdk/src/api/alchemy-websocket-provider.ts"],"sourcesContent":["import { AlchemyWebSocketProvider } from '../api/alchemy-websocket-provider';\nimport { fromHex, toHex } from '../api/util';\n\nexport interface BatchPart {\n  method: string;\n  params?: any;\n}\n\nexport interface NewHeadsEvent {\n  author: string;\n  difficulty: string;\n  extraData: string;\n  gasLimit: string;\n  gasUsed: string;\n  hash: string;\n  logsBloom: string;\n  miner: string;\n  mixHash: string;\n  nonce: string;\n  number: string;\n  parentHash: string;\n  receiptsRoot: string;\n  sealFields: string[];\n  sha3Uncles: string;\n  size: string;\n  stateRoot: string;\n  timestamp: string;\n  transactionsRoot: string;\n}\n\n/** The return type of eth_getBlocksByHash. */\nexport interface BlockHead extends NewHeadsEvent {\n  totalDifficulty: string;\n  transactions: any[];\n  uncles: string[];\n}\n\nexport interface LogsEvent {\n  address: string;\n  blockHash: string;\n  blockNumber: string;\n  data: string;\n  logIndex: string;\n  topics: string[];\n  transactionHash: string;\n  transactionIndex: string;\n  removed?: boolean;\n}\n\nexport interface LogsSubscriptionFilter {\n  address?: string | string[];\n  topics?: Array<string | string[] | null>;\n}\n\nexport interface GetLogsOptions extends LogsSubscriptionFilter {\n  fromBlock?: string;\n  toBlock?: string;\n}\n\ninterface CommonAncestor {\n  blockNumber: number;\n  logIndex: number;\n}\n\n/**\n * The maximum number of blocks to backfill. If more than this many blocks have\n * been missed, then we'll sadly miss data, but we want to make sure we don't\n * end up requesting thousands of blocks if somebody left their laptop closed for a week.\n */\nconst MAX_BACKFILL_BLOCKS = 120;\n\n/**\n * The WebsocketBackfiller fetches events that were sent since a provided block\n * number. This is used in the {@link AlchemyWebSocketProvider} to backfill\n * events that were transmitted while the websocket connection was down.\n *\n * The backfiller backfills two main eth_subscribe events: `logs` and `newHeads`.\n *\n * @internal\n */\nexport class WebsocketBackfiller {\n  // TODO: Use HTTP provider to do backfill.\n  private maxBackfillBlocks = MAX_BACKFILL_BLOCKS;\n  constructor(private readonly provider: AlchemyWebSocketProvider) {}\n\n  /**\n   * Runs backfill for `newHeads` events.\n   *\n   * @param isCancelled Whether the backfill request is cancelled.\n   * @param previousHeads Previous head requests that were sent.\n   * @param fromBlockNumber The block number to start backfilling from.\n   * @returns A list of `newHeads` events that were sent since the last backfill.\n   */\n  async getNewHeadsBackfill(\n    isCancelled: () => boolean,\n    previousHeads: NewHeadsEvent[],\n    fromBlockNumber: number\n  ): Promise<NewHeadsEvent[]> {\n    throwIfCancelled(isCancelled);\n    const toBlockNumber = await this.getBlockNumber();\n    throwIfCancelled(isCancelled);\n\n    // If there are no previous heads to fetch, return new heads since\n    // `fromBlockNumber`, or up to maxBackfillBlocks from the current head.\n    if (previousHeads.length === 0) {\n      return this.getHeadEventsInRange(\n        Math.max(fromBlockNumber, toBlockNumber - this.maxBackfillBlocks) + 1,\n        toBlockNumber + 1\n      );\n    }\n\n    // If the last emitted event is too far back in the past, there's no need\n    // to backfill for reorgs. Just fetch the last `maxBackfillBlocks` worth of\n    // new heads.\n    const lastSeenBlockNumber = fromHex(\n      previousHeads[previousHeads.length - 1].number\n    );\n    const minBlockNumber = toBlockNumber - this.maxBackfillBlocks + 1;\n    if (lastSeenBlockNumber <= minBlockNumber) {\n      return this.getHeadEventsInRange(minBlockNumber, toBlockNumber + 1);\n    }\n\n    // To capture all `newHeads` events, return all head events from the last\n    // seen block number to current + any of the previous heads that were re-orged.\n    const reorgHeads: NewHeadsEvent[] = await this.getReorgHeads(\n      isCancelled,\n      previousHeads\n    );\n    throwIfCancelled(isCancelled);\n    const intermediateHeads: NewHeadsEvent[] = await this.getHeadEventsInRange(\n      lastSeenBlockNumber + 1,\n      toBlockNumber + 1\n    );\n    throwIfCancelled(isCancelled);\n    return [...reorgHeads, ...intermediateHeads];\n  }\n\n  /**\n   * Runs backfill for `logs` events.\n   *\n   * @param isCancelled Whether the backfill request is cancelled.\n   * @param filter The filter object that accompanies a logs subscription.\n   * @param previousLogs Previous log requests that were sent.\n   * @param fromBlockNumber The block number to start backfilling from.\n   */\n  async getLogsBackfill(\n    isCancelled: () => boolean,\n    filter: LogsSubscriptionFilter,\n    previousLogs: LogsEvent[],\n    fromBlockNumber: number\n  ): Promise<LogsEvent[]> {\n    throwIfCancelled(isCancelled);\n    const toBlockNumber = await this.getBlockNumber();\n    throwIfCancelled(isCancelled);\n\n    // If there are no previous logs to fetch, return new logs since\n    // `fromBlockNumber`, or up to `maxBackfillBlocks` from the current head.\n    if (previousLogs.length === 0) {\n      return this.getLogsInRange(\n        filter,\n        Math.max(fromBlockNumber, toBlockNumber - this.maxBackfillBlocks) + 1,\n        toBlockNumber + 1\n      );\n    }\n\n    // If the last emitted log is too far back in the past, there's no need\n    // to backfill for removed logs. Just fetch the last `maxBackfillBlocks`\n    // worth of logs.\n    const lastSeenBlockNumber = fromHex(\n      previousLogs[previousLogs.length - 1].blockNumber\n    );\n    const minBlockNumber = toBlockNumber - this.maxBackfillBlocks + 1;\n    if (lastSeenBlockNumber < minBlockNumber) {\n      return this.getLogsInRange(filter, minBlockNumber, toBlockNumber + 1);\n    }\n\n    // Return all log events that have happened along with log events that have\n    // been removed due to a chain reorg.\n    const commonAncestor = await this.getCommonAncestor(\n      isCancelled,\n      previousLogs\n    );\n    throwIfCancelled(isCancelled);\n\n    // All previous logs with a block number greater than the common ancestor\n    // were part of a re-org, so mark them as such.\n    const removedLogs = previousLogs\n      .filter(log => fromHex(log.blockNumber) > commonAncestor.blockNumber)\n      .map(log => ({ ...log, removed: true }));\n\n    // If no common ancestor was found, start backfill from the oldest log's\n    // block number.\n    const fromBlockInclusive =\n      commonAncestor.blockNumber === Number.NEGATIVE_INFINITY\n        ? fromHex(previousLogs[0].blockNumber)\n        : commonAncestor.blockNumber;\n    let addedLogs = await this.getLogsInRange(\n      filter,\n      fromBlockInclusive,\n      toBlockNumber + 1\n    );\n\n    // De-dupe any logs that were already emitted.\n    addedLogs = addedLogs.filter(\n      log =>\n        log &&\n        (fromHex(log.blockNumber) > commonAncestor.blockNumber ||\n          fromHex(log.logIndex) > commonAncestor.logIndex)\n    );\n\n    throwIfCancelled(isCancelled);\n    return [...removedLogs, ...addedLogs];\n  }\n\n  /**\n   * Sets a new max backfill blocks. VISIBLE ONLY FOR TESTING.\n   *\n   * @internal\n   */\n  setMaxBackfillBlock(newMax: number): void {\n    this.maxBackfillBlocks = newMax;\n  }\n\n  /**\n   * Gets the current block number as a number.\n   *\n   * @private\n   */\n  private async getBlockNumber(): Promise<number> {\n    const blockNumberHex: string = await this.provider.send('eth_blockNumber');\n    return fromHex(blockNumberHex);\n  }\n\n  /**\n   * Gets all `newHead` events in the provided range. Note that the returned\n   * heads do not include re-orged heads. Use {@link getReorgHeads} to find heads\n   * that were part of a re-org.\n   *\n   * @private\n   */\n  private async getHeadEventsInRange(\n    fromBlockInclusive: number,\n    toBlockExclusive: number\n  ): Promise<NewHeadsEvent[]> {\n    if (fromBlockInclusive >= toBlockExclusive) {\n      return [];\n    }\n    const batchParts: BatchPart[] = [];\n    for (let i = fromBlockInclusive; i < toBlockExclusive; i++) {\n      batchParts.push({\n        method: 'eth_getBlockByNumber',\n        params: [toHex(i), false]\n      });\n    }\n\n    // TODO: handle errors\n    const blockHeads = await this.provider.sendBatch(batchParts);\n    return blockHeads.map(toNewHeadsEvent);\n  }\n\n  /**\n   * Returns all heads that were part of a reorg event.\n   *\n   * @private\n   */\n  private async getReorgHeads(\n    isCancelled: () => boolean,\n    previousHeads: NewHeadsEvent[]\n  ): Promise<NewHeadsEvent[]> {\n    const result: NewHeadsEvent[] = [];\n    // Iterate from the most recent head backwards in order to find the first\n    // block that was part of a re-org.\n    for (let i = previousHeads.length - 1; i >= 0; i--) {\n      const oldEvent = previousHeads[i];\n      const blockHead = await this.getBlockByNumber(fromHex(oldEvent.number));\n      throwIfCancelled(isCancelled);\n\n      // If the hashes match, then current head in the iteration was not re-orged.\n      if (oldEvent.hash === blockHead.hash) {\n        break;\n      }\n\n      result.push(toNewHeadsEvent(blockHead));\n    }\n    return result.reverse();\n  }\n\n  /**\n   * Simple wrapper around `eth_getBlockByNumber` that returns the complete\n   * block information for the provided block number.\n   *\n   * @private\n   */\n  private async getBlockByNumber(blockNumber: number): Promise<BlockHead> {\n    return this.provider.send('eth_getBlockByNumber', [\n      toHex(blockNumber),\n      false\n    ]);\n  }\n\n  /**\n   * Given a list of previous log events, finds the common block number from the\n   * logs that matches the block head.\n   *\n   * This can be used to identify which logs are part of a re-org.\n   *\n   * Returns 1 less than the oldest log's block number if no common ancestor was found.\n   *\n   * @private\n   */\n  private async getCommonAncestor(\n    isCancelled: () => boolean,\n    previousLogs: LogsEvent[]\n  ): Promise<CommonAncestor> {\n    // Iterate from the most recent head backwards in order to find the first\n    // block that was part of a re-org.\n    let blockHead = await this.getBlockByNumber(\n      fromHex(previousLogs[previousLogs.length - 1].blockNumber)\n    );\n    throwIfCancelled(isCancelled);\n    for (let i = previousLogs.length - 1; i >= 0; i--) {\n      const oldLog = previousLogs[i];\n\n      // Ensure that updated blocks are fetched every time the log's block number\n      // changes.\n      if (oldLog.blockNumber !== blockHead.number) {\n        blockHead = await this.getBlockByNumber(fromHex(oldLog.blockNumber));\n      }\n\n      // Since logs are ordered in ascending order, the first log that matches\n      // the hash should be the largest logIndex.\n      if (oldLog.blockHash === blockHead.hash) {\n        return {\n          blockNumber: fromHex(oldLog.blockNumber),\n          logIndex: fromHex(oldLog.logIndex)\n        };\n      }\n    }\n    return {\n      blockNumber: Number.NEGATIVE_INFINITY,\n      logIndex: Number.NEGATIVE_INFINITY\n    };\n  }\n\n  /**\n   * Gets all `logs` events in the provided range. Note that the returned logs\n   * do not include removed logs.\n   *\n   * @private\n   */ private async getLogsInRange(\n    filter: LogsSubscriptionFilter,\n    fromBlockInclusive: number,\n    toBlockExclusive: number\n  ): Promise<LogsEvent[]> {\n    if (fromBlockInclusive >= toBlockExclusive) {\n      return [];\n    }\n    const rangeFilter: GetLogsOptions = {\n      ...filter,\n      fromBlock: toHex(fromBlockInclusive),\n      toBlock: toHex(toBlockExclusive - 1)\n    };\n    return this.provider.send('eth_getLogs', [rangeFilter]);\n  }\n}\n\nfunction toNewHeadsEvent(head: BlockHead): NewHeadsEvent {\n  const result: NewHeadsEvent & Partial<BlockHead> = { ...head };\n  delete result.totalDifficulty;\n  delete result.transactions;\n  delete result.uncles;\n  return result;\n}\n\nexport function dedupeNewHeads(events: NewHeadsEvent[]): NewHeadsEvent[] {\n  return dedupe(events, event => event.hash);\n}\n\nexport function dedupeLogs(events: LogsEvent[]): LogsEvent[] {\n  return dedupe(events, event => `${event.blockHash}/${event.logIndex}`);\n}\n\nfunction dedupe<T>(items: T[], getKey: (item: T) => any): T[] {\n  const keysSeen: Set<any> = new Set();\n  const result: T[] = [];\n  items.forEach(item => {\n    const key = getKey(item);\n    if (!keysSeen.has(key)) {\n      keysSeen.add(key);\n      result.push(item);\n    }\n  });\n  return result;\n}\n\nconst CANCELLED = new Error('Cancelled');\nexport function throwIfCancelled(isCancelled: () => boolean): void {\n  if (isCancelled()) {\n    throw CANCELLED;\n  }\n}\n","import SturdyWebSocket from 'sturdy-websocket';\n\nimport { Listener } from '@ethersproject/abstract-provider';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport {\n  Networkish,\n  getNetwork as getNetworkFromEthers\n} from '@ethersproject/networks';\nimport { Network as NetworkFromEthers } from '@ethersproject/networks/lib/types';\nimport {\n  CommunityResourcable,\n  WebSocketProvider\n} from '@ethersproject/providers';\n\nimport {\n  EthersEvent,\n  getAlchemyEventTag,\n  isAlchemyEvent,\n  verifyAlchemyEventName\n} from '../internal/ethers-event';\nimport {\n  ALCHEMY_EVENT_TYPES,\n  ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE,\n  ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE,\n  JsonRpcRequest,\n  JsonRpcResponse,\n  SingleOrBatchResponse,\n  SubscriptionEvent,\n  WebSocketMessage\n} from '../internal/internal-types';\nimport {\n  BatchPart,\n  LogsEvent,\n  LogsSubscriptionFilter,\n  NewHeadsEvent,\n  WebsocketBackfiller,\n  dedupeLogs,\n  dedupeNewHeads,\n  throwIfCancelled\n} from '../internal/websocket-backfiller';\nimport { AlchemyEventType, AlchemySubscription } from '../types/types';\nimport {\n  CustomNetworks,\n  DEFAULT_ALCHEMY_API_KEY,\n  EthersNetwork,\n  noop\n} from '../util/const';\nimport { VERSION } from '../version';\nimport { AlchemyConfig } from './alchemy-config';\nimport { AlchemyProvider } from './alchemy-provider';\nimport { fromHex } from './util';\n\nconst HEARTBEAT_INTERVAL = 30000;\nconst HEARTBEAT_WAIT_TIME = 10000;\nconst BACKFILL_TIMEOUT = 60000;\nconst BACKFILL_RETRIES = 5;\n/**\n * Subscriptions have a memory of recent events they have sent so that in the\n * event that they disconnect and need to backfill, they can detect re-orgs.\n * Keep a buffer that goes back at least these many blocks, the maximum amount\n * at which we might conceivably see a re-org.\n *\n * Note that while our buffer goes back this many blocks, it may contain more\n * than this many elements, since in the case of logs subscriptions more than\n * one event may be emitted for a block.\n */\nconst RETAINED_EVENT_BLOCK_COUNT = 10;\n\n/**\n * SDK's custom implementation fo the ethers.js's 'AlchemyWebSocketProvider'.\n *\n * Do not call this constructor directly. Instead, instantiate an instance of\n * {@link Alchemy} and call {@link Alchemy.config.getWebSocketProvider()}.\n *\n * @public\n */\nexport class AlchemyWebSocketProvider\n  extends WebSocketProvider\n  implements CommunityResourcable\n{\n  _events: Array<EthersEvent> = [];\n  readonly apiKey: string;\n\n  // In the case of a WebSocket reconnection, all subscriptions are lost and we\n  // create new ones to replace them, but we want to create the illusion that\n  // the original subscriptions persist. Thus, maintain a mapping from the\n  // \"virtual\" subscription ids which are visible to the consumer to the\n  // \"physical\" subscription ids of the actual connections. This terminology is\n  // borrowed from virtual and physical memory, which has a similar mapping.\n  /** @internal */\n  private readonly virtualSubscriptionsById: Map<string, VirtualSubscription> =\n    new Map();\n  /** @internal */\n  private readonly virtualIdsByPhysicalId: Map<string, string> = new Map();\n  /** @internal */\n  private readonly backfiller: WebsocketBackfiller;\n  /** @internal */\n  private heartbeatIntervalId?: NodeJS.Timeout;\n  /** @internal */\n  private cancelBackfill: () => void;\n\n  /** @internal */\n  constructor(config: AlchemyConfig, wsConstructor?: any) {\n    // Normalize the API Key to a string.\n    const apiKey = AlchemyProvider.getApiKey(config.apiKey);\n\n    // Generate our own connection info with the correct endpoint URLs.\n    const alchemyNetwork = AlchemyProvider.getAlchemyNetwork(config.network);\n    const connection = AlchemyProvider.getAlchemyConnectionInfo(\n      alchemyNetwork,\n      apiKey,\n      'wss'\n    );\n\n    const protocol = `alchemy-sdk-${VERSION}`;\n\n    // Use the provided config URL override if it exists, otherwise use the created one.\n    const ws = new SturdyWebSocket(config.url ?? connection.url, protocol, {\n      wsConstructor: wsConstructor ?? getWebsocketConstructor()\n    });\n\n    // Normalize the Alchemy named network input to the network names used by\n    // ethers. This allows the parent super constructor in JsonRpcProvider to\n    // correctly set the network.\n    const ethersNetwork = EthersNetwork[alchemyNetwork];\n    super(ws as any, ethersNetwork);\n    this.apiKey = apiKey;\n\n    // Start heartbeat and backfiller for the websocket connection.\n    this.backfiller = new WebsocketBackfiller(this);\n    this.addSocketListeners();\n    this.startHeartbeat();\n    this.cancelBackfill = noop;\n  }\n\n  /**\n   * Overrides the `BaseProvider.getNetwork` method as implemented by ethers.js.\n   *\n   * This override allows the SDK to set the provider's network to values not\n   * yet supported by ethers.js.\n   *\n   * @internal\n   * @override\n   */\n  static getNetwork(network: Networkish): NetworkFromEthers {\n    if (typeof network === 'string' && network in CustomNetworks) {\n      return CustomNetworks[network];\n    }\n\n    // Call the standard ethers.js getNetwork method for other networks.\n    return getNetworkFromEthers(network);\n  }\n\n  /**\n   * Overridden implementation of ethers that includes Alchemy based subscriptions.\n   *\n   * @param eventName Event to subscribe to\n   * @param listener The listener function to call when the event is triggered.\n   * @override\n   * @public\n   */\n  // TODO: Override `Listener` type to get type autocompletions.\n  on(eventName: AlchemyEventType, listener: Listener): this {\n    return this._addEventListener(eventName, listener, false);\n  }\n\n  /**\n   * Overridden implementation of ethers that includes Alchemy based\n   * subscriptions. Adds a listener to the triggered for only the next\n   * {@link eventName} event, after which it will be removed.\n   *\n   * @param eventName Event to subscribe to\n   * @param listener The listener function to call when the event is triggered.\n   * @override\n   * @public\n   */\n  // TODO: Override `Listener` type to get type autocompletions.\n  once(eventName: AlchemyEventType, listener: Listener): this {\n    return this._addEventListener(eventName, listener, true);\n  }\n\n  /**\n   * Removes the provided {@link listener} for the {@link eventName} event. If no\n   * listener is provided, all listeners for the event will be removed.\n   *\n   * @param eventName Event to unlisten to.\n   * @param listener The listener function to remove.\n   * @override\n   * @public\n   */\n  off(eventName: AlchemyEventType, listener?: Listener): this {\n    if (isAlchemyEvent(eventName)) {\n      return this._off(eventName, listener);\n    } else {\n      return super.off(eventName, listener);\n    }\n  }\n\n  /**\n   * Remove all listeners for the provided {@link eventName} event. If no event\n   * is provided, all events and their listeners are removed.\n   *\n   * @param eventName The event to remove all listeners for.\n   * @override\n   * @public\n   */\n  removeAllListeners(eventName?: AlchemyEventType): this {\n    if (eventName !== undefined && isAlchemyEvent(eventName)) {\n      return this._removeAllListeners(eventName);\n    } else {\n      return super.removeAllListeners(eventName);\n    }\n  }\n\n  /**\n   * Returns the number of listeners for the provided {@link eventName} event. If\n   * no event is provided, the total number of listeners for all events is returned.\n   *\n   * @param eventName The event to get the number of listeners for.\n   * @public\n   * @override\n   */\n  listenerCount(eventName?: AlchemyEventType): number {\n    if (eventName !== undefined && isAlchemyEvent(eventName)) {\n      return this._listenerCount(eventName);\n    } else {\n      return super.listenerCount(eventName);\n    }\n  }\n\n  /**\n   * Returns an array of listeners for the provided {@link eventName} event. If\n   * no event is provided, all listeners will be included.\n   *\n   * @param eventName The event to get the listeners for.\n   * @public\n   * @override\n   */\n  listeners(eventName?: AlchemyEventType): Array<Listener> {\n    if (eventName !== undefined && isAlchemyEvent(eventName)) {\n      return this._listeners(eventName);\n    } else {\n      return super.listeners(eventName);\n    }\n  }\n\n  /**\n   * Overrides the method in `BaseProvider` in order to properly format the\n   * Alchemy subscription events.\n   *\n   * @internal\n   * @override\n   */\n  _addEventListener(\n    eventName: AlchemyEventType,\n    listener: Listener,\n    once: boolean\n  ): this {\n    if (isAlchemyEvent(eventName)) {\n      verifyAlchemyEventName(eventName);\n      const event = new EthersEvent(\n        getAlchemyEventTag(eventName),\n        listener,\n        once\n      );\n      this._events.push(event);\n      this._startEvent(event);\n      return this;\n    } else {\n      return super._addEventListener(eventName, listener, once);\n    }\n  }\n\n  /**\n   * Overrides the `_startEvent()` method in ethers.js's\n   * {@link WebSocketProvider} to include additional alchemy methods.\n   *\n   * @param event\n   * @override\n   * @internal\n   */\n  _startEvent(event: EthersEvent): void {\n    // Check if the event type is a custom Alchemy subscription.\n    const customLogicTypes = [...ALCHEMY_EVENT_TYPES, 'block', 'filter'];\n    if (customLogicTypes.includes(event.type)) {\n      this.customStartEvent(event);\n    } else {\n      super._startEvent(event);\n    }\n  }\n\n  /**\n   * Overridden from ethers.js's {@link WebSocketProvider}\n   *\n   * Modified in order to add mappings for backfilling.\n   *\n   * @internal\n   * @override\n   */\n  async _subscribe(\n    tag: string,\n    param: Array<any>,\n    processFunc: (result: any) => void,\n    event?: EthersEvent\n  ): Promise<void> {\n    let subIdPromise = this._subIds[tag];\n\n    // BEGIN MODIFIED CODE\n    const startingBlockNumber = await this.getBlockNumber();\n    // END MODIFIED CODE\n\n    if (subIdPromise == null) {\n      subIdPromise = Promise.all(param).then(param => {\n        return this.send('eth_subscribe', param);\n      });\n      this._subIds[tag] = subIdPromise;\n    }\n    const subId = await subIdPromise;\n\n    // BEGIN MODIFIED CODE\n    const resolvedParams = await Promise.all(param);\n    this.virtualSubscriptionsById.set(subId, {\n      event: event!,\n      method: 'eth_subscribe',\n      params: resolvedParams,\n      startingBlockNumber,\n      virtualId: subId,\n      physicalId: subId,\n      sentEvents: [],\n      isBackfilling: false,\n      backfillBuffer: []\n    });\n    this.virtualIdsByPhysicalId.set(subId, subId);\n\n    // END MODIFIED CODE\n\n    this._subs[subId] = { tag, processFunc };\n  }\n\n  /**\n   * DO NOT MODIFY.\n   *\n   * Original code copied over from ether.js's `BaseProvider`.\n   *\n   * This method is copied over directly in order to implement Alchemy's unique\n   * subscription types. The only difference is that this method calls\n   * {@link getAlchemyEventTag} instead of the original `getEventTag()` method in\n   * order to parse the Alchemy subscription event.\n   *\n   * @internal\n   * @override\n   */\n  emit(eventName: AlchemyEventType, ...args: Array<any>): boolean {\n    if (isAlchemyEvent(eventName)) {\n      let result = false;\n\n      const stopped: Array<EthersEvent> = [];\n\n      // This line is the only modified line from the original method.\n      const eventTag = getAlchemyEventTag(eventName);\n\n      this._events = this._events.filter(event => {\n        if (event.tag !== eventTag) {\n          return true;\n        }\n\n        setTimeout(() => {\n          event.listener.apply(this, args);\n        }, 0);\n\n        result = true;\n\n        if (event.once) {\n          stopped.push(event);\n          return false;\n        }\n\n        return true;\n      });\n\n      stopped.forEach(event => {\n        this._stopEvent(event);\n      });\n\n      return result;\n    } else {\n      return super.emit(eventName, ...args);\n    }\n  }\n\n  /** @internal */\n  async sendBatch(parts: BatchPart[]): Promise<any[]> {\n    let nextId = 0;\n    const payload: JsonRpcRequest[] = parts.map(({ method, params }) => {\n      return {\n        method,\n        params,\n        jsonrpc: '2.0',\n        id: `alchemy-sdk:${nextId++}`\n      };\n    });\n\n    return this.sendBatchConcurrently(payload);\n  }\n\n  /** @override */\n  destroy(): Promise<void> {\n    this.removeSocketListeners();\n    this.stopHeartbeatAndBackfill();\n    return super.destroy();\n  }\n\n  /**\n   * Overrides the ether's `isCommunityResource()` method. Returns true if the\n   * current api key is the default key.\n   *\n   * @override\n   */\n  isCommunityResource(): boolean {\n    return this.apiKey === DEFAULT_ALCHEMY_API_KEY;\n  }\n\n  /**\n   * DO NOT MODIFY.\n   *\n   * Original code copied over from ether.js's `WebSocketProvider._stopEvent()`.\n   *\n   * This method is copied over directly in order to support Alchemy's\n   * subscription type by allowing the provider to properly stop Alchemy's\n   * subscription events.\n   *\n   * @internal\n   */\n  _stopEvent(event: EthersEvent): void {\n    let tag = event.tag;\n\n    // START MODIFIED CODE\n    if (ALCHEMY_EVENT_TYPES.includes(event.type)) {\n      // There are remaining pending transaction listeners.\n      if (\n        this._events.filter(e => ALCHEMY_EVENT_TYPES.includes(e.type)).length\n      ) {\n        return;\n      }\n      // END MODIFIED CODE\n    } else if (event.type === 'tx') {\n      // There are remaining transaction event listeners\n      if (this._events.filter(e => e.type === 'tx').length) {\n        return;\n      }\n      tag = 'tx';\n    } else if (this.listenerCount(event.event)) {\n      // There are remaining event listeners\n      return;\n    }\n\n    const subId = this._subIds[tag];\n    if (!subId) {\n      return;\n    }\n\n    delete this._subIds[tag];\n    void subId.then(subId => {\n      if (!this._subs[subId]) {\n        return;\n      }\n      delete this._subs[subId];\n      void this.send('eth_unsubscribe', [subId]);\n    });\n  }\n\n  /** @internal */\n  private addSocketListeners(): void {\n    this._websocket.addEventListener('message', this.handleMessage);\n    this._websocket.addEventListener('reopen', this.handleReopen);\n    this._websocket.addEventListener('down', this.stopHeartbeatAndBackfill);\n  }\n\n  /** @internal */\n  private removeSocketListeners(): void {\n    this._websocket.removeEventListener('message', this.handleMessage);\n    this._websocket.removeEventListener('reopen', this.handleReopen);\n    this._websocket.removeEventListener('down', this.stopHeartbeatAndBackfill);\n  }\n\n  /**\n   * The underlying ethers {@link WebSocketProvider} already handles and emits\n   * messages. To allow backfilling, track all messages that are emitted.\n   *\n   * This is a field arrow function in order to preserve `this` context when\n   * passing the method as an event listener.\n   *\n   * @internal\n   */\n  private handleMessage = (event: MessageEvent): void => {\n    const message: WebSocketMessage = JSON.parse(event.data);\n    if (!isSubscriptionEvent(message)) {\n      return;\n    }\n    const physicalId = message.params.subscription;\n    const virtualId = this.virtualIdsByPhysicalId.get(physicalId);\n    if (!virtualId) {\n      return;\n    }\n    const subscription = this.virtualSubscriptionsById.get(virtualId)!;\n    if (subscription.method !== 'eth_subscribe') {\n      return;\n    }\n\n    switch (subscription.params[0]) {\n      case 'newHeads': {\n        const newHeadsSubscription = subscription as NewHeadsSubscription;\n        const newHeadsMessage = message as SubscriptionEvent<NewHeadsEvent>;\n        const { isBackfilling, backfillBuffer } = newHeadsSubscription;\n        const { result } = newHeadsMessage.params;\n        if (isBackfilling) {\n          addToNewHeadsEventsBuffer(backfillBuffer, result);\n        } else if (physicalId !== virtualId) {\n          // In the case of a re-opened subscription, ethers will not emit the\n          // event, so the SDK has to.\n          this.emitAndRememberEvent(virtualId, result, getNewHeadsBlockNumber);\n        } else {\n          // Ethers subscription mapping will emit the event, just store it.\n          this.rememberEvent(virtualId, result, getNewHeadsBlockNumber);\n        }\n        break;\n      }\n      case 'logs': {\n        const logsSubscription = subscription as LogsSubscription;\n        const logsMessage = message as SubscriptionEvent<LogsEvent>;\n        const { isBackfilling, backfillBuffer } = logsSubscription;\n        const { result } = logsMessage.params;\n        if (isBackfilling) {\n          addToLogsEventsBuffer(backfillBuffer, result);\n        } else if (virtualId !== physicalId) {\n          this.emitAndRememberEvent(virtualId, result, getLogsBlockNumber);\n        } else {\n          this.rememberEvent(virtualId, result, getLogsBlockNumber);\n        }\n        break;\n      }\n      default:\n        if (physicalId !== virtualId) {\n          // In the case of a re-opened subscription, ethers will not emit the\n          // event, so the SDK has to.\n          const { result } = (message as SubscriptionEvent<unknown>).params;\n          this.emitEvent(virtualId, result);\n        }\n    }\n  };\n\n  /**\n   * When the websocket connection reopens:\n   *\n   * 1. Resubscribe to all existing subscriptions and start backfilling\n   * 2. Restart heart beat.\n   *\n   * This is a field arrow function in order to preserve `this` context when\n   * passing the method as an event listener.\n   *\n   * @internal\n   */\n  private handleReopen = () => {\n    this.virtualIdsByPhysicalId.clear();\n    const { cancel, isCancelled } = makeCancelToken();\n    this.cancelBackfill = cancel;\n    for (const subscription of this.virtualSubscriptionsById.values()) {\n      void (async () => {\n        try {\n          await this.resubscribeAndBackfill(isCancelled, subscription);\n        } catch (error) {\n          if (!isCancelled()) {\n            console.error(\n              `Error while backfilling \"${subscription.params[0]}\" subscription. Some events may be missing.`,\n              error\n            );\n          }\n        }\n      })();\n    }\n    this.startHeartbeat();\n  };\n\n  /**\n   * Reopens the backfill based on\n   *\n   * @param isCancelled\n   * @param subscription\n   * @internal\n   */\n  private async resubscribeAndBackfill(\n    isCancelled: () => boolean,\n    subscription: VirtualSubscription\n  ): Promise<void> {\n    const {\n      virtualId,\n      method,\n      params,\n      sentEvents,\n      backfillBuffer,\n      startingBlockNumber\n    } = subscription;\n    subscription.isBackfilling = true;\n    backfillBuffer.length = 0;\n    try {\n      const physicalId = await this.send(method, params);\n      throwIfCancelled(isCancelled);\n      subscription.physicalId = physicalId;\n      this.virtualIdsByPhysicalId.set(physicalId, virtualId);\n      switch (params[0]) {\n        case 'newHeads': {\n          const backfillEvents = await withBackoffRetries(\n            () =>\n              withTimeout(\n                this.backfiller.getNewHeadsBackfill(\n                  isCancelled,\n                  sentEvents,\n                  startingBlockNumber\n                ),\n                BACKFILL_TIMEOUT\n              ),\n            BACKFILL_RETRIES,\n            () => !isCancelled()\n          );\n          throwIfCancelled(isCancelled);\n          const events = dedupeNewHeads([...backfillEvents, ...backfillBuffer]);\n          events.forEach(event => this.emitNewHeadsEvent(virtualId, event));\n          break;\n        }\n        case 'logs': {\n          const filter: LogsSubscriptionFilter = params[1] || {};\n          const backfillEvents = await withBackoffRetries(\n            () =>\n              withTimeout(\n                this.backfiller.getLogsBackfill(\n                  isCancelled,\n                  filter,\n                  sentEvents,\n                  startingBlockNumber\n                ),\n                BACKFILL_TIMEOUT\n              ),\n            BACKFILL_RETRIES,\n            () => !isCancelled()\n          );\n          throwIfCancelled(isCancelled);\n          const events = dedupeLogs([...backfillEvents, ...backfillBuffer]);\n          events.forEach(event => this.emitLogsEvent(virtualId, event));\n          break;\n        }\n        default:\n          break;\n      }\n    } finally {\n      subscription.isBackfilling = false;\n      backfillBuffer.length = 0;\n    }\n  }\n\n  /**\n   * Cancels the heartbeat and any pending backfills being performed. This is\n   * called when the websocket connection goes down or is disconnected.\n   *\n   * This is a field arrow function in order to preserve `this` context when\n   * passing the method as an event listener.\n   *\n   * @internal\n   */\n  private stopHeartbeatAndBackfill = () => {\n    if (this.heartbeatIntervalId != null) {\n      clearInterval(this.heartbeatIntervalId);\n      this.heartbeatIntervalId = undefined;\n    }\n    this.cancelBackfill();\n  };\n\n  /** @internal */\n  private emitNewHeadsEvent(virtualId: string, result: NewHeadsEvent): void {\n    this.emitAndRememberEvent(virtualId, result, getNewHeadsBlockNumber);\n  }\n\n  /** @internal */\n  private emitLogsEvent(virtualId: string, result: LogsEvent): void {\n    this.emitAndRememberEvent(virtualId, result, getLogsBlockNumber);\n  }\n\n  /**\n   * Emits an event to consumers, but also remembers it in its subscriptions's\n   * `sentEvents` buffer so that we can detect re-orgs if the connection drops\n   * and needs to be reconnected.\n   *\n   * @internal\n   */\n  private emitAndRememberEvent<T>(\n    virtualId: string,\n    result: T,\n    getBlockNumber: (result: T) => number\n  ): void {\n    this.rememberEvent(virtualId, result, getBlockNumber);\n    this.emitEvent(virtualId, result);\n  }\n\n  private emitEvent<T>(virtualId: string, result: T): void {\n    const subscription = this.virtualSubscriptionsById.get(virtualId);\n    if (!subscription) {\n      return;\n    }\n    this.emitGenericEvent(subscription, result);\n  }\n\n  /** @internal */\n  private rememberEvent<T>(\n    virtualId: string,\n    result: T,\n    getBlockNumber: (result: T) => number\n  ): void {\n    const subscription = this.virtualSubscriptionsById.get(virtualId);\n    if (!subscription) {\n      return;\n    }\n    // Web3 modifies these event objects once we pass them on (changing hex\n    // numbers to numbers). We want the original event, so make a defensive\n    // copy.\n    addToPastEventsBuffer(\n      subscription.sentEvents,\n      { ...result },\n      getBlockNumber\n    );\n  }\n\n  /** @internal */\n  private emitGenericEvent(\n    subscription: VirtualSubscription,\n    result: any\n  ): void {\n    const emitFunction = this.emitProcessFn(subscription.event);\n    emitFunction(result);\n  }\n\n  /**\n   * Starts a heartbeat that pings the websocket server periodically to ensure\n   * that the connection stays open.\n   *\n   * @internal\n   */\n  private startHeartbeat(): void {\n    if (this.heartbeatIntervalId != null) {\n      return;\n    }\n    this.heartbeatIntervalId = setInterval(async () => {\n      try {\n        await withTimeout(this.send('net_version'), HEARTBEAT_WAIT_TIME);\n      } catch {\n        this._websocket.reconnect();\n      }\n    }, HEARTBEAT_INTERVAL);\n  }\n\n  /**\n   * This method sends the batch concurrently as individual requests rather than\n   * as a batch, which was the original implementation. The original batch logic\n   * is preserved in this implementation in order for faster porting.\n   *\n   * @param payload\n   * @internal\n   */\n  // TODO(cleanup): Refactor and remove usages of `sendBatch()`.\n  // TODO(errors): Use allSettled() once we have more error handling.\n  private async sendBatchConcurrently(\n    payload: JsonRpcRequest[]\n  ): Promise<unknown[]> {\n    return Promise.all(payload.map(req => this.send(req.method, req.params)));\n  }\n\n  /** @internal */\n  private customStartEvent(event: EthersEvent): void {\n    if (event.type === ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE) {\n      const { fromAddress, toAddress, hashesOnly } = event;\n      void this._subscribe(\n        event.tag,\n        [\n          AlchemySubscription.PENDING_TRANSACTIONS,\n          { fromAddress, toAddress, hashesOnly }\n        ],\n        this.emitProcessFn(event),\n        event\n      );\n    } else if (event.type === ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE) {\n      const { addresses, includeRemoved, hashesOnly } = event;\n      void this._subscribe(\n        event.tag,\n        [\n          AlchemySubscription.MINED_TRANSACTIONS,\n          { addresses, includeRemoved, hashesOnly }\n        ],\n        this.emitProcessFn(event),\n        event\n      );\n    } else if (event.type === 'block') {\n      void this._subscribe(\n        'block',\n        ['newHeads'],\n        this.emitProcessFn(event),\n        event\n      );\n    } else if (event.type === 'filter') {\n      void this._subscribe(\n        event.tag,\n        ['logs', this._getFilter(event.filter)],\n        this.emitProcessFn(event),\n        event\n      );\n    }\n  }\n\n  /** @internal */\n  private emitProcessFn(event: EthersEvent): (result: any) => void {\n    switch (event.type) {\n      case ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE:\n        return result =>\n          this.emit(\n            {\n              method: AlchemySubscription.PENDING_TRANSACTIONS,\n              fromAddress: event.fromAddress,\n              toAddress: event.toAddress,\n              hashesOnly: event.hashesOnly\n            },\n            result\n          );\n      case ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE:\n        return result =>\n          this.emit(\n            {\n              method: AlchemySubscription.MINED_TRANSACTIONS,\n              addresses: event.addresses,\n              includeRemoved: event.includeRemoved,\n              hashesOnly: event.hashesOnly\n            },\n            result\n          );\n      case 'block':\n        return result => {\n          const blockNumber = BigNumber.from(result.number).toNumber();\n          this._emitted.block = blockNumber;\n          this.emit('block', blockNumber);\n        };\n      case 'filter':\n        return result => {\n          if (result.removed == null) {\n            result.removed = false;\n          }\n          this.emit(event.filter, this.formatter.filterLog(result));\n        };\n      default:\n        throw new Error('Invalid event type to `emitProcessFn()`');\n    }\n  }\n\n  /**\n   * DO NOT MODIFY.\n   *\n   * Original code copied over from ether.js's `BaseProvider.off()`.\n   *\n   * This method is copied over directly in order to implement Alchemy's unique\n   * subscription types. The only difference is that this method calls\n   * {@link getAlchemyEventTag} instead of the original `getEventTag()` method in\n   * order to parse the Alchemy subscription event.\n   *\n   * @private\n   */\n  private _off(eventName: AlchemyEventType, listener?: Listener): this {\n    if (listener == null) {\n      return this.removeAllListeners(eventName);\n    }\n\n    const stopped: Array<EthersEvent> = [];\n\n    let found = false;\n    const eventTag = getAlchemyEventTag(eventName);\n    this._events = this._events.filter(event => {\n      if (event.tag !== eventTag || event.listener != listener) {\n        return true;\n      }\n      if (found) {\n        return true;\n      }\n      found = true;\n      stopped.push(event);\n      return false;\n    });\n\n    stopped.forEach(event => {\n      this._stopEvent(event);\n    });\n\n    return this;\n  }\n\n  /**\n   * DO NOT MODIFY.\n   *\n   * Original code copied over from ether.js's `BaseProvider.removeAllListeners()`.\n   *\n   * This method is copied over directly in order to implement Alchemy's unique\n   * subscription types. The only difference is that this method calls\n   * {@link getAlchemyEventTag} instead of the original `getEventTag()` method in\n   * order to parse the Alchemy subscription event.\n   *\n   * @private\n   */\n  private _removeAllListeners(eventName: AlchemyEventType): this {\n    let stopped: Array<EthersEvent> = [];\n    if (eventName == null) {\n      stopped = this._events;\n\n      this._events = [];\n    } else {\n      const eventTag = getAlchemyEventTag(eventName);\n      this._events = this._events.filter(event => {\n        if (event.tag !== eventTag) {\n          return true;\n        }\n        stopped.push(event);\n        return false;\n      });\n    }\n\n    stopped.forEach(event => {\n      this._stopEvent(event);\n    });\n\n    return this;\n  }\n\n  /**\n   * DO NOT MODIFY.\n   *\n   * Original code copied over from ether.js's `BaseProvider.listenerCount()`.\n   *\n   * This method is copied over directly in order to implement Alchemy's unique\n   * subscription types. The only difference is that this method calls\n   * {@link getAlchemyEventTag} instead of the original `getEventTag()` method in\n   * order to parse the Alchemy subscription event.\n   *\n   * @private\n   */\n  private _listenerCount(eventName?: AlchemyEventType): number {\n    if (!eventName) {\n      return this._events.length;\n    }\n\n    const eventTag = getAlchemyEventTag(eventName);\n    return this._events.filter(event => {\n      return event.tag === eventTag;\n    }).length;\n  }\n\n  /**\n   * DO NOT MODIFY.\n   *\n   * Original code copied over from ether.js's `BaseProvider.listeners()`.\n   *\n   * This method is copied over directly in order to implement Alchemy's unique\n   * subscription types. The only difference is that this method calls\n   * {@link getAlchemyEventTag} instead of the original `getEventTag()` method in\n   * order to parse the Alchemy subscription event.\n   *\n   * @private\n   */\n  private _listeners(eventName?: AlchemyEventType): Array<Listener> {\n    if (eventName == null) {\n      return this._events.map(event => event.listener);\n    }\n\n    const eventTag = getAlchemyEventTag(eventName);\n    return this._events\n      .filter(event => event.tag === eventTag)\n      .map(event => event.listener);\n  }\n}\n\nfunction getWebsocketConstructor(): any {\n  return isNodeEnvironment() ? require('websocket').w3cwebsocket : WebSocket;\n}\n\nfunction isNodeEnvironment(): boolean {\n  return (\n    typeof process !== 'undefined' &&\n    process != null &&\n    process.versions != null &&\n    process.versions.node != null\n  );\n}\n\n/** @internal */\ninterface CancelToken {\n  cancel(): void;\n  isCancelled(): boolean;\n}\n\ninterface VirtualSubscription {\n  event: EthersEvent;\n  virtualId: string;\n  physicalId: string;\n  method: string;\n  params: any[];\n  isBackfilling: boolean;\n  startingBlockNumber: number;\n  sentEvents: any[];\n  backfillBuffer: any[];\n}\n\ninterface NewHeadsSubscription extends VirtualSubscription {\n  method: 'eth_subscribe';\n  params: ['newHeads'];\n  isBackfilling: boolean;\n  sentEvents: NewHeadsEvent[];\n  backfillBuffer: NewHeadsEvent[];\n}\n\ninterface LogsSubscription extends VirtualSubscription {\n  method: 'eth_subscribe';\n  params: ['logs', LogsSubscriptionFilter?];\n  isBackfilling: boolean;\n  sentEvents: LogsEvent[];\n  backfillBuffer: LogsEvent[];\n}\n\n// TODO(cleanup): Use class variable rather than passing `isCancelled` everywhere.\nfunction makeCancelToken(): CancelToken {\n  let cancelled = false;\n  return { cancel: () => (cancelled = true), isCancelled: () => cancelled };\n}\n\n// TODO(cleanup): replace with SDK's backoff implementation\nconst MIN_RETRY_DELAY = 1000;\nconst RETRY_BACKOFF_FACTOR = 2;\nconst MAX_RETRY_DELAY = 30000;\n\nasync function withBackoffRetries<T>(\n  f: () => Promise<T>,\n  retryCount: number,\n  shouldRetry: (error: unknown) => boolean = () => true\n): Promise<T> {\n  let nextWaitTime = 0;\n  let i = 0;\n  while (true) {\n    try {\n      return await f();\n    } catch (error) {\n      i++;\n      if (i >= retryCount || !shouldRetry(error)) {\n        throw error;\n      }\n      await delay(nextWaitTime);\n      if (!shouldRetry(error)) {\n        throw error;\n      }\n      nextWaitTime =\n        nextWaitTime === 0\n          ? MIN_RETRY_DELAY\n          : Math.min(MAX_RETRY_DELAY, RETRY_BACKOFF_FACTOR * nextWaitTime);\n    }\n  }\n}\n\nfunction delay(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nfunction withTimeout<T>(promise: Promise<T>, ms: number): Promise<T> {\n  return Promise.race([\n    promise,\n    new Promise<T>((_, reject) =>\n      setTimeout(() => reject(new Error('Timeout')), ms)\n    )\n  ]);\n}\n\nfunction getNewHeadsBlockNumber(event: NewHeadsEvent): number {\n  return fromHex(event.number);\n}\n\nfunction getLogsBlockNumber(event: LogsEvent): number {\n  return fromHex(event.blockNumber);\n}\n\nfunction isResponse(\n  message: WebSocketMessage\n): message is SingleOrBatchResponse {\n  return (\n    Array.isArray(message) ||\n    (message.jsonrpc === '2.0' && (message as JsonRpcResponse).id !== undefined)\n  );\n}\n\nfunction isSubscriptionEvent(\n  message: WebSocketMessage\n): message is SubscriptionEvent {\n  return !isResponse(message);\n}\n\nfunction addToNewHeadsEventsBuffer(\n  pastEvents: NewHeadsEvent[],\n  event: NewHeadsEvent\n): void {\n  addToPastEventsBuffer(pastEvents, event, getNewHeadsBlockNumber);\n}\n\nfunction addToLogsEventsBuffer(\n  pastEvents: LogsEvent[],\n  event: LogsEvent\n): void {\n  addToPastEventsBuffer(pastEvents, event, getLogsBlockNumber);\n}\n\n/**\n * Adds a new event to an array of events, evicting any events which are so old\n * that they will no longer feasibly be part of a reorg.\n */\nfunction addToPastEventsBuffer<T>(\n  pastEvents: T[],\n  event: T,\n  getBlockNumber: (event: T) => number\n): void {\n  const currentBlockNumber = getBlockNumber(event);\n  // Find first index of an event recent enough to retain, then drop everything\n  // at a lower index.\n  const firstGoodIndex = pastEvents.findIndex(\n    e => getBlockNumber(e) > currentBlockNumber - RETAINED_EVENT_BLOCK_COUNT\n  );\n  if (firstGoodIndex === -1) {\n    pastEvents.length = 0;\n  } else {\n    pastEvents.splice(0, firstGoodIndex);\n  }\n  pastEvents.push(event);\n}\n"],"names":["getNetworkFromEthers"],"mappings":"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","ignoreList":[0,1]}},
    {"offset": {"line": 7542, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}