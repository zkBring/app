{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/src/lib/slices/user/index.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { TInitialState } from './types'\n\nconst initialState: TInitialState = {\n  address: null,\n  chain_id: null\n}\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUserAddress(\n      state,\n      action: PayloadAction<string | null>\n    ) {\n      return {...state, address: action.payload }\n    },\n    setUserChainId(\n      state,\n      action: PayloadAction<number | null>\n    ) {\n      return {...state, chain_id: action.payload }\n    },\n  },\n  extraReducers: () => {\n    // Add reducers for additional action types here, and handle loading state as needed\n    // builder.addCase(initialLoad.fulfilled, (state, action) => {\n    //   // Add user to the state array\n    //   return {\n    //     ...state,\n    //     sdk: action.payload\n    //   }\n    // })\n  },\n})\n\n// Extract the action creators object and the reducer\nconst { actions, reducer } = userSlice\n// Extract and export each action creator by name\nexport const { setUserChainId, setUserAddress } = actions\n// Export the reducer, either as a default or named export\nexport default reducer"],"names":[],"mappings":";;;;;AAAA;;AAGA,MAAM,eAA8B;IAClC,SAAS;IACT,UAAU;AACZ;AAEA,MAAM,YAAY,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,MAAM;IACN;IACA,UAAU;QACR,gBACE,KAAK,EACL,MAAoC;YAEpC,OAAO;gBAAC,GAAG,KAAK;gBAAE,SAAS,OAAO,OAAO;YAAC;QAC5C;QACA,gBACE,KAAK,EACL,MAAoC;YAEpC,OAAO;gBAAC,GAAG,KAAK;gBAAE,UAAU,OAAO,OAAO;YAAC;QAC7C;IACF;IACA,eAAe;IACb,oFAAoF;IACpF,8DAA8D;IAC9D,mCAAmC;IACnC,aAAa;IACb,gBAAgB;IAChB,0BAA0B;IAC1B,MAAM;IACN,KAAK;IACP;AACF;AAEA,qDAAqD;AACrD,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG;AAEtB,MAAM,EAAE,cAAc,EAAE,cAAc,EAAE,GAAG;uCAEnC"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/src/lib/slices/token/index.tsx"],"sourcesContent":["import { TTokenStandard } from '@/types'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { TInitialState } from './types'\n\nconst initialState: TInitialState = {\n  address: null,\n  decimals: null,\n  symbol: null,\n  image: null,\n  standard: null,\n  amount: null\n}\n\nconst tokenSlice = createSlice({\n  name: 'token',\n  initialState,\n  reducers: {\n    setTokenAddress: (state, action: PayloadAction<string | null>) => ({\n      ...state, address: action.payload\n    }),\n    setTokenDecimals: (state, action: PayloadAction<number | null>) => ({\n      ...state, decimals: action.payload\n    }),\n    setTokenSymbol: (state, action: PayloadAction<string | null>) => ({\n      ...state, symbol: action.payload\n    }),\n    setTokenImage: (state, action: PayloadAction<string | null>) => ({\n      ...state, image: action.payload\n    }),\n    setTokenStandard: (state, action: PayloadAction<TTokenStandard | null>) => ({\n      ...state, standard: action.payload\n    }),\n    setTokenAmount: (state, action: PayloadAction<string | null>) => ({\n      ...state, amount: action.payload\n    }),\n  },\n})\n\n// Extract the action creators object and the reducer\nconst { actions, reducer } = tokenSlice\n// Extract and export each action creator by name\nexport const {\n  setTokenAddress,\n  setTokenStandard,\n  setTokenImage,\n  setTokenSymbol,\n  setTokenDecimals,\n  setTokenAmount\n} = actions\n// Export the reducer, either as a default or named export\nexport default reducer"],"names":[],"mappings":";;;;;;;;;AACA;;AAGA,MAAM,eAA8B;IAClC,SAAS;IACT,UAAU;IACV,QAAQ;IACR,OAAO;IACP,UAAU;IACV,QAAQ;AACV;AAEA,MAAM,aAAa,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IAC7B,MAAM;IACN;IACA,UAAU;QACR,iBAAiB,CAAC,OAAO,SAAyC,CAAC;gBACjE,GAAG,KAAK;gBAAE,SAAS,OAAO,OAAO;YACnC,CAAC;QACD,kBAAkB,CAAC,OAAO,SAAyC,CAAC;gBAClE,GAAG,KAAK;gBAAE,UAAU,OAAO,OAAO;YACpC,CAAC;QACD,gBAAgB,CAAC,OAAO,SAAyC,CAAC;gBAChE,GAAG,KAAK;gBAAE,QAAQ,OAAO,OAAO;YAClC,CAAC;QACD,eAAe,CAAC,OAAO,SAAyC,CAAC;gBAC/D,GAAG,KAAK;gBAAE,OAAO,OAAO,OAAO;YACjC,CAAC;QACD,kBAAkB,CAAC,OAAO,SAAiD,CAAC;gBAC1E,GAAG,KAAK;gBAAE,UAAU,OAAO,OAAO;YACpC,CAAC;QACD,gBAAgB,CAAC,OAAO,SAAyC,CAAC;gBAChE,GAAG,KAAK;gBAAE,QAAQ,OAAO,OAAO;YAClC,CAAC;IACH;AACF;AAEA,qDAAqD;AACrD,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG;AAEtB,MAAM,EACX,eAAe,EACf,gBAAgB,EAChB,aAAa,EACb,cAAc,EACd,gBAAgB,EAChB,cAAc,EACf,GAAG;uCAEW"}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/src/lib/slices/link/index.ts"],"sourcesContent":["import { TWalletName } from '@/types'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { TInitialState } from './types'\n\nconst initialState: TInitialState = {\n  code: null,\n  preferred_wallet: null,\n  expiration_time: null,\n  wei_amount: null,\n  link_id: null,\n  claiming_finished_description: null,\n  claiming_finished_button_title: null,\n  claiming_finished_button_url: null,\n  claiming_finished_auto_redirect: false,\n  claiming_finished_button_on: false,\n  tx_hash: null,\n  loading: false,\n  chain_id: null,\n  optimistic_claim_ui: true\n}\n\nconst linkSlice = createSlice({\n  name: 'link',\n  initialState,\n  reducers: {\n    setLinkCode: (state, action: PayloadAction<string | null>) => ({\n      ...state, code: action.payload\n    }),\n    setLinkOptimisticClaimUI: (state, action: PayloadAction<boolean>) => ({\n      ...state, optimistic_claim_ui: action.payload\n    }),\n    setLinkLoading: (state, action: PayloadAction<boolean>) => ({\n      ...state, loading: action.payload\n    }),\n    setLinkPreferredWallet: (state, action: PayloadAction<TWalletName | null>) => ({\n      ...state, preferred_wallet: action.payload\n    }),\n    setLinkExpirationTime: (state, action: PayloadAction<number | null>) => ({\n      ...state, expiration_time: action.payload\n    }),\n    setLinkTxHash: (state, action: PayloadAction<string | null>) => ({\n      ...state, tx_hash: action.payload\n    }),\n    setLinkWeiAmount: (state, action: PayloadAction<string | null>) => ({\n      ...state, wei_amount: action.payload\n    }),\n    setLinkId: (state, action: PayloadAction<string | null>) => ({\n      ...state, link_id: action.payload\n    }),\n    setLinkClaimingFinishedDescription: (state, action: PayloadAction<string | null>) => ({\n      ...state, claiming_finished_description: action.payload\n    }),\n\n    setLinkClaimingFinishedButtonTitle: (state, action: PayloadAction<string | null>) => ({\n      ...state, claiming_finished_button_title: action.payload\n    }),\n\n    setLinkClaimingFinishedButtonOn: (state, action: PayloadAction<boolean | null>) => ({\n      ...state, claiming_finished_button_on: action.payload\n    }),\n\n    setLinkChainId: (state, action: PayloadAction<number | null>) => ({\n      ...state, chain_id: action.payload\n    }),\n    setLinkClaimingFinishedButtonHref: (state, action: PayloadAction<string | null>) => ({\n      ...state, claiming_finished_button_url: action.payload\n    }),\n\n    setLinkClaimingFinishedAutoRedirect: (state, action: PayloadAction<boolean | null>) => ({\n      ...state, claiming_finished_auto_redirect: action.payload\n    }),\n  },\n  extraReducers: () => {\n    \n  }\n})\n\n// Extract the action creators object and the reducer\nconst { actions, reducer } = linkSlice\n// Extract and export each action creator by name\nexport const {\n  setLinkCode,\n  setLinkPreferredWallet,\n  setLinkExpirationTime,\n  setLinkClaimingFinishedAutoRedirect,\n  setLinkClaimingFinishedButtonHref,\n  setLinkClaimingFinishedButtonTitle,\n  setLinkClaimingFinishedDescription,\n  setLinkId,\n  setLinkWeiAmount,\n  setLinkTxHash,\n  setLinkLoading,\n  setLinkChainId,\n  setLinkClaimingFinishedButtonOn,\n  setLinkOptimisticClaimUI\n} = actions\n// Export the reducer, either as a default or named export\nexport default reducer"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AACA;;AAGA,MAAM,eAA8B;IAClC,MAAM;IACN,kBAAkB;IAClB,iBAAiB;IACjB,YAAY;IACZ,SAAS;IACT,+BAA+B;IAC/B,gCAAgC;IAChC,8BAA8B;IAC9B,iCAAiC;IACjC,6BAA6B;IAC7B,SAAS;IACT,SAAS;IACT,UAAU;IACV,qBAAqB;AACvB;AAEA,MAAM,YAAY,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,MAAM;IACN;IACA,UAAU;QACR,aAAa,CAAC,OAAO,SAAyC,CAAC;gBAC7D,GAAG,KAAK;gBAAE,MAAM,OAAO,OAAO;YAChC,CAAC;QACD,0BAA0B,CAAC,OAAO,SAAmC,CAAC;gBACpE,GAAG,KAAK;gBAAE,qBAAqB,OAAO,OAAO;YAC/C,CAAC;QACD,gBAAgB,CAAC,OAAO,SAAmC,CAAC;gBAC1D,GAAG,KAAK;gBAAE,SAAS,OAAO,OAAO;YACnC,CAAC;QACD,wBAAwB,CAAC,OAAO,SAA8C,CAAC;gBAC7E,GAAG,KAAK;gBAAE,kBAAkB,OAAO,OAAO;YAC5C,CAAC;QACD,uBAAuB,CAAC,OAAO,SAAyC,CAAC;gBACvE,GAAG,KAAK;gBAAE,iBAAiB,OAAO,OAAO;YAC3C,CAAC;QACD,eAAe,CAAC,OAAO,SAAyC,CAAC;gBAC/D,GAAG,KAAK;gBAAE,SAAS,OAAO,OAAO;YACnC,CAAC;QACD,kBAAkB,CAAC,OAAO,SAAyC,CAAC;gBAClE,GAAG,KAAK;gBAAE,YAAY,OAAO,OAAO;YACtC,CAAC;QACD,WAAW,CAAC,OAAO,SAAyC,CAAC;gBAC3D,GAAG,KAAK;gBAAE,SAAS,OAAO,OAAO;YACnC,CAAC;QACD,oCAAoC,CAAC,OAAO,SAAyC,CAAC;gBACpF,GAAG,KAAK;gBAAE,+BAA+B,OAAO,OAAO;YACzD,CAAC;QAED,oCAAoC,CAAC,OAAO,SAAyC,CAAC;gBACpF,GAAG,KAAK;gBAAE,gCAAgC,OAAO,OAAO;YAC1D,CAAC;QAED,iCAAiC,CAAC,OAAO,SAA0C,CAAC;gBAClF,GAAG,KAAK;gBAAE,6BAA6B,OAAO,OAAO;YACvD,CAAC;QAED,gBAAgB,CAAC,OAAO,SAAyC,CAAC;gBAChE,GAAG,KAAK;gBAAE,UAAU,OAAO,OAAO;YACpC,CAAC;QACD,mCAAmC,CAAC,OAAO,SAAyC,CAAC;gBACnF,GAAG,KAAK;gBAAE,8BAA8B,OAAO,OAAO;YACxD,CAAC;QAED,qCAAqC,CAAC,OAAO,SAA0C,CAAC;gBACtF,GAAG,KAAK;gBAAE,iCAAiC,OAAO,OAAO;YAC3D,CAAC;IACH;IACA,eAAe,KAEf;AACF;AAEA,qDAAqD;AACrD,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG;AAEtB,MAAM,EACX,WAAW,EACX,sBAAsB,EACtB,qBAAqB,EACrB,mCAAmC,EACnC,iCAAiC,EACjC,kCAAkC,EAClC,kCAAkC,EAClC,SAAS,EACT,gBAAgB,EAChB,aAAa,EACb,cAAc,EACd,cAAc,EACd,+BAA+B,EAC/B,wBAAwB,EACzB,GAAG;uCAEW"}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/src/lib/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport {\n  LinkSlice,\n  UserSlice,\n  TokenSlice\n} from './slices'\n\nexport const makeStore = () => {\n  return configureStore({\n    reducer: {\n      user: UserSlice,\n      link: LinkSlice,\n      token: TokenSlice\n    }\n  })\n}\n\n// Infer the type of makeStore\nexport type AppStore = ReturnType<typeof makeStore>\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<AppStore['getState']>\nexport type AppDispatch = AppStore['dispatch']"],"names":[],"mappings":";;;AACA;AADA;AACA;AAAA;AAAA;;;AAMO,MAAM,YAAY;IACvB,OAAO,CAAA,GAAA,2LAAA,CAAA,iBAAc,AAAD,EAAE;QACpB,SAAS;YACP,MAAM,6KAAA,CAAA,YAAS;YACf,MAAM,6KAAA,CAAA,YAAS;YACf,OAAO,gLAAA,CAAA,aAAU;QACnB;IACF;AACF"}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/src/app/providers/store-provider.tsx"],"sourcesContent":["'use client'\nimport { useRef } from 'react'\nimport { Provider } from 'react-redux'\nimport { makeStore, AppStore } from '@/lib/store'\n\nexport default function StoreProvider({\n  children\n}: {\n  children: React.ReactNode\n}) {\n  const storeRef = useRef<AppStore | null>(null)\n  if (!storeRef.current) {\n    storeRef.current = makeStore()\n  }\n\n  return <Provider store={storeRef.current}>{children}</Provider>\n}"],"names":[],"mappings":";;;;AACA;AAEA;AADA;AAFA;;;;;AAKe,SAAS,cAAc,EACpC,QAAQ,EAGT;IACC,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAmB;IACzC,IAAI,CAAC,SAAS,OAAO,EAAE;QACrB,SAAS,OAAO,GAAG,CAAA,GAAA,mHAAA,CAAA,YAAS,AAAD;IAC7B;IAEA,qBAAO,8OAAC,yJAAA,CAAA,WAAQ;QAAC,OAAO,SAAS,OAAO;kBAAG;;;;;;AAC7C"}},
    {"offset": {"line": 334, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 372, "column": 0}, "map": {"version":3,"sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/src/lib/registry.tsx"],"sourcesContent":["'use client'\n \nimport React, { useState } from 'react'\nimport { useServerInsertedHTML } from 'next/navigation'\nimport { ServerStyleSheet, StyleSheetManager } from 'styled-components'\n \nexport default function StyledComponentsRegistry({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  // Only create stylesheet once with lazy initial state\n  // x-ref: https://reactjs.org/docs/hooks-reference.html#lazy-initial-state\n  const [styledComponentsStyleSheet] = useState(() => new ServerStyleSheet())\n \n  useServerInsertedHTML(() => {\n    const styles = styledComponentsStyleSheet.getStyleElement()\n    styledComponentsStyleSheet.instance.clearTag()\n    return <>{styles}</>\n  })\n \n  if (typeof window !== 'undefined') return <>{children}</>\n \n  return (\n    <StyleSheetManager\n      sheet={styledComponentsStyleSheet.instance}\n    >\n      {children}\n    </StyleSheetManager>\n  )\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS,yBAAyB,EAC/C,QAAQ,EAGT;IACC,sDAAsD;IACtD,0EAA0E;IAC1E,MAAM,CAAC,2BAA2B,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,IAAM,IAAI,2KAAA,CAAA,mBAAgB;IAExE,CAAA,GAAA,kIAAA,CAAA,wBAAqB,AAAD,EAAE;QACpB,MAAM,SAAS,2BAA2B,eAAe;QACzD,2BAA2B,QAAQ,CAAC,QAAQ;QAC5C,qBAAO;sBAAG;;IACZ;IAEA,uCAAmC;;IAAqB;IAExD,qBACE,8OAAC,2KAAA,CAAA,oBAAiB;QAChB,OAAO,2BAA2B,QAAQ;kBAEzC;;;;;;AAGP"}},
    {"offset": {"line": 407, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 557, "column": 0}, "map": {"version":3,"sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/src/app/configs/index.tsx"],"sourcesContent":["export const projectId = process.env.NEXT_PUBLIC_PROJECT_ID\nexport const sdkApiKey = process.env.NEXT_PUBLIC_SDK_API_KEY\nexport const dashboardApiKey = process.env. NEXT_PUBLIC_DASHBOARD_API_KEY\n\nexport const apiHost = process.env.NEXT_PUBLIC_API_HOST\nexport const alchemyApiKey = process.env.NEXT_PUBLIC_ALCHEMY_API_KEY\nexport const infuraApiKey = process.env.NEXT_PUBLIC_APP_INFURA_ID\nexport const dashboardServerURL = process.env.NEXT_PUBLIC_DASHBOARD_SERVER_URL\n\nexport const jsonRPCPolygon = process.env.NEXT_PUBLIC_JSON_RPC_POLYGON\nexport const jsonRPCMainnet = process.env.NEXT_PUBLIC_JSON_RPC_MAINNET\nexport const jsonRPCBase = process.env.NEXT_PUBLIC_JSON_RPC_BASE\nexport const jsonRPCZKEVM = process.env.NEXT_PUBLIC_JSON_RPC_IMMUTABLE_ZKEVM\nexport const jsonRPCXLayer = process.env.NEXT_PUBLIC_JSON_RPC_XLAYER\nexport const jsonRPCZero = process.env.NEXT_PUBLIC_JSON_RPC_ZERO"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAO,MAAM;AACN,MAAM;AACN,MAAM;AAEN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AAEN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM"}},
    {"offset": {"line": 585, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 591, "column": 0}, "map": {"version":3,"sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/src/app/configs/wagmi.tsx"],"sourcesContent":["import { cookieStorage, createStorage } from '@wagmi/core'\nimport { WagmiAdapter } from '@reown/appkit-adapter-wagmi'\nimport { mainnet, arbitrum, base, polygon } from '@reown/appkit/networks'\nimport { coinbaseWallet } from 'wagmi/connectors'\n\nimport {\n  projectId\n} from '@/app/configs'\n\nif (!projectId) {\n  throw new Error('Project ID is not defined')\n}\n\nexport const networks = [\n  mainnet,\n  arbitrum,\n  base,\n  polygon\n]\n\n//Set up the Wagmi Adapter (Config)\nexport const wagmiAdapter = new WagmiAdapter({\n  storage: createStorage({\n    storage: cookieStorage\n  }),\n  ssr: true,\n  projectId,\n  networks,\n  connectors: [\n    coinbaseWallet()\n  ]\n})\n\nexport const config = wagmiAdapter.wagmiConfig"],"names":[],"mappings":";;;;;AACA;AACA;AAGA;AAHA;AAAA;AAAA;AAAA;AADA;AADA;AAAA;AAGA;;;;;;AAMA,IAAI,CAAC,+HAAA,CAAA,YAAS,EAAE;IACd,MAAM,IAAI,MAAM;AAClB;AAEO,MAAM,WAAW;IACtB,qMAAA,CAAA,UAAO;IACP,sMAAA,CAAA,WAAQ;IACR,kMAAA,CAAA,OAAI;IACJ,qMAAA,CAAA,UAAO;CACR;AAGM,MAAM,eAAe,IAAI,qLAAA,CAAA,eAAY,CAAC;IAC3C,SAAS,CAAA,GAAA,+JAAA,CAAA,gBAAa,AAAD,EAAE;QACrB,SAAS,iKAAA,CAAA,gBAAa;IACxB;IACA,KAAK;IACL,WAAA,+HAAA,CAAA,YAAS;IACT;IACA,YAAY;QACV,CAAA,GAAA,sKAAA,CAAA,iBAAc,AAAD;KACd;AACH;AAEO,MAAM,SAAS,aAAa,WAAW"}},
    {"offset": {"line": 633, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 639, "column": 0}, "map": {"version":3,"sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/src/app/connect-providers.tsx"],"sourcesContent":["'use client'\n\nimport {\n  wagmiAdapter\n} from '@/app/configs/wagmi'\nimport {\n  projectId\n} from '@/app/configs'\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\nimport { createAppKit } from '@reown/appkit/react'\nimport { mainnet, arbitrum } from '@reown/appkit/networks'\nimport React, { type ReactNode } from 'react'\nimport { cookieToInitialState, WagmiProvider, type Config } from 'wagmi'\n\n// Set up queryClient\nconst queryClient = new QueryClient()\n\nif (!projectId) {\n  throw new Error('Project ID is not defined')\n}\n\n\n// Set up metadata\nconst metadata = {\n  name: 'Linkdrop Claim App',\n  description: 'Linkdrop Claim App',\n  url: 'https://linkdrop.io', // origin must match your domain & subdomain\n  icons: ['https://avatars.githubusercontent.com/u/37784886']\n}\n\ncreateAppKit({\n  adapters: [wagmiAdapter],\n  projectId,\n  networks: [mainnet, arbitrum],\n  defaultNetwork: mainnet,\n  metadata: metadata,\n  featuredWalletIds: [\n    'fd20dc426fb37566d803205b19bbc1d4096b248ac04548e3cfb6b3a38bd033aa',\n    'c57ca95b47569778a828d19178114f4db188b89b763c899ba0be274e97267d96',\n    '1ae92b26df02f0abca6304df07debccd18262fdf5fe82daa81593582dac9a369',\n    '4622a2b2d6af1c9844944291e5e7351a6aa24cd7b23099efac1b2fd875da31a0'\n  ],\n  features: {\n    analytics: true // Optional - defaults to your Cloud configuration\n  }\n})\n\nfunction ContextProvider({ children, cookies }: { children: ReactNode; cookies: string | null }) {\n  const initialState = cookieToInitialState(wagmiAdapter.wagmiConfig as Config, cookies)\n\n  return (\n    <WagmiProvider config={wagmiAdapter.wagmiConfig as Config} initialState={initialState}>\n      <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n    </WagmiProvider>\n  )\n}\n\nexport default ContextProvider"],"names":[],"mappings":";;;;AAEA;AAGA;AAIA;AACA;AAFA;AACA;AACA;AAAA;AAEA;AAAA;AAJA;AARA;;;;;;;;AAcA,qBAAqB;AACrB,MAAM,cAAc,IAAI,6KAAA,CAAA,cAAW;AAEnC,IAAI,CAAC,+HAAA,CAAA,YAAS,EAAE;IACd,MAAM,IAAI,MAAM;AAClB;AAGA,kBAAkB;AAClB,MAAM,WAAW;IACf,MAAM;IACN,aAAa;IACb,KAAK;IACL,OAAO;QAAC;KAAmD;AAC7D;AAEA,CAAA,GAAA,oLAAA,CAAA,eAAY,AAAD,EAAE;IACX,UAAU;QAAC,+HAAA,CAAA,eAAY;KAAC;IACxB,WAAA,+HAAA,CAAA,YAAS;IACT,UAAU;QAAC,qMAAA,CAAA,UAAO;QAAE,sMAAA,CAAA,WAAQ;KAAC;IAC7B,gBAAgB,qMAAA,CAAA,UAAO;IACvB,UAAU;IACV,mBAAmB;QACjB;QACA;QACA;QACA;KACD;IACD,UAAU;QACR,WAAW,KAAK,kDAAkD;IACpE;AACF;AAEA,SAAS,gBAAgB,EAAE,QAAQ,EAAE,OAAO,EAAmD;IAC7F,MAAM,eAAe,CAAA,GAAA,iKAAA,CAAA,uBAAoB,AAAD,EAAE,+HAAA,CAAA,eAAY,CAAC,WAAW,EAAY;IAE9E,qBACE,8OAAC,+IAAA,CAAA,gBAAa;QAAC,QAAQ,+HAAA,CAAA,eAAY,CAAC,WAAW;QAAY,cAAc;kBACvE,cAAA,8OAAC,sLAAA,CAAA,sBAAmB;YAAC,QAAQ;sBAAc;;;;;;;;;;;AAGjD;uCAEe"}},
    {"offset": {"line": 717, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}