{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"_version.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/_version.ts"],"sourcesContent":["export const version = \"providers/5.7.2\";\n"],"names":[],"mappings":";;;AAAO,MAAM,OAAO,GAAG,iBAAiB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 11, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"file":"formatter.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/formatter.ts"],"sourcesContent":["\"use strict\";\n\nimport { Block, TransactionReceipt, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport type FormatFunc = (value: any) => any;\n\nexport type FormatFuncs = { [ key: string ]: FormatFunc };\n\nexport type Formats = {\n    transaction: FormatFuncs,\n    transactionRequest: FormatFuncs,\n    receipt: FormatFuncs,\n    receiptLog: FormatFuncs,\n    block: FormatFuncs,\n    blockWithTransactions: FormatFuncs,\n    filter: FormatFuncs,\n    filterLog: FormatFuncs,\n};\n\nexport class Formatter {\n    readonly formats: Formats;\n\n    constructor() {\n        this.formats = this.getDefaultFormats();\n    }\n\n    getDefaultFormats(): Formats {\n        const formats: Formats = <Formats>({ });\n\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n\n        const strictData = (v: any) => { return this.data(v, true); };\n\n        formats.transaction = {\n            hash: hash,\n\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n\n            confirmations: Formatter.allowNull(number, null),\n\n            from: address,\n\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n\n            creates: Formatter.allowNull(address, null),\n\n            raw: Formatter.allowNull(data),\n        };\n\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),// @TODO: should this be data?\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n\n        formats.block = {\n            hash: Formatter.allowNull(hash),\n            parentHash: hash,\n            number: number,\n\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n\n            miner: Formatter.allowNull(address),\n            extraData: data,\n\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n\n            topics: Formatter.arrayOf(hash),\n\n            transactionHash: hash,\n            logIndex: number,\n        };\n\n        return formats;\n    }\n\n    accessList(accessList: Array<any>): AccessList {\n        return accessListify(accessList || []);\n    }\n\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number: any): number {\n        if (number === \"0x\") { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    type(number: any): number {\n        if (number === \"0x\" || number == null) { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    // Strict! Used on input.\n    bigNumber(value: any): BigNumber {\n        return BigNumber.from(value);\n    }\n\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value: any): boolean {\n        if (typeof(value) === \"boolean\") { return value; }\n        if (typeof(value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") { return true; }\n            if (value === \"false\") { return false; }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n\n    hex(value: any, strict?: boolean): string {\n        if (typeof(value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n            if (isHexString(value)) {\n               return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n\n    data(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n\n    // Requires an address\n    // Strict! Used on input.\n    address(value: any): string {\n        return getAddress(value);\n    }\n\n    callAddress(value: any): string {\n        if (!isHexString(value, 32)) { return null; }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null: address;\n    }\n\n    contractAddress(value: any): string {\n        return getContractAddress(value);\n    }\n\n    // Strict! Used on input.\n    blockTag(blockTag: any): string {\n        if (blockTag == null) { return \"latest\"; }\n\n        if (blockTag === \"earliest\") { return \"0x0\"; }\n\n        switch (blockTag) {\n            case \"earliest\": return \"0x0\";\n            case \"latest\": case \"pending\": case \"safe\": case \"finalized\":\n                return blockTag;\n        }\n\n        if (typeof(blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(<number | string>blockTag);\n        }\n\n        throw new Error(\"invalid blockTag\");\n    }\n\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value: any): number {\n        if (value == null) { return null; }\n\n        const v = BigNumber.from(value);\n\n        try {\n            return v.toNumber();\n        } catch (error) { }\n\n       return null;\n    }\n\n    uint256(value: any): string {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n\n    _block(value: any, format: any): Block {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty: value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null: BigNumber.from(difficulty));\n        return result;\n    }\n\n    block(value: any): Block {\n        return this._block(value, this.formats.block);\n    }\n\n    blockWithTransactions(value: any): Block {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n\n    // Strict! Used on input.\n    transactionRequest(value: any): any {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n\n    transactionResponse(transaction: any): TransactionResponse {\n\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n\n        if ((transaction.type === 1 || transaction.type === 2)&& transaction.accessList == null) {\n            transaction.accessList = [ ];\n        }\n\n        const result: TransactionResponse = Formatter.check(this.formats.transaction, transaction);\n\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            result.chainId = chainId;\n\n        } else {\n            let chainId = transaction.networkId;\n\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            if (typeof(chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) { chainId = 0; }\n                chainId = parseInt(chainId);\n            }\n\n            if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n            result.chainId = chainId;\n        }\n\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n\n        return result;\n    }\n\n    transaction(value: any): any {\n        return parseTransaction(value);\n    }\n\n    receiptLog(value: any): any {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n\n    receipt(value: any): TransactionReceipt {\n        const result: TransactionReceipt = Formatter.check(this.formats.receipt, value);\n\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                } else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            } else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n\n        return result;\n    }\n\n    topics(value: any): any {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n\n        } else if (value != null) {\n            return this.hash(value, true);\n        }\n\n        return null;\n    }\n\n    filter(value: any): any {\n        return Formatter.check(this.formats.filter, value);\n    }\n\n    filterLog(value: any): any {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n\n    static check(format: { [ name: string ]: FormatFunc }, object: any): any {\n        const result: any = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) { result[key] = value; }\n            } catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n\n    // if value is null-ish, nullValue is returned\n    static allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n        return (function(value: any) {\n            if (value == null) { return nullValue; }\n            return format(value);\n        });\n    }\n\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format: FormatFunc, replaceValue: any): FormatFunc {\n        return (function(value: any) {\n            if (!value) { return replaceValue; }\n            return format(value);\n        });\n    }\n\n    // Requires an Array satisfying check\n    static arrayOf(format: FormatFunc): FormatFunc {\n        return (function(array: any): Array<any> {\n            if (!Array.isArray(array)) { throw new Error(\"not an array\"); }\n\n            const result: any = [];\n\n            array.forEach(function(value) {\n                result.push(format(value));\n            });\n\n            return result;\n        });\n    }\n}\n\nexport interface CommunityResourcable {\n    isCommunityResource(): boolean;\n}\n\nexport function isCommunityResourcable(value: any): value is CommunityResourcable {\n    return (value && typeof(value.isCommunityResource) === \"function\");\n}\n\nexport function isCommunityResource(value: any): boolean {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) { return; }\n    throttleMessage = true;\n\n    console.log(\"========= NOTICE =========\")\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 477, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 483, "column": 0}, "map": {"version":3,"file":"base-provider.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/base-provider.ts"],"sourcesContent":["\"use strict\";\n\nimport {\n    Block, BlockTag, BlockWithTransactions, EventType, Filter, FilterByBlockHash, ForkEvent,\n    Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse\n} from \"@ethersproject/abstract-provider\";\nimport { encode as base64Encode } from \"@ethersproject/base64\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { dnsEncode, namehash } from \"@ethersproject/hash\";\nimport { getNetwork, Network, Networkish } from \"@ethersproject/networks\";\nimport { Deferrable, defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { Transaction } from \"@ethersproject/transactions\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\n\nimport bech32 from \"bech32\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Formatter } from \"./formatter\";\n\nconst MAX_CCIP_REDIRECTS = 10;\n\n//////////////////////////////\n// Event Serializeing\n\nfunction checkTopic(topic: string): string {\n     if (topic == null) { return \"null\"; }\n     if (hexDataLength(topic) !== 32) {\n         logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n     }\n     return topic.toLowerCase();\n}\n\nfunction serializeTopics(topics: Array<string | Array<string>>): string {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) { topics.pop(); }\n\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n\n            // Only track unique OR-topics\n            const unique: { [ topic: string ]: boolean } = { }\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n\n            return sorted.join(\"|\");\n\n        } else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\n\nfunction deserializeTopics(data: string): Array<string | Array<string>> {\n    if (data === \"\") { return [ ]; }\n\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") { return [ ]; }\n\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null: topic);\n        });\n\n        return ((comps.length === 1) ? comps[0]: comps);\n    });\n}\n\nfunction getEventTag(eventName: EventType): string {\n    if (typeof(eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n\n    } else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n\n    } else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n\n    } else if (eventName && typeof(eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n\n    throw new Error(\"invalid event - \" + eventName);\n}\n\n//////////////////////////////\n// Helper Object\n\nfunction getTime() {\n    return (new Date()).getTime();\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\n//////////////////////////////\n// Provider Object\n\n\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\n\nconst PollableEvents = [ \"block\", \"network\", \"pending\", \"poll\" ];\n\nexport class Event {\n    readonly listener: Listener;\n    readonly once: boolean;\n    readonly tag: string;\n\n    _lastBlockNumber: number\n    _inflight: boolean;\n\n    constructor(tag: string, listener: Listener, once: boolean) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n\n        this._lastBlockNumber = -2;\n        this._inflight = false;\n    }\n\n    get event(): EventType {\n        switch (this.type) {\n            case \"tx\":\n               return this.hash;\n            case \"filter\":\n               return this.filter;\n        }\n        return this.tag;\n    }\n\n    get type(): string {\n        return this.tag.split(\":\")[0]\n    }\n\n    get hash(): string {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") { return null; }\n        return comps[1];\n    }\n\n    get filter(): Filter {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") { return null; }\n        const address = comps[1];\n\n        const topics = deserializeTopics(comps[2]);\n        const filter: Filter = { };\n\n        if (topics.length > 0) { filter.topics = topics; }\n        if (address && address !== \"*\") { filter.address = address; }\n\n        return filter;\n    }\n\n    pollable(): boolean {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n\nexport interface EnsResolver {\n\n    // Name this Resolver is associated with\n    readonly name: string;\n\n    // The address of the resolver\n    readonly address: string;\n\n    // Multichain address resolution (also normal address resolution)\n    // See: https://eips.ethereum.org/EIPS/eip-2304\n    getAddress(coinType?: 60): Promise<null | string>\n\n    // Contenthash field\n    // See: https://eips.ethereum.org/EIPS/eip-1577\n    getContentHash(): Promise<null | string>;\n\n    // Storage of text records\n    // See: https://eips.ethereum.org/EIPS/eip-634\n    getText(key: string): Promise<null | string>;\n};\n\nexport interface EnsProvider {\n    resolveName(name: string): Promise<null | string>;\n    lookupAddress(address: string): Promise<null | string>;\n    getResolver(name: string): Promise<null | EnsResolver>;\n}\n\ntype CoinInfo = {\n    symbol: string,\n    ilk?: string,     // General family\n    prefix?: string,  // Bech32 prefix\n    p2pkh?: number,   // Pay-to-Public-Key-Hash Version\n    p2sh?: number,    // Pay-to-Script-Hash Version\n};\n\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos: { [ coinType: string ]: CoinInfo } = {\n    \"0\":   { symbol: \"btc\",  p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\":   { symbol: \"ltc\",  p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\":   { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\":  { symbol: \"eth\",  ilk: \"eth\" },\n    \"61\":  { symbol: \"etc\",  ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\n\nfunction bytes32ify(value: number): string {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nexport interface Avatar {\n    url: string;\n    linkage: Array<{ type: string, content: string }>;\n}\n\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n\nfunction _parseString(result: string, start: number): null | string {\n    try {\n        return toUtf8String(_parseBytes(result, start));\n    } catch(error) { }\n    return null;\n}\n\nfunction _parseBytes(result: string, start: number): null | string {\n    if (result === \"0x\") { return null; }\n\n    const offset = BigNumber.from(hexDataSlice(result, start, start + 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link: string): string {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    } else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    } else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n\n    return `https:/\\/gateway.ipfs.io/ipfs/${ link }`;\n}\n\nfunction numPad(value: number): Uint8Array {\n    const result = arrayify(value);\n    if (result.length > 32) { throw new Error(\"internal; should not happen\"); }\n\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\n\nfunction bytesPad(value: Uint8Array): Uint8Array {\n    if ((value.length % 32) === 0) { return value; }\n\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas: Array<BytesLike>) {\n    const result: Array<Uint8Array> = [ ];\n\n    let byteCount = 0;\n\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(null);\n        byteCount += 32;\n    }\n\n    for (let i = 0; i < datas.length; i++) {\n        const data = arrayify(datas[i]);\n\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n\n    return hexConcat(result);\n}\n\nexport class Resolver implements EnsResolver {\n    readonly provider: BaseProvider;\n\n    readonly name: string;\n    readonly address: string;\n\n    readonly _resolvedAddress: null | string;\n\n    // For EIP-2544 names, the ancestor that provided the resolver\n    _supportsEip2544: null | Promise<boolean>;\n\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider: BaseProvider, address: string, name: string, resolvedAddress?: string) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n\n    supportsWildcard(): Promise<boolean> {\n        if (!this._supportsEip2544) {\n            // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n            this._supportsEip2544 = this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n            }).then((result) => {\n                return BigNumber.from(result).eq(1);\n            }).catch((error) => {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return false; }\n                // Rethrow the error: link is down, etc. Let future attempts retry.\n                this._supportsEip2544 = null;\n                throw error;\n            });\n        }\n\n        return this._supportsEip2544;\n    }\n\n    async _fetch(selector: string, parameters?: string): Promise<null | string> {\n\n        // e.g. keccak256(\"addr(bytes32,uint256)\")\n        const tx = {\n            to: this.address,\n            ccipReadEnabled: true,\n            data: hexConcat([ selector, namehash(this.name), (parameters || \"0x\") ])\n        };\n\n        // Wildcard support; use EIP-2544 to resolve the request\n        let parseBytes = false;\n        if (await this.supportsWildcard()) {\n            parseBytes = true;\n\n            // selector(\"resolve(bytes,bytes)\")\n            tx.data = hexConcat([ \"0x9061b923\", encodeBytes([ dnsEncode(this.name), tx.data ]) ]);\n        }\n\n        try {\n            let result = await this.provider.call(tx);\n            if ((arrayify(result).length % 32) === 4) {\n                logger.throwError(\"resolver threw error\", Logger.errors.CALL_EXCEPTION, {\n                    transaction: tx, data: result\n                });\n            }\n            if (parseBytes) { result = _parseBytes(result, 0); }\n            return result;\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n            throw error;\n        }\n    }\n\n    async _fetchBytes(selector: string, parameters?: string): Promise<null | string> {\n        const result = await this._fetch(selector, parameters);\n        if (result != null) { return _parseBytes(result, 0); }\n        return null;\n    }\n\n    _getAddress(coinType: number, hexBytes: string): string {\n        const coinInfo = coinInfos[String(coinType)];\n\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${ coinType }`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`\n            });\n        }\n\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n\n        const bytes = arrayify(hexBytes);\n\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2pkh ], (\"0x\" + p2pkh[2]) ]));\n                }\n            }\n        }\n\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2sh ], (\"0x\" + p2sh[2]) ]));\n                }\n            }\n        }\n\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            } else {\n                version = -1;\n            }\n\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n\n        return null;\n    }\n\n\n    async getAddress(coinType?: number): Promise<string> {\n        if (coinType == null) { coinType = 60; }\n\n        // If Ethereum, use the standard `addr(bytes32)`\n        if (coinType === 60) {\n            try {\n                // keccak256(\"addr(bytes32)\")\n                const result = await this._fetch(\"0x3b3b57de\");\n\n                // No address\n                if (result === \"0x\" || result === HashZero) { return null; }\n\n                return this.provider.formatter.callAddress(result);\n            } catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n                throw error;\n            }\n        }\n\n        // keccak256(\"addr(bytes32,uint256\")\n        const hexBytes = await this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n\n        // No address\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // Compute the address\n        const address = this._getAddress(coinType, hexBytes);\n\n        if (address == null) {\n            logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`,\n                coinType: coinType,\n                data: hexBytes\n            });\n        }\n\n        return address;\n    }\n\n    async getAvatar(): Promise<null | Avatar> {\n        const linkage: Array<{ type: string, content: string }> = [ { type: \"name\", content: this.name } ];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) { return null; }\n\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) { continue; }\n\n                const scheme = match[1].toLowerCase();\n\n                switch (scheme) {\n                    case \"https\":\n                        linkage.push({ type: \"url\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"data\":\n                        linkage.push({ type: \"data\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"ipfs\":\n                        linkage.push({ type: \"ipfs\", content: avatar });\n                        return { linkage, url: getIpfsLink(avatar) };\n\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"0xc87b56dd\": \"0x0e89341c\";\n                        linkage.push({ type: scheme, content: avatar });\n\n                        // The owner of this name\n                        const owner = (this._resolvedAddress || await this.getAddress());\n\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) { return null; }\n\n                        const addr = await this.provider.formatter.address(comps[0]);\n                        const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            // ownerOf(uint256 tokenId)\n                            const tokenOwner = this.provider.formatter.callAddress(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x6352211e\", tokenId ])\n                            }));\n                            if (owner !== tokenOwner) { return null; }\n                            linkage.push({ type: \"owner\", content: tokenOwner });\n\n                        } else if (scheme === \"erc1155\") {\n                            // balanceOf(address owner, uint256 tokenId)\n                            const balance = BigNumber.from(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x00fdd58e\", hexZeroPad(owner, 32), tokenId ])\n                            }));\n                            if (balance.isZero()) { return null; }\n                            linkage.push({ type: \"balance\", content: balance.toString() });\n                        }\n\n                        // Call the token contract for the metadata URL\n                        const tx = {\n                            to: this.provider.formatter.address(comps[0]),\n                            data: hexConcat([ selector, tokenId ])\n                        };\n\n                        let metadataUrl = _parseString(await this.provider.call(tx), 0);\n                        if (metadataUrl == null) { return null; }\n                        linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                        }\n\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n\n                        linkage.push({ type: \"metadata-url\", content: metadataUrl });\n\n                        // Get the token metadata\n                        const metadata = await fetchJson(metadataUrl);\n                        if (!metadata) { return null; }\n                        linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof(imageUrl) !== \"string\") { return null; }\n\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        } else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) { return null; }\n\n                            linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n\n                        linkage.push({ type: \"url\", content: imageUrl });\n\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        } catch (error) { }\n\n        return null;\n    }\n\n    async getContentHash(): Promise<string> {\n\n        // keccak256(\"contenthash()\")\n        const hexBytes = await this._fetchBytes(\"0xbc1c58d1\");\n\n        // No contenthash\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // IPFS (CID: 1, Type: DAG-PB)\n        const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const length = parseInt(ipfs[3], 16);\n            if (ipfs[4].length === length * 2) {\n                return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n            }\n        }\n\n        // IPNS (CID: 1, Type: libp2p-key)\n        const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipns) {\n            const length = parseInt(ipns[3], 16);\n            if (ipns[4].length === length * 2) {\n                return \"ipns:/\\/\" + Base58.encode(\"0x\" + ipns[1]);\n            }\n        }\n\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/)\n        if (swarm) {\n            if (swarm[1].length === (32 * 2)) {\n                return \"bzz:/\\/\" + swarm[1]\n            }\n        }\n\n        const skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);\n        if (skynet) {\n            if (skynet[1].length === (34 * 2)) {\n                // URL Safe base64; https://datatracker.ietf.org/doc/html/rfc4648#section-5\n                const urlSafe: Record<string, string> = { \"=\": \"\", \"+\": \"-\", \"/\": \"_\" };\n                const hash = base64Encode(\"0x\" + skynet[1]).replace(/[=+\\/]/g, (a) => (urlSafe[a]));\n                return \"sia:/\\/\" + hash;\n            }\n        }\n\n        return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"getContentHash()\",\n            data: hexBytes\n        });\n    }\n\n    async getText(key: string): Promise<string> {\n\n        // The key encoded as parameter to fetchBytes\n        let keyBytes = toUtf8Bytes(key);\n\n        // The nodehash consumes the first slot, so the string pointer targets\n        // offset 64, with the length at offset 64 and data starting at offset 96\n        keyBytes = concat([ bytes32ify(64), bytes32ify(keyBytes.length), keyBytes ]);\n\n        // Pad to word-size (32 bytes)\n        if ((keyBytes.length % 32) !== 0) {\n            keyBytes = concat([ keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32)) ])\n        }\n\n        const hexBytes = await this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        return toUtf8String(hexBytes);\n    }\n}\n\nlet defaultFormatter: Formatter = null;\n\nlet nextPollId = 1;\n\nexport class BaseProvider extends Provider implements EnsProvider {\n    _networkPromise: Promise<Network>;\n    _network: Network;\n\n    _events: Array<Event>;\n\n    formatter: Formatter;\n\n    // To help mitigate the eventually consistent nature of the blockchain\n    // we keep a mapping of events we emit. If we emit an event X, we expect\n    // that a user should be able to query for that event in the callback,\n    // if the node returns null, we stall the response until we get back a\n    // meaningful value, since we may be hitting a re-org, or a node that\n    // has not indexed the event yet.\n    // Events:\n    //   - t:{hash}    - Transaction hash\n    //   - b:{hash}    - BlockHash\n    //   - block       - The most recent emitted block\n    _emitted: { [ eventName: string ]: number | \"pending\" };\n\n    _pollingInterval: number;\n    _poller: NodeJS.Timer;\n    _bootstrapPoll: NodeJS.Timer;\n\n    _lastBlockNumber: number;\n    _maxFilterBlockRange: number;\n\n    _fastBlockNumber: number;\n    _fastBlockNumberPromise: Promise<number>;\n    _fastQueryDate: number;\n\n    _maxInternalBlockNumber: number;\n    _internalBlockNumber: Promise<{ blockNumber: number, reqTime: number, respTime: number }>;\n\n    readonly anyNetwork: boolean;\n\n    disableCcipRead: boolean;\n\n\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n\n    constructor(network: Networkish | Promise<Network>) {\n        super();\n\n        // Events being listened to\n        this._events = [];\n\n        this._emitted = { block: -2 };\n\n        this.disableCcipRead = false;\n\n        this.formatter = new.target.getFormatter();\n\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) { network = this.detectNetwork(); }\n\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n\n        } else {\n            const knownNetwork = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n\n            } else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n\n        this._maxInternalBlockNumber = -1024;\n\n        this._lastBlockNumber = -2;\n        this._maxFilterBlockRange = 10;\n\n        this._pollingInterval = 4000;\n\n        this._fastQueryDate = 0;\n    }\n\n    async _ready(): Promise<Network> {\n        if (this._network == null) {\n            let network: Network = null;\n            if (this._networkPromise) {\n                try {\n                    network = await this._networkPromise;\n                } catch (error) { }\n            }\n\n            // Try the Provider's network detection (this MUST throw if it cannot)\n            if (network == null) {\n                network = await this.detectNetwork();\n            }\n\n            // This should never happen; every Provider sub-class should have\n            // suggested a network by here (or have thrown).\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // Possible this call stacked so do not call defineReadOnly again\n            if (this._network == null) {\n                if (this.anyNetwork) {\n                    this._network = network;\n                } else {\n                    defineReadOnly(this, \"_network\", network);\n                }\n                this.emit(\"network\", network, null);\n            }\n        }\n\n        return this._network;\n    }\n\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready(): Promise<Network> {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter(): Formatter {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network: Networkish): Network {\n        return getNetwork((network == null) ? \"homestead\": network);\n    }\n\n    async ccipReadFetch(tx: Transaction, calldata: string, urls: Array<string>): Promise<null | string> {\n        if (this.disableCcipRead || urls.length === 0) { return null; }\n\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n\n        const errorMessages: Array<string> = [ ];\n\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n\n            // If no {data} is present, use POST; otherwise GET\n            const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n\n            const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n                value.status = response.statusCode;\n                return value;\n            });\n\n            if (result.data) { return result.data; }\n\n            const errorMessage = (result.message || \"unknown error\");\n\n            // 4xx indicates the result is not present; stop\n            if (result.status >= 400 && result.status < 500) {\n                return logger.throwError(`response not found during CCIP fetch: ${ errorMessage }`, Logger.errors.SERVER_ERROR, { url, errorMessage });\n            }\n\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n\n        return logger.throwError(`error encountered during CCIP fetch: ${ errorMessages.map((m) => JSON.stringify(m)).join(\", \") }`, Logger.errors.SERVER_ERROR, {\n            urls, errorMessages\n        });\n    }\n\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    async _getInternalBlockNumber(maxAge: number): Promise<number> {\n        await this._ready();\n\n        // Allowing stale data up to maxAge old\n        if (maxAge > 0) {\n\n            // While there are pending internal block requests...\n            while (this._internalBlockNumber) {\n\n                // ...\"remember\" which fetch we started with\n                const internalBlockNumber = this._internalBlockNumber;\n\n                try {\n                    // Check the result is not too stale\n                    const result = await internalBlockNumber;\n                    if ((getTime() - result.respTime) <= maxAge) {\n                        return result.blockNumber;\n                    }\n\n                    // Too old; fetch a new value\n                    break;\n\n                } catch(error) {\n\n                    // The fetch rejected; if we are the first to get the\n                    // rejection, drop through so we replace it with a new\n                    // fetch; all others blocked will then get that fetch\n                    // which won't match the one they \"remembered\" and loop\n                    if (this._internalBlockNumber === internalBlockNumber) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        const reqTime = getTime();\n\n        const checkInternalBlockNumber = resolveProperties({\n            blockNumber: this.perform(\"getBlockNumber\", { }),\n            networkError: this.getNetwork().then((network) => (null), (error) => (error))\n        }).then(({ blockNumber, networkError }) => {\n            if (networkError) {\n                // Unremember this bad internal block number\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n                throw networkError;\n            }\n\n            const respTime = getTime();\n\n            blockNumber = BigNumber.from(blockNumber).toNumber();\n            if (blockNumber < this._maxInternalBlockNumber) { blockNumber = this._maxInternalBlockNumber; }\n\n            this._maxInternalBlockNumber = blockNumber;\n            this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n            return { blockNumber, reqTime, respTime };\n        });\n\n        this._internalBlockNumber = checkInternalBlockNumber;\n\n        // Swallow unhandled exceptions; if needed they are handled else where\n        checkInternalBlockNumber.catch((error) => {\n            // Don't null the dead (rejected) fetch, if it has already been updated\n            if (this._internalBlockNumber === checkInternalBlockNumber) {\n                this._internalBlockNumber = null;\n            }\n        });\n\n        return (await checkInternalBlockNumber).blockNumber;\n    }\n\n    async poll(): Promise<void> {\n        const pollId = nextPollId++;\n\n        // Track all running promises, so we can trigger a post-poll once they are complete\n        const runners: Array<Promise<void>> = [];\n\n        let blockNumber: number = null;\n        try {\n            blockNumber = await this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n        } catch (error) {\n            this.emit(\"error\", error);\n            return;\n        }\n        this._setFastBlockNumber(blockNumber);\n\n        // Emit a poll event after we have the latest (fast) block number\n        this.emit(\"poll\", pollId, blockNumber);\n\n        // If the block has not changed, meh.\n        if (blockNumber === this._lastBlockNumber) {\n            this.emit(\"didPoll\", pollId);\n            return;\n        }\n\n        // First polling cycle, trigger a \"block\" events\n        if (this._emitted.block === -2) {\n            this._emitted.block = blockNumber - 1;\n        }\n\n        if (Math.abs((<number>(this._emitted.block)) - blockNumber) > 1000) {\n            logger.warn(`network block skew detected; skipping block events (emitted=${ this._emitted.block } blockNumber${ blockNumber })`);\n            this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                blockNumber: blockNumber,\n                event: \"blockSkew\",\n                previousBlockNumber: this._emitted.block\n            }));\n            this.emit(\"block\", blockNumber);\n\n        } else {\n            // Notify all listener for each block that has passed\n            for (let i = (<number>this._emitted.block) + 1; i <= blockNumber; i++) {\n                this.emit(\"block\", i);\n            }\n        }\n\n        // The emitted block was updated, check for obsolete events\n        if ((<number>this._emitted.block) !== blockNumber) {\n            this._emitted.block = blockNumber;\n\n            Object.keys(this._emitted).forEach((key) => {\n                // The block event does not expire\n                if (key === \"block\") { return; }\n\n                // The block we were at when we emitted this event\n                const eventBlockNumber = this._emitted[key];\n\n                // We cannot garbage collect pending transactions or blocks here\n                // They should be garbage collected by the Provider when setting\n                // \"pending\" events\n                if (eventBlockNumber === \"pending\") { return; }\n\n                // Evict any transaction hashes or block hashes over 12 blocks\n                // old, since they should not return null anyways\n                if (blockNumber - eventBlockNumber > 12) {\n                    delete this._emitted[key];\n                }\n            });\n        }\n\n        // First polling cycle\n        if (this._lastBlockNumber === -2) {\n            this._lastBlockNumber = blockNumber - 1;\n        }\n        // Find all transaction hashes we are waiting on\n        this._events.forEach((event) => {\n            switch (event.type) {\n                case \"tx\": {\n                    const hash = event.hash;\n                    let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt || receipt.blockNumber == null) { return null; }\n                        this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                        this.emit(hash, receipt);\n                        return null;\n                    }).catch((error: Error) => { this.emit(\"error\", error); });\n\n                    runners.push(runner);\n\n                    break;\n                }\n\n                case \"filter\": {\n                    // We only allow a single getLogs to be in-flight at a time\n                    if (!event._inflight) {\n                        event._inflight = true;\n\n                        // This is the first filter for this event, so we want to\n                        // restrict events to events that happened no earlier than now\n                        if (event._lastBlockNumber === -2) {\n                            event._lastBlockNumber = blockNumber - 1;\n                        }\n\n                        // Filter from the last *known* event; due to load-balancing\n                        // and some nodes returning updated block numbers before\n                        // indexing events, a logs result with 0 entries cannot be\n                        // trusted and we must retry a range which includes it again\n                        const filter = event.filter;\n                        filter.fromBlock = event._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n\n                        // Prevent fitler ranges from growing too wild, since it is quite\n                        // likely there just haven't been any events to move the lastBlockNumber.\n                        const minFromBlock = filter.toBlock - this._maxFilterBlockRange;\n                        if (minFromBlock > filter.fromBlock) { filter.fromBlock = minFromBlock; }\n\n                        if (filter.fromBlock < 0) { filter.fromBlock = 0; }\n\n                        const runner = this.getLogs(filter).then((logs) => {\n                            // Allow the next getLogs\n                            event._inflight = false;\n\n                            if (logs.length === 0) { return; }\n\n                            logs.forEach((log: Log) => {\n                                // Only when we get an event for a given block number\n                                // can we trust the events are indexed\n                                if (log.blockNumber > event._lastBlockNumber) {\n                                    event._lastBlockNumber = log.blockNumber;\n                                }\n\n                                // Make sure we stall requests to fetch blocks and txs\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n\n                                this.emit(filter, log);\n                            });\n                        }).catch((error: Error) => {\n                            this.emit(\"error\", error);\n\n                            // Allow another getLogs (the range was not updated)\n                            event._inflight = false;\n                        });\n                        runners.push(runner);\n                    }\n\n                    break;\n                }\n            }\n        });\n\n        this._lastBlockNumber = blockNumber;\n\n        // Once all events for this loop have been processed, emit \"didPoll\"\n        Promise.all(runners).then(() => {\n            this.emit(\"didPoll\", pollId);\n        }).catch((error) => { this.emit(\"error\", error); });\n\n        return;\n    }\n\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber: number): void {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) { this.poll(); }\n    }\n\n    get network(): Network {\n        return this._network;\n    }\n\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    async detectNetwork(): Promise<Network> {\n        return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"provider.detectNetwork\"\n        });\n    }\n\n    async getNetwork(): Promise<Network> {\n        const network = await this._ready();\n\n        // Make sure we are still connected to the same network; this is\n        // only an external call for backends which can have the underlying\n        // network change spontaneously\n        const currentNetwork = await this.detectNetwork();\n        if (network.chainId !== currentNetwork.chainId) {\n\n            // We are allowing network changes, things can get complex fast;\n            // make sure you know what you are doing if you use \"any\"\n            if (this.anyNetwork) {\n                this._network = currentNetwork;\n\n                // Reset all internal block number guards and caches\n                this._lastBlockNumber = -2;\n                this._fastBlockNumber = null;\n                this._fastBlockNumberPromise = null;\n                this._fastQueryDate = 0;\n                this._emitted.block = -2;\n                this._maxInternalBlockNumber = -1024;\n                this._internalBlockNumber = null;\n\n                // The \"network\" event MUST happen before this method resolves\n                // so any events have a chance to unregister, so we stall an\n                // additional event loop before returning from /this/ call\n                this.emit(\"network\", currentNetwork, network);\n                await stall(0);\n\n                return this._network;\n            }\n\n            const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                event: \"changed\",\n                network: network,\n                detectedNetwork: currentNetwork\n            });\n\n            this.emit(\"error\", error);\n            throw error;\n        }\n\n        return network;\n    }\n\n    get blockNumber(): number {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber: -1;\n    }\n\n    get polling(): boolean {\n        return (this._poller != null);\n    }\n\n    set polling(value: boolean) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) { this.poll(); }\n\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n\n        } else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n\n    get pollingInterval(): number {\n        return this._pollingInterval;\n    }\n\n    set pollingInterval(value: number) {\n        if (typeof(value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n\n        this._pollingInterval = value;\n\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n\n    _getFastBlockNumber(): Promise<number> {\n        const now = getTime();\n\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n\n        return this._fastBlockNumberPromise;\n    }\n\n    _setFastBlockNumber(blockNumber: number): void {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) { return; }\n\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n\n    async waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt> {\n        return this._waitForTransaction(transactionHash, (confirmations == null) ? 1: confirmations, timeout || 0, null);\n    }\n\n    async _waitForTransaction(transactionHash: string, confirmations: number, timeout: number, replaceable: { data: string, from: string, nonce: number, to: string, value: BigNumber, startBlock: number }): Promise<TransactionReceipt> {\n        const receipt = await this.getTransactionReceipt(transactionHash);\n\n        // Receipt is already good\n        if ((receipt ? receipt.confirmations: 0) >= confirmations) { return receipt; }\n\n        // Poll until the receipt is good...\n        return new Promise((resolve, reject) => {\n            const cancelFuncs: Array<() => void> = [];\n\n            let done = false;\n            const alreadyDone = function() {\n                if (done) { return true; }\n                done = true;\n                cancelFuncs.forEach((func) => { func(); });\n                return false;\n            };\n\n            const minedHandler = (receipt: TransactionReceipt) => {\n                if (receipt.confirmations < confirmations) { return; }\n                if (alreadyDone()) { return; }\n                resolve(receipt);\n            }\n            this.on(transactionHash, minedHandler);\n            cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n\n            if (replaceable) {\n                let lastBlockNumber = replaceable.startBlock;\n                let scannedBlock: number = null;\n                const replaceHandler = async (blockNumber: number) => {\n                    if (done) { return; }\n\n                    // Wait 1 second; this is only used in the case of a fault, so\n                    // we will trade off a little bit of latency for more consistent\n                    // results and fewer JSON-RPC calls\n                    await stall(1000);\n\n                    this.getTransactionCount(replaceable.from).then(async (nonce) => {\n                        if (done) { return; }\n\n                        if (nonce <= replaceable.nonce) {\n                            lastBlockNumber = blockNumber;\n\n                        } else {\n                            // First check if the transaction was mined\n                            {\n                                const mined = await this.getTransaction(transactionHash);\n                                if (mined && mined.blockNumber != null) { return; }\n                            }\n\n                            // First time scanning. We start a little earlier for some\n                            // wiggle room here to handle the eventually consistent nature\n                            // of blockchain (e.g. the getTransactionCount was for a\n                            // different block)\n                            if (scannedBlock == null) {\n                                scannedBlock = lastBlockNumber - 3;\n                                if (scannedBlock < replaceable.startBlock) {\n                                    scannedBlock = replaceable.startBlock;\n                                }\n                            }\n\n                            while (scannedBlock <= blockNumber) {\n                                if (done) { return; }\n\n                                const block = await this.getBlockWithTransactions(scannedBlock);\n                                for (let ti = 0; ti < block.transactions.length; ti++) {\n                                    const tx = block.transactions[ti];\n\n                                    // Successfully mined!\n                                    if (tx.hash === transactionHash) { return; }\n\n                                    // Matches our transaction from and nonce; its a replacement\n                                    if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                        if (done) { return; }\n\n                                        // Get the receipt of the replacement\n                                        const receipt = await this.waitForTransaction(tx.hash, confirmations);\n\n                                        // Already resolved or rejected (prolly a timeout)\n                                        if (alreadyDone()) { return; }\n\n                                        // The reason we were replaced\n                                        let reason = \"replaced\";\n                                        if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                            reason = \"repriced\";\n                                        } else  if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                            reason = \"cancelled\"\n                                        }\n\n                                        // Explain why we were replaced\n                                        reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                            reason,\n                                            replacement: this._wrapTransaction(tx),\n                                            hash: transactionHash,\n                                            receipt\n                                        }));\n\n                                        return;\n                                    }\n                                }\n                                scannedBlock++;\n                            }\n                        }\n\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n\n                    }, (error) => {\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n                    });\n                };\n\n                if (done) { return; }\n                this.once(\"block\", replaceHandler);\n\n                cancelFuncs.push(() => {\n                    this.removeListener(\"block\", replaceHandler);\n                });\n            }\n\n            if (typeof(timeout) === \"number\" && timeout > 0) {\n                const timer = setTimeout(() => {\n                    if (alreadyDone()) { return; }\n                    reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                }, timeout);\n                if (timer.unref) { timer.unref(); }\n\n                cancelFuncs.push(() => { clearTimeout(timer); });\n            }\n        });\n    }\n\n    async getBlockNumber(): Promise<number> {\n        return this._getInternalBlockNumber(0);\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        await this.getNetwork();\n\n        const result = await this.perform(\"getGasPrice\", { });\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getGasPrice\",\n                result, error\n            });\n        }\n    }\n\n    async getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getBalance\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getBalance\",\n                params, result, error\n            });\n        }\n    }\n\n    async getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getTransactionCount\", params);\n        try {\n            return BigNumber.from(result).toNumber();\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getTransactionCount\",\n                params, result, error\n            });\n        }\n    }\n\n    async getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getCode\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getCode\",\n                params, result, error\n            });\n        }\n    }\n\n    async getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag),\n            position: Promise.resolve(position).then((p) => hexValue(p))\n        });\n        const result = await this.perform(\"getStorageAt\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getStorageAt\",\n                params, result, error\n            });\n        }\n    }\n\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx: Transaction, hash?: string, startBlock?: number): TransactionResponse {\n        if (hash != null && hexDataLength(hash) !== 32) { throw new Error(\"invalid response - sendTransaction\"); }\n\n        const result = <TransactionResponse>tx;\n\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n\n        result.wait = async (confirms?: number, timeout?: number) => {\n            if (confirms == null) { confirms = 1; }\n            if (timeout == null) { timeout = 0; }\n\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n\n            const receipt = await this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) { return null; }\n\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        };\n\n        return result;\n    }\n\n    async sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        const hexTx = await Promise.resolve(signedTransaction).then(t => hexlify(t));\n        const tx = this.formatter.transaction(signedTransaction);\n        if (tx.confirmations == null) { tx.confirmations = 0; }\n        const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n        try {\n            const hash = await this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n            return this._wrapTransaction(tx, hash, blockNumber);\n        } catch (error) {\n            (<any>error).transaction = tx;\n            (<any>error).transactionHash = tx.hash;\n            throw error;\n        }\n    }\n\n    async _getTransactionRequest(transaction: Deferrable<TransactionRequest>): Promise<Transaction> {\n        const values: any = await transaction;\n\n        const tx: any = { };\n\n        [\"from\", \"to\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v): null))\n        });\n\n        [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v): null));\n        });\n\n        [\"type\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v: null));\n        });\n\n        if (values.accessList) {\n            tx.accessList = this.formatter.accessList(values.accessList);\n        }\n\n        [\"data\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v): null));\n        });\n\n        return this.formatter.transactionRequest(await resolveProperties(tx));\n    }\n\n    async _getFilter(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Filter | FilterByBlockHash> {\n        filter = await filter;\n\n        const result: any = { };\n\n        if (filter.address != null) {\n            result.address = this._getAddress(filter.address);\n        }\n\n        [\"blockHash\", \"topics\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = (<any>filter)[key];\n        });\n\n        [\"fromBlock\", \"toBlock\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = this._getBlockTag((<any>filter)[key]);\n        });\n\n        return this.formatter.filter(await resolveProperties(result));\n    }\n\n    async _call(transaction: TransactionRequest, blockTag: BlockTag, attempt: number): Promise<string> {\n        if (attempt >= MAX_CCIP_REDIRECTS) {\n            logger.throwError(\"CCIP read exceeded maximum redirections\", Logger.errors.SERVER_ERROR, {\n                redirects: attempt, transaction\n            });\n        }\n\n        const txSender = transaction.to;\n\n        const result = await this.perform(\"call\", { transaction, blockTag });\n\n        // CCIP Read request via OffchainLookup(address,string[],bytes,bytes4,bytes)\n        if (attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && (hexDataLength(result) % 32 === 4)) {\n            try {\n                const data = hexDataSlice(result, 4);\n\n                // Check the sender of the OffchainLookup matches the transaction\n                const sender = hexDataSlice(data, 0, 32);\n                if (!BigNumber.from(sender).eq(txSender)) {\n                    logger.throwError(\"CCIP Read sender did not match\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                // Read the URLs from the response\n                const urls: Array<string> = [];\n                const urlsOffset = BigNumber.from(hexDataSlice(data, 32, 64)).toNumber();\n                const urlsLength = BigNumber.from(hexDataSlice(data, urlsOffset, urlsOffset + 32)).toNumber();\n                const urlsData = hexDataSlice(data, urlsOffset + 32);\n                for (let u = 0; u < urlsLength; u++) {\n                    const url = _parseString(urlsData, u * 32);\n                    if (url == null) {\n                        logger.throwError(\"CCIP Read contained corrupt URL string\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    urls.push(url);\n                }\n\n                // Get the CCIP calldata to forward\n                const calldata = _parseBytes(data, 64);\n\n                // Get the callbackSelector (bytes4)\n                if (!BigNumber.from(hexDataSlice(data, 100, 128)).isZero()) {\n                    logger.throwError(\"CCIP Read callback selector included junk\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n                const callbackSelector = hexDataSlice(data, 96, 100);\n\n                // Get the extra data to send back to the contract as context\n                const extraData = _parseBytes(data, 128);\n\n                const ccipResult = await this.ccipReadFetch(<Transaction>transaction, calldata, urls);\n                if (ccipResult == null) {\n                    logger.throwError(\"CCIP Read disabled or provided no URLs\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                const tx = {\n                    to: txSender,\n                    data: hexConcat([ callbackSelector, encodeBytes([ ccipResult, extraData ]) ])\n                };\n\n                return this._call(tx, blockTag, attempt + 1);\n\n            } catch (error) {\n                if (error.code === Logger.errors.SERVER_ERROR) { throw error; }\n            }\n        }\n\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"call\",\n                params: { transaction, blockTag }, result, error\n            });\n        }\n\n    }\n\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const resolved = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction),\n            blockTag: this._getBlockTag(blockTag),\n            ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n        });\n        return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0: -1);\n    }\n\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction)\n        });\n\n        const result = await this.perform(\"estimateGas\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"estimateGas\",\n                params, result, error\n            });\n        }\n    }\n\n    async _getAddress(addressOrName: string | Promise<string>): Promise<string> {\n        addressOrName = await addressOrName;\n        if (typeof(addressOrName) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n        }\n\n        const address = await this.resolveName(addressOrName);\n        if (address == null) {\n            logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `resolveName(${ JSON.stringify(addressOrName) })`\n            });\n        }\n        return address;\n    }\n\n    async _getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>, includeTransactions?: boolean): Promise<Block | BlockWithTransactions> {\n        await this.getNetwork();\n\n        blockHashOrBlockTag = await blockHashOrBlockTag;\n\n        // If blockTag is a number (not \"latest\", etc), this is the block number\n        let blockNumber = -128;\n\n        const params: { [key: string]: any } = {\n            includeTransactions: !!includeTransactions\n        };\n\n        if (isHexString(blockHashOrBlockTag, 32)) {\n            params.blockHash = blockHashOrBlockTag;\n        } else {\n            try {\n                params.blockTag = await this._getBlockTag(blockHashOrBlockTag);\n                if (isHexString(params.blockTag)) {\n                    blockNumber = parseInt(params.blockTag.substring(2), 16);\n                }\n            } catch (error) {\n                logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n            }\n        }\n\n        return poll(async () => {\n            const block = await this.perform(\"getBlock\", params);\n\n            // Block was not found\n            if (block == null) {\n\n                // For blockhashes, if we didn't say it existed, that blockhash may\n                // not exist. If we did see it though, perhaps from a log, we know\n                // it exists, and this node is just not caught up yet.\n                if (params.blockHash != null) {\n                    if (this._emitted[\"b:\" + params.blockHash] == null) { return null; }\n                }\n\n                // For block tags, if we are asking for a future block, we return null\n                if (params.blockTag != null) {\n                    if (blockNumber > this._emitted.block) { return null; }\n                }\n\n                // Retry on the next block\n                return undefined;\n            }\n\n            // Add transactions\n            if (includeTransactions) {\n                let blockNumber: number = null;\n                for (let i = 0; i < block.transactions.length; i++) {\n                    const tx = block.transactions[i];\n                    if (tx.blockNumber == null) {\n                        tx.confirmations = 0;\n\n                    } else if (tx.confirmations == null) {\n                        if (blockNumber == null) {\n                            blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                        }\n\n                        // Add the confirmations using the fast block number (pessimistic)\n                        let confirmations = (blockNumber - tx.blockNumber) + 1;\n                        if (confirmations <= 0) { confirmations = 1; }\n                        tx.confirmations = confirmations;\n                    }\n                }\n\n                const blockWithTxs: any = this.formatter.blockWithTransactions(block);\n                blockWithTxs.transactions = blockWithTxs.transactions.map((tx: TransactionResponse) => this._wrapTransaction(tx));\n                return blockWithTxs;\n            }\n\n            return this.formatter.block(block);\n\n        }, { oncePoll: this });\n    }\n\n    getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block> {\n        return <Promise<Block>>(this._getBlock(blockHashOrBlockTag, false));\n    }\n\n    getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions> {\n        return <Promise<BlockWithTransactions>>(this._getBlock(blockHashOrBlockTag, true));\n    }\n\n    async getTransaction(transactionHash: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransaction\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            const tx = this.formatter.transactionResponse(result);\n\n            if (tx.blockNumber == null) {\n                tx.confirmations = 0;\n\n            } else if (tx.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - tx.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                tx.confirmations = confirmations;\n            }\n\n            return this._wrapTransaction(tx);\n        }, { oncePoll: this });\n    }\n\n    async getTransactionReceipt(transactionHash: string | Promise<string>): Promise<TransactionReceipt> {\n        await this.getNetwork();\n\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransactionReceipt\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            // \"geth-etc\" returns receipts before they are ready\n            if (result.blockHash == null) { return undefined; }\n\n            const receipt = this.formatter.receipt(result);\n\n            if (receipt.blockNumber == null) {\n                receipt.confirmations = 0;\n\n            } else if (receipt.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                receipt.confirmations = confirmations;\n            }\n\n            return receipt;\n        }, { oncePoll: this });\n    }\n\n    async getLogs(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Array<Log>> {\n        await this.getNetwork();\n        const params = await resolveProperties({ filter: this._getFilter(filter) });\n        const logs: Array<Log> = await this.perform(\"getLogs\", params);\n        logs.forEach((log) => {\n            if (log.removed == null) { log.removed = false; }\n        });\n        return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    }\n\n    async getEtherPrice(): Promise<number> {\n        await this.getNetwork();\n        return this.perform(\"getEtherPrice\", { });\n    }\n\n    async _getBlockTag(blockTag: BlockTag | Promise<BlockTag>): Promise<BlockTag> {\n        blockTag = await blockTag;\n\n        if (typeof(blockTag) === \"number\" && blockTag < 0) {\n            if (blockTag % 1) {\n                logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n            }\n\n            let blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            blockNumber += blockTag;\n            if (blockNumber < 0) { blockNumber = 0; }\n            return this.formatter.blockTag(blockNumber)\n        }\n\n        return this.formatter.blockTag(blockTag);\n    }\n\n\n    async getResolver(name: string): Promise<null | Resolver> {\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") { return null; }\n\n            // Optimization since the eth node cannot change and does\n            // not have a wildcard resolver\n            if (name !== \"eth\" && currentName === \"eth\") { return null; }\n\n            // Check the current node for a resolver\n            const addr = await this._getResolver(currentName, \"getResolver\");\n\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new Resolver(this, addr, name);\n\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) { return null; }\n\n                return resolver;\n            }\n\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n\n    }\n\n    async _getResolver(name: string, operation?: string): Promise<string> {\n        if (operation == null) { operation = \"ENS\"; }\n\n        const network = await this.getNetwork();\n\n        // No ENS...\n        if (!network.ensAddress) {\n            logger.throwError(\n                \"network does not support ENS\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { operation, network: network.name }\n            );\n        }\n\n        try {\n            // keccak256(\"resolver(bytes32)\")\n            const addrData = await this.call({\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            });\n            return this.formatter.callAddress(addrData);\n        } catch (error) {\n            // ENS registry cannot throw errors on resolver(bytes32)\n        }\n\n        return null;\n    }\n\n    async resolveName(name: string | Promise<string>): Promise<null | string> {\n        name = await name;\n\n        // If it is already an address, nothing to resolve\n        try {\n            return Promise.resolve(this.formatter.address(name));\n        } catch (error) {\n            // If is is a hexstring, the address is bad (See #694)\n            if (isHexString(name)) { throw error; }\n        }\n\n        if (typeof(name) !== \"string\") {\n            logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n        }\n\n        // Get the addr from the resolver\n        const resolver = await this.getResolver(name);\n        if (!resolver) { return null; }\n\n        return await resolver.getAddress();\n    }\n\n    async lookupAddress(address: string | Promise<string>): Promise<null | string> {\n        address = await address;\n        address = this.formatter.address(address);\n\n        const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n        const resolverAddr = await this._getResolver(node, \"lookupAddress\");\n        if (resolverAddr == null) { return null; }\n\n        // keccak(\"name(bytes32)\")\n        const name = _parseString(await this.call({\n            to: resolverAddr,\n            data: (\"0x691f3431\" + namehash(node).substring(2))\n        }), 0);\n\n        const addr = await this.resolveName(name);\n        if (addr != address) { return null; }\n\n        return name;\n    }\n\n    async getAvatar(nameOrAddress: string): Promise<null | string> {\n        let resolver: Resolver = null;\n        if (isHexString(nameOrAddress)) {\n            // Address; reverse lookup\n            const address = this.formatter.address(nameOrAddress);\n\n            const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n            const resolverAddress = await this._getResolver(node, \"getAvatar\");\n            if (!resolverAddress) { return null; }\n\n            // Try resolving the avatar against the addr.reverse resolver\n            resolver = new Resolver(this, resolverAddress, node);\n            try {\n                const avatar = await resolver.getAvatar();\n                if (avatar) { return avatar.url; }\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n            }\n\n            // Try getting the name and performing forward lookup; allowing wildcards\n            try {\n                // keccak(\"name(bytes32)\")\n                const name = _parseString(await this.call({\n                    to: resolverAddress,\n                    data: (\"0x691f3431\" + namehash(node).substring(2))\n                }), 0);\n                resolver = await this.getResolver(name);\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n                return null;\n            }\n\n        } else {\n            // ENS name; forward lookup with wildcard\n            resolver = await this.getResolver(nameOrAddress);\n            if (!resolver) { return null; }\n        }\n\n        const avatar = await resolver.getAvatar();\n        if (avatar == null) { return null; }\n\n        return avatar.url;\n    }\n\n    perform(method: string, params: any): Promise<any> {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n\n    _startEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _stopEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _addEventListener(eventName: EventType, listener: Listener, once: boolean): this {\n        const event = new Event(getEventTag(eventName), listener, once)\n        this._events.push(event);\n        this._startEvent(event);\n\n        return this;\n    }\n\n    on(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, false);\n    }\n\n    once(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, true);\n    }\n\n\n    emit(eventName: EventType, ...args: Array<any>): boolean {\n        let result = false;\n\n        let stopped: Array<Event> = [ ];\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) { return true; }\n\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n\n            result = true;\n\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n\n            return true;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventType): number {\n        if (!eventName) { return this._events.length; }\n\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n\n    listeners(eventName?: EventType): Array<Listener> {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n\n    off(eventName: EventType, listener?: Listener): this {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n\n        const stopped: Array<Event> = [ ];\n\n        let found = false;\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) { return true; }\n            if (found) { return true; }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n\n    removeAllListeners(eventName?: EventType): this {\n        let stopped: Array<Event> = [ ];\n        if (eventName == null) {\n            stopped = this._events;\n\n            this._events = [ ];\n        } else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) { return true; }\n                stopped.push(event);\n                return false;\n            });\n        }\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2720, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2726, "column": 0}, "map": {"version":3,"file":"json-rpc-provider.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/json-rpc-provider.ts"],"sourcesContent":["\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/JSON-RPC\n\nimport { Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Bytes, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { checkProperties, deepCopy, Deferrable, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { AccessList, accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson, poll } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider, Event } from \"./base-provider\";\n\n\nconst errorGas = [ \"call\", \"estimateGas\" ];\n\nfunction spelunk(value: any, requireData: boolean): null | { message: string, data: null | string } {\n    if (value == null) { return null; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\" && value.message.match(\"reverted\")) {\n        const data = isHexString(value.data) ? value.data: null;\n        if (!requireData || data) {\n            return { message: value.message, data };\n        }\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            const result = spelunk(value[key], requireData);\n            if (result) { return result; }\n        }\n        return null;\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return spelunk(JSON.parse(value), requireData);\n        } catch (error) { }\n    }\n\n    return null;\n}\n\nfunction checkError(method: string, error: any, params: any): any {\n\n    const transaction = params.transaction || params.signedTransaction;\n\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\") {\n        const result = spelunk(error, true);\n        if (result) { return result.data; }\n\n        // Nothing descriptive..\n        logger.throwError(\"missing revert data in call exception; Transaction reverted without a reason string\", Logger.errors.CALL_EXCEPTION, {\n            data: \"0x\", transaction, error\n        });\n    }\n\n    if (method === \"estimateGas\") {\n        // Try to find something, with a preference on SERVER_ERROR body\n        let result = spelunk(error.body, false);\n        if (result == null) { result = spelunk(error, false); }\n\n        // Found \"reverted\", this is a CALL_EXCEPTION\n        if (result) {\n            logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                reason: result.message, method, transaction, error\n            });\n        }\n    }\n\n    // @TODO: Should we spelunk for message too?\n\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof(error.error.message) === \"string\") {\n        message = error.error.message;\n    } else if (typeof(error.body) === \"string\") {\n        message = error.body;\n    } else if (typeof(error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n\n    // \"nonce too low\"\n    if (message.match(/nonce (is )?too low/i)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/i)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nfunction timer(timeout: number): Promise<any> {\n    return new Promise(function(resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\n\nfunction getResult(payload: { error?: { code?: number, data?: any, message?: string }, result?: any }): any {\n    if (payload.error) {\n        // @TODO: not any\n        const error: any = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n\n    return payload.result;\n}\n\nfunction getLowerCase(value: string): string {\n    if (value) { return value.toLowerCase(); }\n    return value;\n}\n\nconst _constructorGuard = {};\n\nexport class JsonRpcSigner extends Signer implements TypedDataSigner {\n    readonly provider: JsonRpcProvider;\n    _index: number;\n    _address: string;\n\n    constructor(constructorGuard: any, provider: JsonRpcProvider, addressOrIndex?: string | number) {\n        super();\n\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n\n        defineReadOnly(this, \"provider\", provider);\n\n        if (addressOrIndex == null) { addressOrIndex = 0; }\n\n        if (typeof(addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n\n        } else if (typeof(addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n\n        } else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n\n    connect(provider: Provider): JsonRpcSigner {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n\n    connectUnchecked(): JsonRpcSigner {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n\n    getAddress(): Promise<string> {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index])\n        });\n    }\n\n    sendUncheckedTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        transaction = shallowCopy(transaction);\n\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) { address = address.toLowerCase(); }\n            return address;\n        });\n\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n        }\n\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            } else {\n                tx.from = sender;\n            }\n\n            const hexTx = (<any>this.provider.constructor).hexlifyTransaction(tx, { from: true });\n\n            return this.provider.send(\"eth_sendTransaction\", [ hexTx ]).then((hash) => {\n                return hash;\n            }, (error) => {\n                if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                    logger.throwError(\"user rejected transaction\", Logger.errors.ACTION_REJECTED, {\n                        action: \"sendTransaction\",\n                        transaction: tx\n                    });\n                }\n\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(transaction);\n\n        try {\n            // Unfortunately, JSON-RPC only provides and opaque transaction hash\n            // for a response, and we need the actual transaction, so we poll\n            // for it; it should show up very quickly\n            return await poll(async () => {\n                const tx = await this.provider.getTransaction(hash);\n                if (tx === null) { return undefined; }\n                return this.provider._wrapTransaction(tx, hash, blockNumber);\n            }, { oncePoll: this.provider });\n        } catch (error) {\n            (<any>error).transactionHash = hash;\n            throw error;\n        }\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n        try {\n            return await this.provider.send(\"personal_sign\", [ hexlify(data), address.toLowerCase() ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"signMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _legacySignMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n        try {\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return await this.provider.send(\"eth_sign\", [ address.toLowerCase(), hexlify(data) ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_legacySignMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names (in-place)\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            return this.provider.resolveName(name);\n        });\n\n        const address = await this.getAddress();\n\n        try {\n            return await this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_signTypedData\",\n                    from: address,\n                    messageData: { domain: populated.domain, types, value: populated.value }\n                });\n            }\n            throw error;\n        }\n    }\n\n    async unlock(password: string): Promise<boolean> {\n        const provider = this.provider;\n\n        const address = await this.getAddress();\n\n        return provider.send(\"personal_unlockAccount\", [ address.toLowerCase(), password, null ]);\n    }\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return <TransactionResponse>{\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations?: number) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n}\n\nexport class JsonRpcProvider extends BaseProvider {\n    readonly connection: ConnectionInfo;\n\n    _pendingFilter: Promise<number>;\n    _nextId: number;\n\n    // During any given event loop, the results for a given call will\n    // all be the same, so we can dedup the calls to save requests and\n    // bandwidth. @TODO: Try out generalizing this against send?\n    _eventLoopCache: Record<string, Promise<any>>;\n    get _cache(): Record<string, Promise<any>> {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = { };\n        }\n        return this._eventLoopCache;\n    }\n\n    constructor(url?: ConnectionInfo | string, network?: Networkish) {\n        let networkOrReady: Networkish | Promise<Network> = network;\n\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Default URL\n        if (!url) { url = getStatic<() => string>(this.constructor, \"defaultUrl\")(); }\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"connection\",Object.freeze({\n                url: url\n            }));\n        } else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n\n        this._nextId = 42;\n    }\n\n    static defaultUrl(): string {\n        return \"http:/\\/localhost:8545\";\n    }\n\n    detectNetwork(): Promise<Network> {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n\n    async _uncachedDetectNetwork(): Promise<Network> {\n        await timer(0);\n\n        let chainId = null;\n        try {\n            chainId = await this.send(\"eth_chainId\", [ ]);\n        } catch (error) {\n            try {\n                chainId = await this.send(\"net_version\", [ ]);\n            } catch (error) { }\n        }\n\n        if (chainId != null) {\n            const getNetwork = getStatic<(network: Networkish) => Network>(this.constructor, \"getNetwork\");\n            try {\n                return getNetwork(BigNumber.from(chainId).toNumber());\n            } catch (error) {\n                return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                    chainId: chainId,\n                    event: \"invalidNetwork\",\n                    serverError: error\n                });\n            }\n        }\n\n        return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            event: \"noNetwork\"\n        });\n    }\n\n    getSigner(addressOrIndex?: string | number): JsonRpcSigner {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n\n    getUncheckedSigner(addressOrIndex?: string | number): UncheckedJsonRpcSigner {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return this.send(\"eth_accounts\", []).then((accounts: Array<string>) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([ \"eth_chainId\", \"eth_blockNumber\" ].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n\n            return result;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n\n            throw error;\n        });\n\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n\n        return result;\n    }\n\n    prepareRequest(method: string, params: any): [ string, Array<any> ] {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [ \"eth_blockNumber\", [] ];\n\n            case \"getGasPrice\":\n                return [ \"eth_gasPrice\", [] ];\n\n            case \"getBalance\":\n                return [ \"eth_getBalance\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getTransactionCount\":\n                return [ \"eth_getTransactionCount\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getCode\":\n                return [ \"eth_getCode\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getStorageAt\":\n                return [ \"eth_getStorageAt\", [ getLowerCase(params.address), hexZeroPad(params.position, 32), params.blockTag ] ];\n\n            case \"sendTransaction\":\n                return [ \"eth_sendRawTransaction\", [ params.signedTransaction ] ]\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [ \"eth_getBlockByNumber\", [ params.blockTag, !!params.includeTransactions ] ];\n                } else if (params.blockHash) {\n                    return [ \"eth_getBlockByHash\", [ params.blockHash, !!params.includeTransactions ] ];\n                }\n                return null;\n\n            case \"getTransaction\":\n                return [ \"eth_getTransactionByHash\", [ params.transactionHash ] ];\n\n            case \"getTransactionReceipt\":\n                return [ \"eth_getTransactionReceipt\", [ params.transactionHash ] ];\n\n            case \"call\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_call\", [ hexlifyTransaction(params.transaction, { from: true }), params.blockTag ] ];\n            }\n\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_estimateGas\", [ hexlifyTransaction(params.transaction, { from: true }) ] ];\n            }\n\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [ \"eth_getLogs\", [ params.filter ] ];\n\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (method === \"call\" || method === \"estimateGas\") {\n            const tx = params.transaction;\n            if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                // If there are no EIP-1559 properties, it might be non-EIP-1559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        params = shallowCopy(params);\n                        params.transaction = shallowCopy(tx);\n                        delete params.transaction.type;\n                    }\n                }\n            }\n        }\n\n        const args = this.prepareRequest(method,  params);\n\n        if (args == null) {\n            logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n        }\n        try {\n            return await this.send(args[0], args[1])\n        } catch (error) {\n            return checkError(method, error, params);\n        }\n    }\n\n    _startEvent(event: Event): void {\n        if (event.tag === \"pending\") { this._startPending(); }\n        super._startEvent(event);\n    }\n\n    _startPending(): void {\n        if (this._pendingFilter != null) { return; }\n        const self = this;\n\n        const pendingFilter: Promise<number> = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n\n        pendingFilter.then(function(filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [ filterId ]).then(function(hashes: Array<string>) {\n                    if (self._pendingFilter != pendingFilter) { return null; }\n\n                    let seq = Promise.resolve();\n                    hashes.forEach(function(hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function() {\n                            return self.getTransaction(hash).then(function(tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n\n                    return seq.then(function() {\n                        return timer(1000);\n                    });\n                }).then(function() {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [ filterId ]);\n                        return;\n                    }\n                    setTimeout(function() { poll(); }, 0);\n\n                    return null;\n                }).catch((error: Error) => { });\n            }\n            poll();\n\n            return filterId;\n        }).catch((error: Error) => { });\n    }\n\n    _stopEvent(event: Event): void {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction: TransactionRequest, allowExtra?: { [key: string]: boolean }): { [key: string]: string | AccessList } {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) { allowed[key] = true; }\n            }\n        }\n\n        checkProperties(transaction, allowed);\n\n        const result: { [key: string]: string | AccessList } = {};\n\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            const value = hexValue(BigNumber.from((<any>transaction)[key]));\n            if (key === \"gasLimit\") { key = \"gas\"; }\n            result[key] = value;\n        });\n\n        [\"from\", \"to\", \"data\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            result[key] = hexlify((<any>transaction)[key]);\n        });\n\n        if ((<any>transaction).accessList) {\n            result[\"accessList\"] = accessListify((<any>transaction).accessList);\n        }\n\n        return result;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3572, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3578, "column": 0}, "map": {"version":3,"file":"ws.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/browser-ws.ts"],"sourcesContent":["\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nlet WS: any = null;\n\ntry {\n    WS = (WebSocket as any);\n    if (WS == null) { throw new Error(\"inject please\"); }\n} catch (error) {\n    const logger = new Logger(version);\n    WS = function() {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    }\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n"],"names":[],"mappings":";;;AAEA,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAHrC,YAAY,CAAC;;;AAKb,IAAI,EAAE,GAAQ,IAAI,CAAC;AAEnB,IAAI;IACA,EAAE,GAAI,SAAiB,CAAC;IACxB,IAAI,EAAE,IAAI,IAAI,EAAE;QAAE,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;KAAE;CACxD,CAAC,OAAO,KAAK,EAAE;IACZ,MAAM,MAAM,GAAG,IAAI,0KAAM,wKAAC,UAAO,CAAC,CAAC;IACnC,EAAE,GAAG;QACD,MAAM,CAAC,UAAU,CAAC,8CAA8C,mKAAE,SAAM,CAAC,MAAM,CAAC,qBAAqB,EAAE;YACnG,SAAS,EAAE,iBAAiB;SAC/B,CAAC,CAAC;IACP,CAAC,CAAA;CACJ","ignoreList":[0]}},
    {"offset": {"line": 3602, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3608, "column": 0}, "map": {"version":3,"file":"websocket-provider.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/websocket-provider.ts"],"sourcesContent":["\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Event } from \"./base-provider\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\n\nlet NextId = 1;\n\nexport type InflightRequest = {\n     callback: (error: Error, result: any) => void;\n     payload: string;\n};\n\nexport type Subscription = {\n    tag: string;\n    processFunc: (payload: any) => void;\n};\n\nexport interface WebSocketLike {\n    onopen: ((...args: Array<any>) => any) | null;\n    onmessage: ((...args: Array<any>) => any) | null;\n    onerror: ((...args: Array<any>) => any) | null;\n\n    readyState: number;\n\n    send(payload: any): void;\n    close(code?: number, reason?: string): void;\n}\n\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\n\nexport class WebSocketProvider extends JsonRpcProvider {\n    readonly _websocket: any;\n    readonly _requests: { [ name: string ]: InflightRequest };\n    readonly _detectNetwork: Promise<Network>;\n\n    // Maps event tag to subscription ID (we dedupe identical events)\n    readonly _subIds: { [ tag: string ]: Promise<string> };\n\n    // Maps Subscription ID to Subscription\n    readonly _subs: { [ name: string ]: Subscription };\n\n    _wsReady: boolean;\n\n    constructor(url: string | WebSocketLike, network?: Networkish) {\n\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n\n        if (typeof(url) === \"string\") {\n            super(url, network);\n        } else {\n            super(\"_websocket\", network);\n        }\n\n        this._pollingInterval = -1;\n\n        this._wsReady = false;\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        } else {\n            defineReadOnly(this, \"_websocket\", url);\n        }\n\n        defineReadOnly(this, \"_requests\", { });\n        defineReadOnly(this, \"_subs\", { });\n        defineReadOnly(this, \"_subIds\", { });\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n\n        // Stall sending requests until the socket is open...\n        this.websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this.websocket.send(this._requests[id].payload);\n            });\n        };\n\n        this.websocket.onmessage = (messageEvent: { data: string }) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n\n                } else {\n                    let error: Error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(<any>error, \"code\", result.error.code || null);\n                        defineReadOnly(<any>error, \"response\", data);\n                    } else {\n                        error = new Error(\"unknown error\");\n                    }\n\n                    request.callback(error, undefined);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n\n                }\n\n            } else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result)\n                }\n\n            } else {\n                console.warn(\"this should not happen\");\n            }\n        };\n\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) { fauxPoll.unref(); }\n    }\n\n    // Cannot narrow the type of _websocket, as that is not backwards compatible\n    // so we add a getter and let the WebSocket be a public API.\n    get websocket(): WebSocketLike { return this._websocket; }\n\n    detectNetwork(): Promise<Network> {\n        return this._detectNetwork;\n    }\n\n    get pollingInterval(): number {\n        return 0;\n    }\n\n    resetEventsBlock(blockNumber: number): void {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n\n    set pollingInterval(value: number) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n\n    async poll(): Promise<void> {\n        return null;\n    }\n\n    set polling(value: boolean) {\n        if (!value) { return; }\n\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n\n    send(method: string, params?: Array<any>): Promise<any> {\n        const rid = NextId++;\n\n        return new Promise((resolve, reject) => {\n            function callback(error: Error, result: any) {\n                if (error) { return reject(error); }\n                return resolve(result);\n            }\n\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n\n            this._requests[String(rid)] = { callback, payload };\n\n            if (this._wsReady) { this.websocket.send(payload); }\n        });\n    }\n\n    static defaultUrl(): string {\n        return \"ws:/\\/localhost:8546\";\n    }\n\n    async _subscribe(tag: string, param: Array<any>, processFunc: (result: any) => void): Promise<void> {\n        let subIdPromise = this._subIds[tag];\n        if (subIdPromise == null) {\n            subIdPromise = Promise.all(param).then((param) => {\n                return this.send(\"eth_subscribe\", param);\n            });\n            this._subIds[tag] = subIdPromise;\n        }\n        const subId = await subIdPromise;\n        this._subs[subId] = { tag, processFunc };\n    }\n\n    _startEvent(event: Event): void {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [ \"newHeads\" ], (result: any) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n\n            case \"pending\":\n                this._subscribe(\"pending\", [ \"newPendingTransactions\" ], (result: any) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n\n            case \"filter\":\n                this._subscribe(event.tag, [ \"logs\", this._getFilter(event.filter) ], (result: any) => {\n                    if (result.removed == null) { result.removed = false; }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n\n            case \"tx\": {\n                const emitReceipt = (event: Event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) { return; }\n                        this.emit(hash, receipt);\n                    });\n                };\n\n                // In case it is already mined\n                emitReceipt(event);\n\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [ \"newHeads\" ], (result: any) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n\n    _stopEvent(event: Event): void {\n        let tag = event.tag;\n\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        } else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n\n        const subId = this._subIds[tag];\n        if (!subId) { return; }\n\n       delete this._subIds[tag];\n       subId.then((subId) => {\n            if (!this._subs[subId]) { return; }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [ subId ]);\n        });\n    }\n\n    async destroy(): Promise<void> {\n        // Wait until we have connected before trying to disconnect\n        if (this.websocket.readyState === WebSocket.CONNECTING) {\n            await (new Promise((resolve) => {\n                this.websocket.onopen = function() {\n                    resolve(true);\n                };\n\n                this.websocket.onerror = function() {\n                    resolve(false);\n                };\n            }));\n        }\n\n        // Hangup\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n        this.websocket.close(1000);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3943, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3949, "column": 0}, "map": {"version":3,"file":"fallback-provider.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/fallback-provider.ts"],"sourcesContent":["\"use strict\";\n\nimport { Block, BlockWithTransactions, Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\n\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction now() { return (new Date()).getTime(); }\n\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks: Array<Network>): Network {\n    let result = null;\n\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n\n        // Null! We do not know our network; bail.\n        if (network == null) { return null; }\n\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n           }\n        } else {\n            result = network;\n        }\n    }\n\n    return result;\n}\n\nfunction median(values: Array<number>, maxDelta?: number): number {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n\n    return (a + b) / 2;\n}\n\nfunction serialize(value: any): string {\n    if (value === null) {\n        return \"null\";\n    } else if (typeof(value) === \"number\" || typeof(value) === \"boolean\") {\n        return JSON.stringify(value);\n    } else if (typeof(value) === \"string\") {\n        return value;\n    } else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    } else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    } else if (typeof(value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof(v) === \"function\") {\n                v = \"[function]\";\n            } else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n\n    throw new Error(\"unknown value type: \" + typeof(value));\n}\n\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n\n\nexport interface FallbackProviderConfig {\n    // The Provider\n    provider: Provider;\n\n    // The priority to favour this Provider; lower values are used first (higher priority)\n    priority?: number;\n\n    // Timeout before also triggering the next provider; this does not stop\n    // this provider and if its result comes back before a quorum is reached\n    // it will be incorporated into the vote\n    // - lower values will cause more network traffic but may result in a\n    //   faster result.\n    stallTimeout?: number;\n\n    // How much this provider contributes to the quorum; sometimes a specific\n    // provider may be more reliable or trustworthy than others, but usually\n    // this should be left as the default\n    weight?: number;\n};\n\n// A Staller is used to provide a delay to give a Provider a chance to response\n// before asking the next Provider to try.\ntype Staller = {\n    wait: (func: () => void) => Promise<void>\n    getPromise: () => Promise<void>,\n    cancel: () => void\n};\n\nfunction stall(duration: number): Staller {\n    let cancel: () => void = null;\n\n    let timer: NodeJS.Timer = null;\n    let promise = <Promise<void>>(new Promise((resolve) => {\n        cancel = function() {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        }\n        timer = setTimeout(cancel, duration);\n    }));\n\n    const wait = (func: () => void) => {\n        promise = promise.then(func);\n        return promise;\n    }\n\n    function getPromise(): Promise<void> {\n        return promise;\n    }\n\n    return { cancel, getPromise, wait };\n}\n\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\n\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n\n\n// @TODO: Make this an object with staller and cancel built-in\ninterface RunningConfig extends FallbackProviderConfig {\n    start?: number;\n    done?: boolean;\n    cancelled?: boolean;\n    runner?: Promise<any>;\n    staller?: Staller;\n    result?: any;\n    error?: Error;\n};\n\nfunction exposeDebugConfig(config: RunningConfig, now?: number): any {\n    const result: any = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) { result.start = config.start; }\n    if (now) { result.duration = (now - config.start); }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        } else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\n\nfunction normalizedTally(normalize: (value: any) => string, quorum: number): (configs: Array<RunningConfig>) => any {\n    return function(configs: Array<RunningConfig>): any {\n\n        // Count the votes for each result\n        const tally: { [ key: string]: { count: number, result: any } } = { };\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) { tally[value] = { count: 0, result: c.result }; }\n            tally[value].count++;\n        });\n\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n\n        // No quroum\n        return undefined;\n    }\n}\nfunction getProcessFunc(provider: FallbackProvider, method: string, params: { [ key: string ]: any }): (configs: Array<RunningConfig>) => any {\n\n    let normalize = serialize;\n\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function(configs: Array<RunningConfig>): number {\n                const values = configs.map((c) => c.result);\n\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) { return undefined; }\n\n                blockNumber = Math.ceil(blockNumber);\n\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) { blockNumber++; }\n\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n\n                return provider._highestBlockNumber;\n            };\n\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function(configs: Array<RunningConfig>): BigNumber {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            }\n\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function(configs: Array<RunningConfig>): number {\n                return median(configs.map((c) => c.result));\n            }\n\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function(tx: any): string {\n                if (tx == null) { return null; }\n\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            }\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function(block: BlockWithTransactions): string {\n                    if (block == null) { return null; }\n\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            } else {\n                normalize = function(block: Block): string {\n                    if (block == null) { return null; }\n                    return serialize(block);\n                }\n            }\n            break;\n\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n\n}\n\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nasync function waitForSync(config: RunningConfig, blockNumber: number): Promise<BaseProvider> {\n    const provider = <BaseProvider>(config.provider);\n\n    if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n        return provider;\n    }\n\n    return poll(() => {\n        return new Promise((resolve, reject) => {\n            setTimeout(function() {\n\n                // We are synced\n                if (provider.blockNumber >= blockNumber) { return resolve(provider); }\n\n                // We're done; just quit\n                if (config.cancelled) { return resolve(null); }\n\n                // Try again, next block\n                return resolve(undefined);\n            }, 0);\n        });\n    }, { oncePoll: provider });\n}\n\nasync function getRunner(config: RunningConfig, currentBlockNumber: number, method: string, params: { [ key: string]: any }): Promise<any> {\n    let provider = config.provider;\n\n    switch (method) {\n        case \"getBlockNumber\":\n        case \"getGasPrice\":\n            return provider[method]();\n        case \"getEtherPrice\":\n            if ((<any>provider).getEtherPrice) {\n                return (<any>provider).getEtherPrice();\n            }\n            break;\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[method](params.address, params.blockTag || \"latest\");\n        case \"getStorageAt\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n        case \"getBlock\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[(params.includeTransactions ? \"getBlockWithTransactions\": \"getBlock\")](params.blockTag || params.blockHash);\n        case \"call\":\n        case \"estimateGas\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            if (method === \"call\" && params.blockTag) {\n                return provider[method](params.transaction, params.blockTag);\n            }\n            return provider[method](params.transaction);\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            return provider[method](params.transactionHash);\n        case \"getLogs\": {\n            let filter = params.filter;\n            if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getLogs(filter);\n        }\n    }\n\n    return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n        method: method,\n        params: params\n    });\n}\n\nexport class FallbackProvider extends BaseProvider {\n    readonly providerConfigs: ReadonlyArray<FallbackProviderConfig>;\n    readonly quorum: number;\n\n    // Due to the highly asyncronous nature of the blockchain, we need\n    // to make sure we never unroll the blockNumber due to our random\n    // sample of backends\n    _highestBlockNumber: number;\n\n    constructor(providers: Array<Provider | FallbackProviderConfig>, quorum?: number) {\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n\n        const providerConfigs: Array<FallbackProviderConfig> = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n\n            const config: FallbackProviderConfig = shallowCopy(configOrProvider);\n\n            if (config.priority == null) { config.priority = 1; }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n            }\n            if (config.weight == null) { config.weight = 1; }\n\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${ index }].weight`, weight);\n            }\n\n            return Object.freeze(config);\n        });\n\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n\n        if (quorum == null) {\n            quorum = total / 2;\n        } else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n\n        // Are all providers' networks are known\n        let networkOrReady: Network | Promise<Network> = checkNetworks(providerConfigs.map((c) => (<any>(c.provider)).network));\n\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n\n        this._highestBlockNumber = -1;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        const networks = await Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n        return checkNetworks(networks);\n    }\n\n    async perform(method: string, params: { [name: string]: any }): Promise<any> {\n        // Sending transactions is special; always broadcast it to all backends\n        if (method === \"sendTransaction\") {\n            const results: Array<string | Error> = await Promise.all(this.providerConfigs.map((c) => {\n                return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                    return result.hash;\n                }, (error) => {\n                    return error;\n                });\n            }));\n\n            // Any success is good enough (other errors are likely \"already seen\" errors\n            for (let i = 0; i < results.length; i++) {\n                const result = results[i];\n                if (typeof(result) === \"string\") { return result; }\n            }\n\n            // They were all an error; pick the first error\n            throw results[0];\n        }\n\n        // We need to make sure we are in sync with our backends, so we need\n        // to know this before we can make a lot of calls\n        if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n            await this.getBlockNumber();\n        }\n\n        const processFunc = getProcessFunc(this, method, params);\n\n        // Shuffle the providers and then sort them by their priority; we\n        // shallowCopy them since we will store the result in them too\n        const configs: Array<RunningConfig> = shuffled(this.providerConfigs.map(shallowCopy));\n        configs.sort((a, b) => (a.priority - b.priority));\n\n        const currentBlockNumber = this._highestBlockNumber;\n\n        let i = 0;\n        let first = true;\n        while (true) {\n            const t0 = now();\n\n            // Compute the inflight weight (exclude anything past)\n            let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                                        .reduce((accum, c) => (accum + c.weight), 0);\n\n            // Start running enough to meet quorum\n            while (inflightWeight < this.quorum && i < configs.length) {\n                const config = configs[i++];\n\n                const rid = nextRid++;\n\n                config.start = now();\n                config.staller = stall(config.stallTimeout);\n                config.staller.wait(() => { config.staller = null; });\n\n                config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                    config.done = true;\n                    config.result = result;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                     }\n\n                }, (error) => {\n                    config.done = true;\n                    config.error = error;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                });\n\n                if (this.listenerCount(\"debug\")) {\n                    this.emit(\"debug\", {\n                        action: \"request\",\n                        rid: rid,\n                        backend: exposeDebugConfig(config, null),\n                        request: { method: method, params: deepCopy(params) },\n                        provider: this\n                    });\n                }\n\n                inflightWeight += config.weight;\n            }\n\n            // Wait for anything meaningful to finish or stall out\n            const waiting: Array<Promise<any>> = [ ];\n            configs.forEach((c) => {\n                if (c.done || !c.runner) { return; }\n                waiting.push(c.runner);\n                if (c.staller) { waiting.push(c.staller.getPromise()); }\n            });\n\n            if (waiting.length) { await Promise.race(waiting); }\n\n            // Check the quorum and process the results; the process function\n            // may additionally decide the quorum is not met\n            const results = configs.filter((c) => (c.done && c.error == null));\n            if (results.length >= this.quorum) {\n                const result = processFunc(results);\n                if (result !== undefined) {\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) { c.staller.cancel(); }\n                        c.cancelled = true;\n                    });\n                    return result;\n                }\n                if (!first) { await stall(100).getPromise(); }\n                first = false;\n            }\n\n            // No result, check for errors that should be forwarded\n            const errors = configs.reduce((accum, c) => {\n                if (!c.done || c.error == null) { return accum; }\n\n                const code = (<any>(c.error)).code;\n                if (ForwardErrors.indexOf(code) >= 0) {\n                    if (!accum[code]) { accum[code] = { error: c.error, weight: 0 }; }\n                    accum[code].weight += c.weight;\n                }\n\n                return accum;\n            }, <{ [ code: string ]: { error: Error, weight: number } }>({ }));\n\n            Object.keys(errors).forEach((errorCode: string) => {\n                const tally = errors[errorCode];\n                if (tally.weight < this.quorum) { return; }\n\n                // Shut down any stallers\n                configs.forEach(c => {\n                    if (c.staller) { c.staller.cancel(); }\n                    c.cancelled = true;\n                });\n\n                const e = <any>(tally.error);\n\n                const props: { [ name: string ]: any } = { };\n                ForwardProperties.forEach((name) => {\n                    if (e[name] == null) { return; }\n                    props[name] = e[name];\n                });\n\n                logger.throwError(e.reason || e.message, <any>errorCode, props);\n            });\n\n            // All configs have run to completion; we will never get more data\n            if (configs.filter((c) => !c.done).length === 0) { break; }\n        }\n\n        // Shut down any stallers; shouldn't be any\n        configs.forEach(c => {\n            if (c.staller) { c.staller.cancel(); }\n            c.cancelled = true;\n        });\n\n        return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n            method: method,\n            params: params,\n            //results: configs.map((c) => c.result),\n            //errors: configs.map((c) => c.error),\n            results: configs.map((c) => exposeDebugConfig(c)),\n            provider: this\n        });\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4584, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4590, "column": 0}, "map": {"version":3,"file":"url-json-rpc-provider.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/url-json-rpc-provider.ts"],"sourcesContent":["\n\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { CommunityResourcable } from \"./formatter\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\n\ntype getUrlFunc = (network: Network, apiKey: string) => string | ConnectionInfo;\n\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    async detectNetwork(): Promise<Network> {\n        let network = this.network;\n        if (network == null) {\n            network = await super.detectNetwork();\n\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // If still not set, set it\n            if (this._network == null) {\n                // A static network does not support \"any\"\n                defineReadOnly(this, \"_network\", network);\n\n                this.emit(\"network\", network, null);\n            }\n        }\n        return network;\n    }\n}\n\nexport abstract class UrlJsonRpcProvider extends StaticJsonRpcProvider implements CommunityResourcable {\n    readonly apiKey: any;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n\n        // Normalize the Network and API Key\n        network = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n        apiKey = getStatic<(apiKey: string) => string>(new.target, \"getApiKey\")(apiKey);\n\n        const connection = getStatic<getUrlFunc>(new.target, \"getUrl\")(network, apiKey);\n\n        super(connection, network);\n\n        if (typeof(apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        } else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly<any, any>(this, key, apiKey[key]);\n            });\n        }\n    }\n\n    _startPending(): void {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n\n    isCommunityResource(): boolean {\n        return false;\n    }\n\n    getSigner(address?: string): JsonRpcSigner {\n        return logger.throwError(\n            \"API provider does not support signing\",\n            Logger.errors.UNSUPPORTED_OPERATION,\n            { operation: \"getSigner\" }\n        );\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return Promise.resolve([]);\n    }\n\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey: any): any {\n        return apiKey;\n    }\n\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network: Network, apiKey: any): string | ConnectionInfo {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4699, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4705, "column": 0}, "map": {"version":3,"file":"alchemy-provider.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/alchemy-provider.ts"],"sourcesContent":["\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\n\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\"\n\nexport class AlchemyWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new AlchemyProvider(network, apiKey);\n\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n                                           .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): AlchemyWebSocketProvider {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: string): ConnectionInfo {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arb-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-goerli\":\n                host = \"opt-goerli.g.alchemy.com/v2/\"\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4797, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4803, "column": 0}, "map": {"version":3,"file":"ankr-provider.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/ankr-provider.ts"],"sourcesContent":["\nimport { Network } from \"@ethersproject/networks\";\n\nimport { showThrottleMessage } from \"./formatter\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport type { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\n\nfunction getHost(name: string): string {\n    switch (name) {\n        case \"homestead\":\n            return \"rpc.ankr.com/eth/\";\n        case \"ropsten\":\n            return \"rpc.ankr.com/eth_ropsten/\";\n        case \"rinkeby\":\n            return \"rpc.ankr.com/eth_rinkeby/\";\n        case \"goerli\":\n            return \"rpc.ankr.com/eth_goerli/\";\n\n        case \"matic\":\n            return \"rpc.ankr.com/polygon/\";\n\n        case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum/\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n}\n\nexport class AnkrProvider extends UrlJsonRpcProvider {\n    readonly apiKey: string;\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        if (apiKey == null) { apiKey = defaultApiKey; }\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\\/\" + getHost(network.name) + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n}\n"],"names":[],"mappings":";;;AAGA,OAAO,EAAE,mBAAmB,EAAE,MAAM,aAAa,CAAC;AAClD,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAI7D,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;;;;;AACrC,MAAM,MAAM,GAAG,qKAAI,SAAM,wKAAC,UAAO,CAAC,CAAC;AAGnC,MAAM,aAAa,GAAG,kEAAkE,CAAC;AAEzF,SAAS,OAAO,CAAC,IAAY;IACzB,OAAQ,IAAI,EAAE;QACV,KAAK,WAAW;YACZ,OAAO,mBAAmB,CAAC;QAC/B,KAAK,SAAS;YACV,OAAO,2BAA2B,CAAC;QACvC,KAAK,SAAS;YACV,OAAO,2BAA2B,CAAC;QACvC,KAAK,QAAQ;YACT,OAAO,0BAA0B,CAAC;QAEtC,KAAK,OAAO;YACR,OAAO,uBAAuB,CAAC;QAEnC,KAAK,UAAU;YACX,OAAO,wBAAwB,CAAC;KACvC;IACD,OAAO,MAAM,CAAC,kBAAkB,CAAC,qBAAqB,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AAC1E,CAAC;AAEK,MAAO,YAAa,sMAAQ,qBAAkB;IAGhD,mBAAmB,GAAA;QACf,OAAO,AAAC,IAAI,CAAC,MAAM,KAAK,aAAa,CAAC,CAAC;IAC3C,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,MAAW,EAAA;QACxB,IAAI,MAAM,IAAI,IAAI,EAAE;YAAE,OAAO,aAAa,CAAC;SAAE;QAC7C,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,OAAgB,EAAE,MAAW,EAAA;QACvC,IAAI,MAAM,IAAI,IAAI,EAAE;YAAE,MAAM,GAAG,aAAa,CAAC;SAAE;QAC/C,MAAM,UAAU,GAAmB;YAC/B,SAAS,EAAE,IAAI;YACf,GAAG,EAAE,AAAC,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;YACnD,gBAAgB,EAAE,CAAC,OAAe,EAAE,GAAW,EAAE,EAAE;gBAC/C,IAAI,MAAM,CAAC,MAAM,KAAK,aAAa,EAAE;gMACjC,sBAAA,AAAmB,EAAE,CAAC;iBACzB;gBACD,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACjC,CAAC;SACJ,CAAC;QAEF,IAAI,MAAM,CAAC,aAAa,IAAI,IAAI,EAAE;YAC9B,UAAU,CAAC,IAAI,GAAG,EAAE,CAAC;YACrB,UAAU,CAAC,QAAQ,GAAG,MAAM,CAAC,aAAa,CAAA;SAC7C;QAED,OAAO,UAAU,CAAC;IACtB,CAAC;CACJ","ignoreList":[0]}},
    {"offset": {"line": 4864, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4870, "column": 0}, "map": {"version":3,"file":"cloudflare-provider.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/cloudflare-provider.ts"],"sourcesContent":["\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return host;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // The Cloudflare provider does not support eth_blockNumber,\n        // so we get the latest block and pull it from that\n        if (method === \"getBlockNumber\") {\n            const block = await super.perform(\"getBlock\", { blockTag: \"latest\" });\n            return block.number;\n        }\n\n        return super.perform(method, params);\n    }\n}\n"],"names":[],"mappings":";;;AAKA,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAHrC,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAH7D,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOb,MAAM,MAAM,GAAG,IAAI,0KAAM,wKAAC,UAAO,CAAC,CAAC;AAE7B,MAAO,kBAAmB,sMAAQ,qBAAkB;IAEtD,MAAM,CAAC,SAAS,CAAC,MAAW,EAAA;QACxB,IAAI,MAAM,IAAI,IAAI,EAAE;YAChB,MAAM,CAAC,kBAAkB,CAAC,qCAAqC,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;SACtF;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,OAAgB,EAAE,MAAY,EAAA;QACxC,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,OAAQ,OAAO,CAAC,IAAI,EAAE;YAClB,KAAK,WAAW;gBACZ,IAAI,GAAG,6BAA6B,CAAC;gBACrC,MAAM;YACV;gBACG,MAAM,CAAC,kBAAkB,CAAC,qBAAqB,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAChF;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAEK,OAAO,CAAC,MAAc,EAAE,MAAW,EAAA;;;;;;;YACrC,4DAA4D;YAC5D,mDAAmD;YACnD,IAAI,MAAM,KAAK,gBAAgB,EAAE;gBAC7B,MAAM,KAAK,GAAG,MAAM,OAAM,OAAO,CAAA,IAAA,CAAA,IAAA,EAAC,UAAU,EAAE;oBAAE,QAAQ,EAAE,QAAQ;gBAAA,CAAE,CAAC,CAAC;gBACtE,OAAO,KAAK,CAAC,MAAM,CAAC;aACvB;YAED,OAAO,OAAM,OAAO,CAAA,IAAA,CAAA,IAAA,EAAC,MAAM,EAAE,MAAM,EAAE;QACzC,CAAC;KAAA;CACJ","ignoreList":[0]}},
    {"offset": {"line": 4945, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4951, "column": 0}, "map": {"version":3,"file":"etherscan-provider.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/etherscan-provider.ts"],"sourcesContent":["\"use strict\";\n\nimport { BlockTag, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson } from \"@ethersproject/web\";\n\nimport { showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider } from \"./base-provider\";\n\n\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction: TransactionRequest): Record<string, string> {\n    const result: Record<string, string> = { };\n    for (let key in transaction) {\n        if ((<any>transaction)[key] == null) { continue; }\n        let value = (<any>transaction)[key];\n        if (key === \"type\" && value === 0) { continue; }\n\n        // Quantity-types require no leading zero, unless 0\n        if ((<any>{ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true })[key]) {\n            value = hexValue(hexlify(value));\n        } else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${ set.address }\",storageKeys:[\"${ set.storageKeys.join('\",\"') }\"]}`;\n            }).join(\",\") + \"]\";\n        } else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\n\nfunction getResult(result: { status?: number, message?: string, result?: any }): any {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n\n    if (result.status != 1 || typeof(result.message) !== \"string\" || !result.message.match(/^OK/)) {\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n\n    return result.result;\n}\n\nfunction getJsonResult(result: { jsonrpc: string, result?: any, error?: { code?: number, data?: any, message?: string} } ): any {\n    // This response indicates we are being throttled\n    if (result && (<any>result).status == 0 && (<any>result).message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error: any = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n\n    if (result.error) {\n        // @TODO: not any\n        const error: any = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) { error.code = result.error.code; }\n        if (result.error.data) { error.data = result.error.data; }\n        throw error;\n    }\n\n    return result.result;\n}\n\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag: string): number | \"latest\" {\n    if (blockTag === \"pending\") { throw new Error(\"pending not supported\"); }\n    if (blockTag === \"latest\") { return blockTag; }\n\n    return parseInt(blockTag.substring(2), 16);\n}\n\n\nfunction checkError(method: string, error: any, transaction: any): any {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) { data = \"0x\" + data.replace(/^.*0x/i, \"\"); }\n\n            if (isHexString(data)) { return data; }\n\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof(error.error.message) === \"string\") {\n            message = error.error.message;\n        } else if (typeof(error.body) === \"string\") {\n            message = error.body;\n        } else if (typeof(error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n         logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n         });\n    }\n\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nexport class EtherscanProvider extends BaseProvider{\n    readonly baseUrl: string;\n    readonly apiKey: string | null;\n\n    constructor(network?: Networkish, apiKey?: string) {\n        super(network);\n\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || null);\n    }\n\n    getBaseUrl(): string {\n        switch(this.network ? this.network.name: \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            case \"sepolia\":\n                return \"https:/\\/api-sepolia.etherscan.io\";\n            case \"matic\":\n                return \"https:/\\/api.polygonscan.com\";\n            case \"maticmum\":\n                return \"https:/\\/api-testnet.polygonscan.com\";\n            case \"arbitrum\":\n                return \"https:/\\/api.arbiscan.io\";\n            case \"arbitrum-goerli\":\n                return \"https:/\\/api-goerli.arbiscan.io\";\n            case \"optimism\":\n                return \"https:/\\/api-optimistic.etherscan.io\";\n            case \"optimism-goerli\":\n                return \"https:/\\/api-goerli-optimistic.etherscan.io\";\n            default:\n        }\n\n        return logger.throwArgumentError(\"unsupported network\", \"network\", this.network.name);\n    }\n\n    getUrl(module: string, params: Record<string, string>): string {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${ key }=${ value }`\n            }\n            return accum\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${ this.apiKey }`: \"\");\n        return `${ this.baseUrl }/api?module=${ module }${ query }${ apiKey }`;\n    }\n\n    getPostUrl(): string {\n        return `${ this.baseUrl }/api`;\n    }\n\n    getPostData(module: string, params: Record<string, any>): Record<string, any> {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n\n    async fetch(module: string, params: Record<string, any>, post?: boolean): Promise<any> {\n        const url = (post ? this.getPostUrl(): this.getUrl(module, params));\n        const payload = (post ? this.getPostData(module, params): null);\n        const procFunc = (module === \"proxy\") ? getJsonResult: getResult;\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: url,\n            provider: this\n        });\n\n        const connection: ConnectionInfo = {\n            url: url,\n            throttleSlotInterval: 1000,\n            throttleCallback: (attempt: number, url: string) => {\n                if (this.isCommunityResource()) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        let payloadStr: string = null;\n        if (payload) {\n            connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n            payloadStr = Object.keys(payload).map((key) => {\n                return `${ key }=${ payload[key] }`\n            }).join(\"&\");\n        }\n\n        const result = await fetchJson(connection, payloadStr, procFunc || getJsonResult);\n\n        this.emit(\"debug\", {\n            action: \"response\",\n            request: url,\n            response: deepCopy(result),\n            provider: this\n        });\n\n        return result;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        return this.network;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n\n        switch (method) {\n            case \"getBlockNumber\":\n                return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n\n            case \"getGasPrice\":\n                return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n\n            case \"getBalance\":\n                // Returns base-10 result\n                return this.fetch(\"account\", {\n                    action: \"balance\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getTransactionCount\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionCount\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getCode\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getCode\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getStorageAt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getStorageAt\",\n                    address: params.address,\n                    position: params.position,\n                    tag: params.blockTag\n                });\n\n            case \"sendTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_sendRawTransaction\",\n                    hex: params.signedTransaction\n                }, true).catch((error) => {\n                    return checkError(\"sendTransaction\", error, params.signedTransaction);\n                });\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getBlockByNumber\",\n                        tag: params.blockTag,\n                        boolean: (params.includeTransactions ? \"true\": \"false\")\n                    });\n                }\n                throw new Error(\"getBlock by blockHash not implemented\");\n\n            case \"getTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionByHash\",\n                    txhash: params.transactionHash\n                });\n\n            case \"getTransactionReceipt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionReceipt\",\n                    txhash: params.transactionHash\n                });\n\n            case \"call\": {\n                if (params.blockTag !== \"latest\") {\n                    throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                }\n\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_call\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"call\", error, params.transaction);\n                }\n            }\n\n            case \"estimateGas\": {\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_estimateGas\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"estimateGas\", error, params.transaction);\n                }\n            }\n\n            case \"getLogs\": {\n                const args: Record<string, any> = { action: \"getLogs\" }\n\n                if (params.filter.fromBlock) {\n                    args.fromBlock = checkLogTag(params.filter.fromBlock);\n                }\n\n                if (params.filter.toBlock) {\n                    args.toBlock = checkLogTag(params.filter.toBlock);\n                }\n\n                if (params.filter.address) {\n                    args.address = params.filter.address;\n                }\n\n                // @TODO: We can handle slightly more complicated logs using the logs API\n                if (params.filter.topics && params.filter.topics.length > 0) {\n                    if (params.filter.topics.length > 1) {\n                        logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                    }\n\n                    if (params.filter.topics.length === 1) {\n                        const topic0 = params.filter.topics[0];\n                        if (typeof(topic0) !== \"string\" || topic0.length !== 66) {\n                            logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                        }\n                        args.topic0 = topic0;\n                    }\n                }\n\n                const logs: Array<any> = await this.fetch(\"logs\", args);\n\n                // Cache txHash => blockHash\n                let blocks: { [tag: string]: string } = {};\n\n                // Add any missing blockHash to the logs\n                for (let i = 0; i < logs.length; i++) {\n                    const log = logs[i];\n                    if (log.blockHash != null) { continue; }\n                    if (blocks[log.blockNumber] == null) {\n                        const block = await this.getBlock(log.blockNumber);\n                        if (block) {\n                            blocks[log.blockNumber] = block.hash;\n                        }\n                    }\n                    log.blockHash = blocks[log.blockNumber];\n                }\n\n                return logs;\n            }\n\n            case \"getEtherPrice\":\n                if (this.network.name !== \"homestead\") { return 0.0; }\n                return parseFloat((await this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n\n            default:\n                break;\n         }\n\n        return super.perform(method, params);\n    }\n\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    async getHistory(addressOrName: string | Promise<string>, startBlock?: BlockTag, endBlock?: BlockTag): Promise<Array<TransactionResponse>> {\n        const params = {\n            action: \"txlist\",\n            address: (await this.resolveName(addressOrName)),\n            startblock: ((startBlock == null) ? 0: startBlock),\n            endblock: ((endBlock == null) ? 99999999: endBlock),\n            sort: \"asc\"\n        };\n\n        const result = await this.fetch(\"account\", params);\n\n        return result.map((tx: any) => {\n            [\"contractAddress\", \"to\"].forEach(function(key) {\n                if (tx[key] == \"\") { delete tx[key]; }\n            });\n            if (tx.creates == null && tx.contractAddress != null) {\n                tx.creates = tx.contractAddress;\n            }\n            const item = this.formatter.transactionResponse(tx);\n            if (tx.timeStamp) { item.timestamp = parseInt(tx.timeStamp); }\n            return item;\n        });\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey == null);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5437, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5443, "column": 0}, "map": {"version":3,"file":"infura-provider.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/infura-provider.ts"],"sourcesContent":["\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n\nconst defaultProjectId = \"84842078b09946638c03157f83405213\"\n\nexport class InfuraWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): InfuraWebSocketProvider {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { apiKey: string, projectId: string, projectSecret: string } = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n\n        if (apiKey == null) { return apiKeyObj; }\n\n        if (typeof(apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n\n        } else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof(apiKey.projectId) === \"string\"),\n                \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof(apiKey.projectSecret) === \"string\"),\n                \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n\n        } else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch(network ? network.name: \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"sepolia\":\n                host = \"sepolia.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-goerli\":\n                host = \"optimism-goerli.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arbitrum-goerli.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5563, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5569, "column": 0}, "map": {"version":3,"file":"nodesmith-provider.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/nodesmith-provider.ts"],"sourcesContent":["/* istanbul ignore file */\n\n\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\n\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n"],"names":[],"mappings":"AAAA,wBAAA,EAA0B;;;AAO1B,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAHrC,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAH7D,YAAY,CAAC;;;;AAOb,MAAM,MAAM,GAAG,qKAAI,SAAM,wKAAC,UAAO,CAAC,CAAC;AAEnC,sDAAsD;AACtD,MAAM,aAAa,GAAG,kBAAkB,CAAC;AAEnC,MAAO,iBAAkB,sMAAQ,qBAAkB;IAErD,MAAM,CAAC,SAAS,CAAC,MAAW,EAAA;QACxB,IAAI,MAAM,IAAI,OAAM,AAAC,MAAM,CAAC,IAAK,QAAQ,EAAE;YACvC,MAAM,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;SACjE;QACD,OAAO,MAAM,IAAI,aAAa,CAAC;IACnC,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,OAAgB,EAAE,MAAY,EAAA;QACxC,MAAM,CAAC,IAAI,CAAC,mFAAmF,CAAC,CAAC;QAEjG,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,OAAQ,OAAO,CAAC,IAAI,EAAE;YAClB,KAAK,WAAW;gBACZ,IAAI,GAAG,sDAAsD,CAAC;gBAC9D,MAAM;YACV,KAAK,SAAS;gBACV,IAAI,GAAG,sDAAsD,CAAC;gBAC9D,MAAM;YACV,KAAK,SAAS;gBACV,IAAI,GAAG,sDAAsD,CAAC;gBAC9D,MAAM;YACV,KAAK,QAAQ;gBACT,IAAI,GAAG,qDAAqD,CAAC;gBAC7D,MAAM;YACV,KAAK,OAAO;gBACR,IAAI,GAAG,oDAAoD,CAAC;gBAC5D,MAAM;YACV;gBACG,MAAM,CAAC,kBAAkB,CAAC,qBAAqB,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAChF;QAED,OAAO,AAAC,IAAI,GAAG,UAAU,GAAG,MAAM,CAAC,CAAC;IACxC,CAAC;CACJ","ignoreList":[0]}},
    {"offset": {"line": 5614, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5620, "column": 0}, "map": {"version":3,"file":"pocket-provider.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/pocket-provider.ts"],"sourcesContent":["\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nconst defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\n\n\nexport class PocketProvider extends UrlJsonRpcProvider {\n    readonly applicationId: string;\n    readonly applicationSecretKey: string;\n    readonly loadBalancer: boolean;\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { applicationId: string, applicationSecretKey: string, loadBalancer: boolean } = {\n            applicationId: null,\n            loadBalancer: true,\n            applicationSecretKey: null\n        };\n\n        // Parse applicationId and applicationSecretKey\n        if (apiKey == null) {\n            apiKeyObj.applicationId = defaultApplicationId;\n\n        } else if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n\n        } else if (apiKey.applicationSecretKey != null) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n\n        } else if (apiKey.applicationId) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n\n        } else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"kovan\":\n                host = \"poa-kovan.gateway.pokt.network\";\n                break;\n            case \"matic\":\n                host = \"poly-mainnet.gateway.pokt.network\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai-rpc.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const url = `https:/\\/${ host }/v1/lb/${ apiKey.applicationId }`\n\n        const connection: ConnectionInfo = { headers: { }, url };\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.applicationId === defaultApplicationId);\n    }\n}\n"],"names":[],"mappings":";;;AAKA,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAGrC,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAT7D,YAAY,CAAC;;;AAOb,MAAM,MAAM,GAAG,qKAAI,SAAM,wKAAC,UAAO,CAAC,CAAC;;AAInC,MAAM,oBAAoB,GAAG,0BAA0B,CAAC;AAGlD,MAAO,cAAe,sMAAQ,qBAAkB;IAKlD,MAAM,CAAC,SAAS,CAAC,MAAW,EAAA;QACxB,MAAM,SAAS,GAAmF;YAC9F,aAAa,EAAE,IAAI;YACnB,YAAY,EAAE,IAAI;YAClB,oBAAoB,EAAE,IAAI;SAC7B,CAAC;QAEF,+CAA+C;QAC/C,IAAI,MAAM,IAAI,IAAI,EAAE;YAChB,SAAS,CAAC,aAAa,GAAG,oBAAoB,CAAC;SAElD,MAAM,IAAI,OAAQ,AAAD,MAAO,CAAC,IAAK,QAAQ,EAAE;YACrC,SAAS,CAAC,aAAa,GAAG,MAAM,CAAC;SAEpC,MAAM,IAAI,MAAM,CAAC,oBAAoB,IAAI,IAAI,EAAE;YAC5C,SAAS,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;YAC/C,SAAS,CAAC,oBAAoB,GAAG,MAAM,CAAC,oBAAoB,CAAC;SAEhE,MAAM,IAAI,MAAM,CAAC,aAAa,EAAE;YAC7B,SAAS,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;SAElD,MAAM;YACH,MAAM,CAAC,kBAAkB,CAAC,mCAAmC,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;SACpF;QAED,OAAO,SAAS,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,OAAgB,EAAE,MAAW,EAAA;QACvC,IAAI,IAAI,GAAW,IAAI,CAAC;QACxB,OAAQ,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE;YACxC,KAAK,QAAQ;gBACT,IAAI,GAAG,iCAAiC,CAAC;gBACzC,MAAM;YACV,KAAK,WAAW;gBACZ,IAAI,GAAG,kCAAkC,CAAC;gBAC1C,MAAM;YACV,KAAK,OAAO;gBACR,IAAI,GAAG,gCAAgC,CAAC;gBACxC,MAAM;YACV,KAAK,OAAO;gBACR,IAAI,GAAG,mCAAmC,CAAC;gBAC3C,MAAM;YACV,KAAK,UAAU;gBACX,IAAI,GAAG,yCAAyC,CAAC;gBACjD,MAAM;YACV,KAAK,SAAS;gBACV,IAAI,GAAG,kCAAkC,CAAC;gBAC1C,MAAM;YACV,KAAK,SAAS;gBACV,IAAI,GAAG,kCAAkC,CAAC;gBAC1C,MAAM;YACV;gBACI,MAAM,CAAC,UAAU,CAAC,qBAAqB,mKAAE,SAAM,CAAC,MAAM,CAAC,gBAAgB,EAAE;oBACrE,QAAQ,EAAE,SAAS;oBACnB,KAAK,EAAE,OAAO;iBACjB,CAAC,CAAC;SACV;QAED,MAAM,GAAG,GAAG,CAAA,SAAA,EAAa,IAAK,CAAA,OAAA,EAAW,MAAM,CAAC,aAAc,EAAE,CAAA;QAEhE,MAAM,UAAU,GAAmB;YAAE,OAAO,EAAE,CAAA,CAAG;YAAE,GAAG;QAAA,CAAE,CAAC;QACzD,IAAI,MAAM,CAAC,oBAAoB,IAAI,IAAI,EAAE;YACrC,UAAU,CAAC,IAAI,GAAG,EAAE,CAAC;YACrB,UAAU,CAAC,QAAQ,GAAG,MAAM,CAAC,oBAAoB,CAAA;SACpD;QAED,OAAO,UAAU,CAAC;IACtB,CAAC;IAED,mBAAmB,GAAA;QACf,OAAO,AAAC,IAAI,CAAC,aAAa,KAAK,oBAAoB,CAAC,CAAC;IACzD,CAAC;CACJ","ignoreList":[0]}},
    {"offset": {"line": 5699, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5705, "column": 0}, "map": {"version":3,"file":"web3-provider.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/web3-provider.ts"],"sourcesContent":["\"use strict\";\n\nimport { Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Exported Types\nexport type ExternalProvider = {\n    isMetaMask?: boolean;\n    isStatus?: boolean;\n    host?: string;\n    path?: string;\n    sendAsync?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    send?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    request?: (request: { method: string, params?: Array<any> }) => Promise<any>\n}\n\nlet _nextId = 1;\n\nexport type JsonRpcFetchFunc = (method: string, params?: Array<any>) => Promise<any>;\n\ntype Web3LegacySend = (request: any, callback: (error: Error, response: any) => void) => void;\n\nfunction buildWeb3LegacyFetcher(provider: ExternalProvider, sendFunc: Web3LegacySend) : JsonRpcFetchFunc {\n    const fetcher = \"Web3LegacyFetcher\";\n\n    return function(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n\n            sendFunc(request, (error, response) => {\n\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n\n                    return reject(error);\n                }\n\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    (<any>error).code = response.error.code;\n                    (<any>error).data = response.error.data;\n                    return reject(error);\n                }\n\n                resolve(response.result);\n            });\n        });\n    }\n}\n\nfunction buildEip1193Fetcher(provider: ExternalProvider): JsonRpcFetchFunc {\n    return function(method: string, params: Array<any>): Promise<any> {\n        if (params == null) { params = [ ]; }\n\n        const request = { method, params };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n\n            return response;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n\n            throw error;\n        });\n    }\n}\n\nexport class Web3Provider extends JsonRpcProvider {\n    readonly provider: ExternalProvider;\n    readonly jsonRpcFetchFunc: JsonRpcFetchFunc;\n\n    constructor(provider: ExternalProvider | JsonRpcFetchFunc, network?: Networkish) {\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n\n        let path: string = null;\n        let jsonRpcFetchFunc: JsonRpcFetchFunc = null;\n        let subprovider: ExternalProvider = null;\n\n        if (typeof(provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n\n        } else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n\n            subprovider = provider;\n\n            if (provider.request) {\n                if (path === \"\") { path = \"eip-1193:\"; }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            } else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            } else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            } else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n\n            if (!path) { path = \"unknown:\"; }\n        }\n\n        super(path, network);\n\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5841, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5847, "column": 0}, "map": {"version":3,"file":"ipc-provider.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/browser-ipc-provider.ts"],"sourcesContent":["\"use strict\";\n\nconst IpcProvider: any = null;\n\nexport {\n    IpcProvider\n};\n"],"names":[],"mappings":";;;AAAA,YAAY,CAAC;AAEb,MAAM,WAAW,GAAQ,IAAI,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5854, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5860, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/index.ts"],"sourcesContent":["\"use strict\";\n\nimport {\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    Provider,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse\n} from \"@ethersproject/abstract-provider\";\n\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\n\nimport { BaseProvider, EnsProvider, EnsResolver, Resolver } from \"./base-provider\";\n\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { AnkrProvider } from \"./ankr-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider, FallbackProviderConfig } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { JsonRpcBatchProvider } from \"./json-rpc-batch-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { ExternalProvider, JsonRpcFetchFunc } from \"./web3-provider\";\n\nimport { CommunityResourcable, Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n////////////////////////\n// Helper Functions\n\nfunction getDefaultProvider(network?: Networkish, options?: any): BaseProvider {\n    if (network == null) { network = \"homestead\"; }\n\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof(network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1].toLowerCase()) {\n                case \"http\": case \"https\":\n                    return new JsonRpcProvider(network);\n                case \"ws\": case \"wss\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n\n    return n._defaultProvider({\n        FallbackProvider,\n\n        AlchemyProvider,\n        AnkrProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n\n        IpcProvider,\n    }, options);\n}\n\n////////////////////////\n// Exports\n\nexport {\n\n    // Abstract Providers (or Abstract-ish)\n    Provider,\n    BaseProvider,\n\n    Resolver,\n\n    UrlJsonRpcProvider,\n\n    ///////////////////////\n    // Concrete Providers\n\n    FallbackProvider,\n\n    AlchemyProvider,\n    AlchemyWebSocketProvider,\n    AnkrProvider,\n    CloudflareProvider,\n    EtherscanProvider,\n    InfuraProvider,\n    InfuraWebSocketProvider,\n    JsonRpcProvider,\n    JsonRpcBatchProvider,\n    NodesmithProvider,\n    PocketProvider,\n    StaticJsonRpcProvider,\n    Web3Provider,\n    WebSocketProvider,\n\n    IpcProvider,\n\n\n    ///////////////////////\n    // Signer\n\n    JsonRpcSigner,\n\n\n    ///////////////////////\n    // Functions\n\n    getDefaultProvider,\n    getNetwork,\n    isCommunityResource,\n    isCommunityResourcable,\n    showThrottleMessage,\n\n\n    ///////////////////////\n    // Objects\n\n    Formatter,\n\n\n    ///////////////////////\n    // Types\n\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse,\n\n    ExternalProvider,\n    JsonRpcFetchFunc,\n\n    FallbackProviderConfig,\n\n    Network,\n    Networkish,\n\n    EnsProvider,\n    EnsResolver,\n\n    CommunityResourcable\n};\n\n"],"names":[],"mappings":";;;AAuCA,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAZrC,OAAO,EAAE,eAAe,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAMrE,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AAlBzD,OAAO,EAAE,UAAU,EAAE,MAAM,yBAAyB,CAAC;AASrD,OAAO,EAAE,gBAAgB,EAA0B,MAAM,qBAAqB,CAAC;AAJ/E,OAAO,EAAE,eAAe,EAAE,wBAAwB,EAAE,MAAM,oBAAoB,CAAC;AAC/E,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,kBAAkB,EAAE,MAAM,uBAAuB,CAAC;AAC3D,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AAGzD,OAAO,EAAE,cAAc,EAAE,uBAAuB,EAAE,MAAM,mBAAmB,CAAC;AAG5E,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AACzD,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAEnD,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAP/C,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AA1B7C,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;AAyCb,MAAM,MAAM,GAAG,qKAAI,SAAM,wKAAC,UAAO,CAAC,CAAC;AAEnC,wBAAwB;AACxB,mBAAmB;AAEnB,SAAS,kBAAkB,CAAC,OAAoB,EAAE,OAAa;IAC3D,IAAI,OAAO,IAAI,IAAI,EAAE;QAAE,OAAO,GAAG,WAAW,CAAC;KAAE;IAE/C,6EAA6E;IAC7E,IAAI,OAAM,AAAC,OAAO,CAAC,IAAK,QAAQ,EAAE;QAC9B,kEAAkE;QAElE,iDAAiD;QACjD,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QAC9C,IAAI,KAAK,EAAE;YACP,OAAQ,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE;gBAC5B,KAAK,MAAM,CAAC;gBAAC,KAAK,OAAO;oBACrB,OAAO,0LAAI,kBAAe,CAAC,OAAO,CAAC,CAAC;gBACxC,KAAK,IAAI,CAAC;gBAAC,KAAK,KAAK;oBACjB,OAAO,IAAI,wMAAiB,CAAC,OAAO,CAAC,CAAC;gBAC1C;oBACI,MAAM,CAAC,kBAAkB,CAAC,wBAAwB,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;aAC/E;SACJ;KACJ;IAED,MAAM,CAAC,0KAAG,aAAA,AAAU,EAAC,OAAO,CAAC,CAAC;IAC9B,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB,EAAE;QAC3B,MAAM,CAAC,UAAU,CAAC,wCAAwC,mKAAE,SAAM,CAAC,MAAM,CAAC,aAAa,EAAE;YACrF,SAAS,EAAE,oBAAoB;YAC/B,OAAO,EAAE,OAAO;SACnB,CAAC,CAAC;KACN;IAED,OAAO,CAAC,CAAC,gBAAgB,CAAC;6MACtB,mBAAgB;2MAEhB,kBAAe;qMACf,eAAY;QACZ,8NAAkB;+MAClB,oBAAiB;yMACjB,iBAAc;+MACd,kBAAe;+MACf,oBAAiB;yMACjB,iBAAc;qMACd,eAAY;mMAEZ,cAAW;KACd,EAAE,OAAO,CAAC,CAAC;AAChB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5947, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5961, "column": 0}, "map": {"version":3,"file":"json-rpc-batch-provider.js","sources":["file:///Users/hazobaykulov/www/reclaim/drops-dashboard/node_modules/%40ethersproject/providers/src.ts/json-rpc-batch-provider.ts"],"sourcesContent":["\nimport { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Experimental\n\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    _pendingBatchAggregator: NodeJS.Timer;\n    _pendingBatch: Array<{\n        request: { method: string, params: Array<any>, id: number, jsonrpc: \"2.0\" },\n        resolve: (result: any) => void,\n        reject: (error: Error) => void\n    }>;\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [ ];\n        }\n\n        const inflightRequest: any = { request, resolve: null, reject: null };\n\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n\n        this._pendingBatch.push(inflightRequest);\n\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            (<any>error).code = payload.error.code;\n                            (<any>error).data = payload.error.data;\n                            inflightRequest.reject(error);\n                        } else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n\n            }, 10);\n        }\n\n        return promise;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6042, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}